(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const E of document.querySelectorAll('link[rel="modulepreload"]'))r(E);new MutationObserver(E=>{for(const n of E)if(n.type==="childList")for(const i of n.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function s(E){const n={};return E.integrity&&(n.integrity=E.integrity),E.referrerPolicy&&(n.referrerPolicy=E.referrerPolicy),E.crossOrigin==="use-credentials"?n.credentials="include":E.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(E){if(E.ep)return;E.ep=!0;const n=s(E);fetch(E.href,n)}})();/**
* @vue/shared v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function pT(t){const e=Object.create(null);for(const s of t.split(","))e[s]=1;return s=>s in e}const Ne={},Nr=[],Jt=()=>{},bI=()=>!1,Wn=t=>t.charCodeAt(0)===111&&t.charCodeAt(1)===110&&(t.charCodeAt(2)>122||t.charCodeAt(2)<97),PT=t=>t.startsWith("onUpdate:"),Qe=Object.assign,MT=(t,e)=>{const s=t.indexOf(e);s>-1&&t.splice(s,1)},gI=Object.prototype.hasOwnProperty,ie=(t,e)=>gI.call(t,e),q=Array.isArray,cr=t=>xn(t)==="[object Map]",nR=t=>xn(t)==="[object Set]",Q=t=>typeof t=="function",ye=t=>typeof t=="string",Ds=t=>typeof t=="symbol",Pe=t=>t!==null&&typeof t=="object",iR=t=>(Pe(t)||Q(t))&&Q(t.then)&&Q(t.catch),TR=Object.prototype.toString,xn=t=>TR.call(t),HI=t=>xn(t).slice(8,-1),oR=t=>xn(t)==="[object Object]",UT=t=>ye(t)&&t!=="NaN"&&t[0]!=="-"&&""+parseInt(t,10)===t,eE=pT(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Xn=t=>{const e=Object.create(null);return s=>e[s]||(e[s]=t(s))},YI=/-(\w)/g,Ct=Xn(t=>t.replace(YI,(e,s)=>s?s.toUpperCase():"")),vI=/\B([A-Z])/g,ps=Xn(t=>t.replace(vI,"-$1").toLowerCase()),Kn=Xn(t=>t.charAt(0).toUpperCase()+t.slice(1)),oi=Xn(t=>t?`on${Kn(t)}`:""),vs=(t,e)=>!Object.is(t,e),HE=(t,...e)=>{for(let s=0;s<t.length;s++)t[s](...e)},aR=(t,e,s,r=!1)=>{Object.defineProperty(t,e,{configurable:!0,enumerable:!1,writable:r,value:s})},Zi=t=>{const e=parseFloat(t);return isNaN(e)?t:e};let ho;const $n=()=>ho||(ho=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function yT(t){if(q(t)){const e={};for(let s=0;s<t.length;s++){const r=t[s],E=ye(r)?xI(r):yT(r);if(E)for(const n in E)e[n]=E[n]}return e}else if(ye(t)||Pe(t))return t}const wI=/;(?![^(]*\))/g,VI=/:([^]+)/,WI=/\/\*[^]*?\*\//g;function xI(t){const e={};return t.replace(WI,"").split(wI).forEach(s=>{if(s){const r=s.split(VI);r.length>1&&(e[r[0].trim()]=r[1].trim())}}),e}function mT(t){let e="";if(ye(t))e=t;else if(q(t))for(let s=0;s<t.length;s++){const r=mT(t[s]);r&&(e+=r+" ")}else if(Pe(t))for(const s in t)t[s]&&(e+=s+" ");return e.trim()}const XI="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",KI=pT(XI);function RR(t){return!!t||t===""}const AR=t=>!!(t&&t.__v_isRef===!0),ct=t=>ye(t)?t:t==null?"":q(t)||Pe(t)&&(t.toString===TR||!Q(t.toString))?AR(t)?ct(t.value):JSON.stringify(t,SR,2):String(t),SR=(t,e)=>AR(e)?SR(t,e.value):cr(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((s,[r,E],n)=>(s[ai(r,n)+" =>"]=E,s),{})}:nR(e)?{[`Set(${e.size})`]:[...e.values()].map(s=>ai(s))}:Ds(e)?ai(e):Pe(e)&&!q(e)&&!oR(e)?String(e):e,ai=(t,e="")=>{var s;return Ds(t)?`Symbol(${(s=t.description)!=null?s:e})`:t};/**
* @vue/reactivity v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Rt;class $I{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=Rt,!e&&Rt&&(this.index=(Rt.scopes||(Rt.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let e,s;if(this.scopes)for(e=0,s=this.scopes.length;e<s;e++)this.scopes[e].pause();for(e=0,s=this.effects.length;e<s;e++)this.effects[e].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let e,s;if(this.scopes)for(e=0,s=this.scopes.length;e<s;e++)this.scopes[e].resume();for(e=0,s=this.effects.length;e<s;e++)this.effects[e].resume()}}run(e){if(this._active){const s=Rt;try{return Rt=this,e()}finally{Rt=s}}}on(){Rt=this}off(){Rt=this.parent}stop(e){if(this._active){this._active=!1;let s,r;for(s=0,r=this.effects.length;s<r;s++)this.effects[s].stop();for(this.effects.length=0,s=0,r=this.cleanups.length;s<r;s++)this.cleanups[s]();if(this.cleanups.length=0,this.scopes){for(s=0,r=this.scopes.length;s<r;s++)this.scopes[s].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!e){const E=this.parent.scopes.pop();E&&E!==this&&(this.parent.scopes[this.index]=E,E.index=this.index)}this.parent=void 0}}}function JI(){return Rt}let de;const Ri=new WeakSet;class IR{constructor(e){this.fn=e,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,Rt&&Rt.active&&Rt.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,Ri.has(this)&&(Ri.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||NR(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,Do(this),cR(this);const e=de,s=pt;de=this,pt=!0;try{return this.fn()}finally{uR(this),de=e,pt=s,this.flags&=-3}}stop(){if(this.flags&1){for(let e=this.deps;e;e=e.nextDep)GT(e);this.deps=this.depsTail=void 0,Do(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?Ri.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){zi(this)&&this.run()}get dirty(){return zi(this)}}let lR=0,tE,sE;function NR(t,e=!1){if(t.flags|=8,e){t.next=sE,sE=t;return}t.next=tE,tE=t}function BT(){lR++}function FT(){if(--lR>0)return;if(sE){let e=sE;for(sE=void 0;e;){const s=e.next;e.next=void 0,e.flags&=-9,e=s}}let t;for(;tE;){let e=tE;for(tE=void 0;e;){const s=e.next;if(e.next=void 0,e.flags&=-9,e.flags&1)try{e.trigger()}catch(r){t||(t=r)}e=s}}if(t)throw t}function cR(t){for(let e=t.deps;e;e=e.nextDep)e.version=-1,e.prevActiveLink=e.dep.activeLink,e.dep.activeLink=e}function uR(t){let e,s=t.depsTail,r=s;for(;r;){const E=r.prevDep;r.version===-1?(r===s&&(s=E),GT(r),kI(r)):e=r,r.dep.activeLink=r.prevActiveLink,r.prevActiveLink=void 0,r=E}t.deps=e,t.depsTail=s}function zi(t){for(let e=t.deps;e;e=e.nextDep)if(e.dep.version!==e.version||e.dep.computed&&(_R(e.dep.computed)||e.dep.version!==e.version))return!0;return!!t._dirty}function _R(t){if(t.flags&4&&!(t.flags&16)||(t.flags&=-17,t.globalVersion===oE))return;t.globalVersion=oE;const e=t.dep;if(t.flags|=2,e.version>0&&!t.isSSR&&t.deps&&!zi(t)){t.flags&=-3;return}const s=de,r=pt;de=t,pt=!0;try{cR(t);const E=t.fn(t._value);(e.version===0||vs(E,t._value))&&(t._value=E,e.version++)}catch(E){throw e.version++,E}finally{de=s,pt=r,uR(t),t.flags&=-3}}function GT(t,e=!1){const{dep:s,prevSub:r,nextSub:E}=t;if(r&&(r.nextSub=E,t.prevSub=void 0),E&&(E.prevSub=r,t.nextSub=void 0),s.subs===t&&(s.subs=r,!r&&s.computed)){s.computed.flags&=-5;for(let n=s.computed.deps;n;n=n.nextDep)GT(n,!0)}!e&&!--s.sc&&s.map&&s.map.delete(s.key)}function kI(t){const{prevDep:e,nextDep:s}=t;e&&(e.nextDep=s,t.prevDep=void 0),s&&(s.prevDep=e,t.nextDep=void 0)}let pt=!0;const LR=[];function Ps(){LR.push(pt),pt=!1}function Ms(){const t=LR.pop();pt=t===void 0?!0:t}function Do(t){const{cleanup:e}=t;if(t.cleanup=void 0,e){const s=de;de=void 0;try{e()}finally{de=s}}}let oE=0;class qI{constructor(e,s){this.sub=e,this.dep=s,this.version=s.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class dR{constructor(e){this.computed=e,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0}track(e){if(!de||!pt||de===this.computed)return;let s=this.activeLink;if(s===void 0||s.sub!==de)s=this.activeLink=new qI(de,this),de.deps?(s.prevDep=de.depsTail,de.depsTail.nextDep=s,de.depsTail=s):de.deps=de.depsTail=s,CR(s);else if(s.version===-1&&(s.version=this.version,s.nextDep)){const r=s.nextDep;r.prevDep=s.prevDep,s.prevDep&&(s.prevDep.nextDep=r),s.prevDep=de.depsTail,s.nextDep=void 0,de.depsTail.nextDep=s,de.depsTail=s,de.deps===s&&(de.deps=r)}return s}trigger(e){this.version++,oE++,this.notify(e)}notify(e){BT();try{for(let s=this.subs;s;s=s.prevSub)s.sub.notify()&&s.sub.dep.notify()}finally{FT()}}}function CR(t){if(t.dep.sc++,t.sub.flags&4){const e=t.dep.computed;if(e&&!t.dep.subs){e.flags|=20;for(let r=e.deps;r;r=r.nextDep)CR(r)}const s=t.dep.subs;s!==t&&(t.prevSub=s,s&&(s.nextSub=t)),t.dep.subs=t}}const eT=new WeakMap,ws=Symbol(""),tT=Symbol(""),aE=Symbol("");function He(t,e,s){if(pt&&de){let r=eT.get(t);r||eT.set(t,r=new Map);let E=r.get(s);E||(r.set(s,E=new dR),E.map=r,E.key=s),E.track()}}function Es(t,e,s,r,E,n){const i=eT.get(t);if(!i){oE++;return}const T=o=>{o&&o.trigger()};if(BT(),e==="clear")i.forEach(T);else{const o=q(t),a=o&&UT(s);if(o&&s==="length"){const R=Number(r);i.forEach((A,l)=>{(l==="length"||l===aE||!Ds(l)&&l>=R)&&T(A)})}else switch((s!==void 0||i.has(void 0))&&T(i.get(s)),a&&T(i.get(aE)),e){case"add":o?a&&T(i.get("length")):(T(i.get(ws)),cr(t)&&T(i.get(tT)));break;case"delete":o||(T(i.get(ws)),cr(t)&&T(i.get(tT)));break;case"set":cr(t)&&T(i.get(ws));break}}FT()}function qs(t){const e=le(t);return e===t?e:(He(e,"iterate",aE),Pt(t)?e:e.map(et))}function Jn(t){return He(t=le(t),"iterate",aE),t}const QI={__proto__:null,[Symbol.iterator](){return Ai(this,Symbol.iterator,et)},concat(...t){return qs(this).concat(...t.map(e=>q(e)?qs(e):e))},entries(){return Ai(this,"entries",t=>(t[1]=et(t[1]),t))},every(t,e){return Zt(this,"every",t,e,void 0,arguments)},filter(t,e){return Zt(this,"filter",t,e,s=>s.map(et),arguments)},find(t,e){return Zt(this,"find",t,e,et,arguments)},findIndex(t,e){return Zt(this,"findIndex",t,e,void 0,arguments)},findLast(t,e){return Zt(this,"findLast",t,e,et,arguments)},findLastIndex(t,e){return Zt(this,"findLastIndex",t,e,void 0,arguments)},forEach(t,e){return Zt(this,"forEach",t,e,void 0,arguments)},includes(...t){return Si(this,"includes",t)},indexOf(...t){return Si(this,"indexOf",t)},join(t){return qs(this).join(t)},lastIndexOf(...t){return Si(this,"lastIndexOf",t)},map(t,e){return Zt(this,"map",t,e,void 0,arguments)},pop(){return Vr(this,"pop")},push(...t){return Vr(this,"push",t)},reduce(t,...e){return po(this,"reduce",t,e)},reduceRight(t,...e){return po(this,"reduceRight",t,e)},shift(){return Vr(this,"shift")},some(t,e){return Zt(this,"some",t,e,void 0,arguments)},splice(...t){return Vr(this,"splice",t)},toReversed(){return qs(this).toReversed()},toSorted(t){return qs(this).toSorted(t)},toSpliced(...t){return qs(this).toSpliced(...t)},unshift(...t){return Vr(this,"unshift",t)},values(){return Ai(this,"values",et)}};function Ai(t,e,s){const r=Jn(t),E=r[e]();return r!==t&&!Pt(t)&&(E._next=E.next,E.next=()=>{const n=E._next();return n.value&&(n.value=s(n.value)),n}),E}const jI=Array.prototype;function Zt(t,e,s,r,E,n){const i=Jn(t),T=i!==t&&!Pt(t),o=i[e];if(o!==jI[e]){const A=o.apply(t,n);return T?et(A):A}let a=s;i!==t&&(T?a=function(A,l){return s.call(this,et(A),l,t)}:s.length>2&&(a=function(A,l){return s.call(this,A,l,t)}));const R=o.call(i,a,r);return T&&E?E(R):R}function po(t,e,s,r){const E=Jn(t);let n=s;return E!==t&&(Pt(t)?s.length>3&&(n=function(i,T,o){return s.call(this,i,T,o,t)}):n=function(i,T,o){return s.call(this,i,et(T),o,t)}),E[e](n,...r)}function Si(t,e,s){const r=le(t);He(r,"iterate",aE);const E=r[e](...s);return(E===-1||E===!1)&&YT(s[0])?(s[0]=le(s[0]),r[e](...s)):E}function Vr(t,e,s=[]){Ps(),BT();const r=le(t)[e].apply(t,s);return FT(),Ms(),r}const ZI=pT("__proto__,__v_isRef,__isVue"),fR=new Set(Object.getOwnPropertyNames(Symbol).filter(t=>t!=="arguments"&&t!=="caller").map(t=>Symbol[t]).filter(Ds));function zI(t){Ds(t)||(t=String(t));const e=le(this);return He(e,"has",t),e.hasOwnProperty(t)}class hR{constructor(e=!1,s=!1){this._isReadonly=e,this._isShallow=s}get(e,s,r){if(s==="__v_skip")return e.__v_skip;const E=this._isReadonly,n=this._isShallow;if(s==="__v_isReactive")return!E;if(s==="__v_isReadonly")return E;if(s==="__v_isShallow")return n;if(s==="__v_raw")return r===(E?n?aO:MR:n?PR:pR).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(r)?e:void 0;const i=q(e);if(!E){let o;if(i&&(o=QI[s]))return o;if(s==="hasOwnProperty")return zI}const T=Reflect.get(e,s,qe(e)?e:r);return(Ds(s)?fR.has(s):ZI(s))||(E||He(e,"get",s),n)?T:qe(T)?i&&UT(s)?T:T.value:Pe(T)?E?UR(T):gT(T):T}}class DR extends hR{constructor(e=!1){super(!1,e)}set(e,s,r,E){let n=e[s];if(!this._isShallow){const o=pr(n);if(!Pt(r)&&!pr(r)&&(n=le(n),r=le(r)),!q(e)&&qe(n)&&!qe(r))return o?!1:(n.value=r,!0)}const i=q(e)&&UT(s)?Number(s)<e.length:ie(e,s),T=Reflect.set(e,s,r,qe(e)?e:E);return e===le(E)&&(i?vs(r,n)&&Es(e,"set",s,r):Es(e,"add",s,r)),T}deleteProperty(e,s){const r=ie(e,s);e[s];const E=Reflect.deleteProperty(e,s);return E&&r&&Es(e,"delete",s,void 0),E}has(e,s){const r=Reflect.has(e,s);return(!Ds(s)||!fR.has(s))&&He(e,"has",s),r}ownKeys(e){return He(e,"iterate",q(e)?"length":ws),Reflect.ownKeys(e)}}class eO extends hR{constructor(e=!1){super(!0,e)}set(e,s){return!0}deleteProperty(e,s){return!0}}const tO=new DR,sO=new eO,rO=new DR(!0);const sT=t=>t,mE=t=>Reflect.getPrototypeOf(t);function EO(t,e,s){return function(...r){const E=this.__v_raw,n=le(E),i=cr(n),T=t==="entries"||t===Symbol.iterator&&i,o=t==="keys"&&i,a=E[t](...r),R=s?sT:e?rT:et;return!e&&He(n,"iterate",o?tT:ws),{next(){const{value:A,done:l}=a.next();return l?{value:A,done:l}:{value:T?[R(A[0]),R(A[1])]:R(A),done:l}},[Symbol.iterator](){return this}}}}function BE(t){return function(...e){return t==="delete"?!1:t==="clear"?void 0:this}}function nO(t,e){const s={get(E){const n=this.__v_raw,i=le(n),T=le(E);t||(vs(E,T)&&He(i,"get",E),He(i,"get",T));const{has:o}=mE(i),a=e?sT:t?rT:et;if(o.call(i,E))return a(n.get(E));if(o.call(i,T))return a(n.get(T));n!==i&&n.get(E)},get size(){const E=this.__v_raw;return!t&&He(le(E),"iterate",ws),Reflect.get(E,"size",E)},has(E){const n=this.__v_raw,i=le(n),T=le(E);return t||(vs(E,T)&&He(i,"has",E),He(i,"has",T)),E===T?n.has(E):n.has(E)||n.has(T)},forEach(E,n){const i=this,T=i.__v_raw,o=le(T),a=e?sT:t?rT:et;return!t&&He(o,"iterate",ws),T.forEach((R,A)=>E.call(n,a(R),a(A),i))}};return Qe(s,t?{add:BE("add"),set:BE("set"),delete:BE("delete"),clear:BE("clear")}:{add(E){!e&&!Pt(E)&&!pr(E)&&(E=le(E));const n=le(this);return mE(n).has.call(n,E)||(n.add(E),Es(n,"add",E,E)),this},set(E,n){!e&&!Pt(n)&&!pr(n)&&(n=le(n));const i=le(this),{has:T,get:o}=mE(i);let a=T.call(i,E);a||(E=le(E),a=T.call(i,E));const R=o.call(i,E);return i.set(E,n),a?vs(n,R)&&Es(i,"set",E,n):Es(i,"add",E,n),this},delete(E){const n=le(this),{has:i,get:T}=mE(n);let o=i.call(n,E);o||(E=le(E),o=i.call(n,E)),T&&T.call(n,E);const a=n.delete(E);return o&&Es(n,"delete",E,void 0),a},clear(){const E=le(this),n=E.size!==0,i=E.clear();return n&&Es(E,"clear",void 0,void 0),i}}),["keys","values","entries",Symbol.iterator].forEach(E=>{s[E]=EO(E,t,e)}),s}function bT(t,e){const s=nO(t,e);return(r,E,n)=>E==="__v_isReactive"?!t:E==="__v_isReadonly"?t:E==="__v_raw"?r:Reflect.get(ie(s,E)&&E in r?s:r,E,n)}const iO={get:bT(!1,!1)},TO={get:bT(!1,!0)},oO={get:bT(!0,!1)};const pR=new WeakMap,PR=new WeakMap,MR=new WeakMap,aO=new WeakMap;function RO(t){switch(t){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function AO(t){return t.__v_skip||!Object.isExtensible(t)?0:RO(HI(t))}function gT(t){return pr(t)?t:HT(t,!1,tO,iO,pR)}function SO(t){return HT(t,!1,rO,TO,PR)}function UR(t){return HT(t,!0,sO,oO,MR)}function HT(t,e,s,r,E){if(!Pe(t)||t.__v_raw&&!(e&&t.__v_isReactive))return t;const n=E.get(t);if(n)return n;const i=AO(t);if(i===0)return t;const T=new Proxy(t,i===2?r:s);return E.set(t,T),T}function ur(t){return pr(t)?ur(t.__v_raw):!!(t&&t.__v_isReactive)}function pr(t){return!!(t&&t.__v_isReadonly)}function Pt(t){return!!(t&&t.__v_isShallow)}function YT(t){return t?!!t.__v_raw:!1}function le(t){const e=t&&t.__v_raw;return e?le(e):t}function IO(t){return!ie(t,"__v_skip")&&Object.isExtensible(t)&&aR(t,"__v_skip",!0),t}const et=t=>Pe(t)?gT(t):t,rT=t=>Pe(t)?UR(t):t;function qe(t){return t?t.__v_isRef===!0:!1}function OO(t){return qe(t)?t.value:t}const lO={get:(t,e,s)=>e==="__v_raw"?t:OO(Reflect.get(t,e,s)),set:(t,e,s,r)=>{const E=t[e];return qe(E)&&!qe(s)?(E.value=s,!0):Reflect.set(t,e,s,r)}};function yR(t){return ur(t)?t:new Proxy(t,lO)}class NO{constructor(e,s,r){this.fn=e,this.setter=s,this._value=void 0,this.dep=new dR(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=oE-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!s,this.isSSR=r}notify(){if(this.flags|=16,!(this.flags&8)&&de!==this)return NR(this,!0),!0}get value(){const e=this.dep.track();return _R(this),e&&(e.version=this.dep.version),this._value}set value(e){this.setter&&this.setter(e)}}function cO(t,e,s=!1){let r,E;return Q(t)?r=t:(r=t.get,E=t.set),new NO(r,E,s)}const FE={},sn=new WeakMap;let Hs;function uO(t,e=!1,s=Hs){if(s){let r=sn.get(s);r||sn.set(s,r=[]),r.push(t)}}function _O(t,e,s=Ne){const{immediate:r,deep:E,once:n,scheduler:i,augmentJob:T,call:o}=s,a=F=>E?F:Pt(F)||E===!1||E===0?ns(F,1):ns(F);let R,A,l,u,h=!1,U=!1;if(qe(t)?(A=()=>t.value,h=Pt(t)):ur(t)?(A=()=>a(t),h=!0):q(t)?(U=!0,h=t.some(F=>ur(F)||Pt(F)),A=()=>t.map(F=>{if(qe(F))return F.value;if(ur(F))return a(F);if(Q(F))return o?o(F,2):F()})):Q(t)?e?A=o?()=>o(t,2):t:A=()=>{if(l){Ps();try{l()}finally{Ms()}}const F=Hs;Hs=R;try{return o?o(t,3,[u]):t(u)}finally{Hs=F}}:A=Jt,e&&E){const F=A,Ce=E===!0?1/0:E;A=()=>ns(F(),Ce)}const j=JI(),B=()=>{R.stop(),j&&j.active&&MT(j.effects,R)};if(n&&e){const F=e;e=(...Ce)=>{F(...Ce),B()}}let k=U?new Array(t.length).fill(FE):FE;const re=F=>{if(!(!(R.flags&1)||!R.dirty&&!F))if(e){const Ce=R.run();if(E||h||(U?Ce.some((mt,nt)=>vs(mt,k[nt])):vs(Ce,k))){l&&l();const mt=Hs;Hs=R;try{const nt=[Ce,k===FE?void 0:U&&k[0]===FE?[]:k,u];o?o(e,3,nt):e(...nt),k=Ce}finally{Hs=mt}}}else R.run()};return T&&T(re),R=new IR(A),R.scheduler=i?()=>i(re,!1):re,u=F=>uO(F,!1,R),l=R.onStop=()=>{const F=sn.get(R);if(F){if(o)o(F,4);else for(const Ce of F)Ce();sn.delete(R)}},e?r?re(!0):k=R.run():i?i(re.bind(null,!0),!0):R.run(),B.pause=R.pause.bind(R),B.resume=R.resume.bind(R),B.stop=B,B}function ns(t,e=1/0,s){if(e<=0||!Pe(t)||t.__v_skip||(s=s||new Set,s.has(t)))return t;if(s.add(t),e--,qe(t))ns(t.value,e,s);else if(q(t))for(let r=0;r<t.length;r++)ns(t[r],e,s);else if(nR(t)||cr(t))t.forEach(r=>{ns(r,e,s)});else if(oR(t)){for(const r in t)ns(t[r],e,s);for(const r of Object.getOwnPropertySymbols(t))Object.prototype.propertyIsEnumerable.call(t,r)&&ns(t[r],e,s)}return t}/**
* @vue/runtime-core v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function _E(t,e,s,r){try{return r?t(...r):t()}catch(E){kn(E,e,s)}}function kt(t,e,s,r){if(Q(t)){const E=_E(t,e,s,r);return E&&iR(E)&&E.catch(n=>{kn(n,e,s)}),E}if(q(t)){const E=[];for(let n=0;n<t.length;n++)E.push(kt(t[n],e,s,r));return E}}function kn(t,e,s,r=!0){const E=e?e.vnode:null,{errorHandler:n,throwUnhandledErrorInProduction:i}=e&&e.appContext.config||Ne;if(e){let T=e.parent;const o=e.proxy,a=`https://vuejs.org/error-reference/#runtime-${s}`;for(;T;){const R=T.ec;if(R){for(let A=0;A<R.length;A++)if(R[A](t,o,a)===!1)return}T=T.parent}if(n){Ps(),_E(n,null,10,[t,o,a]),Ms();return}}LO(t,s,E,r,i)}function LO(t,e,s,r=!0,E=!1){if(E)throw t;console.error(t)}const Xe=[];let Yt=-1;const _r=[];let cs=null,er=0;const mR=Promise.resolve();let rn=null;function dO(t){const e=rn||mR;return t?e.then(this?t.bind(this):t):e}function CO(t){let e=Yt+1,s=Xe.length;for(;e<s;){const r=e+s>>>1,E=Xe[r],n=RE(E);n<t||n===t&&E.flags&2?e=r+1:s=r}return e}function vT(t){if(!(t.flags&1)){const e=RE(t),s=Xe[Xe.length-1];!s||!(t.flags&2)&&e>=RE(s)?Xe.push(t):Xe.splice(CO(e),0,t),t.flags|=1,BR()}}function BR(){rn||(rn=mR.then(GR))}function fO(t){q(t)?_r.push(...t):cs&&t.id===-1?cs.splice(er+1,0,t):t.flags&1||(_r.push(t),t.flags|=1),BR()}function Po(t,e,s=Yt+1){for(;s<Xe.length;s++){const r=Xe[s];if(r&&r.flags&2){if(t&&r.id!==t.uid)continue;Xe.splice(s,1),s--,r.flags&4&&(r.flags&=-2),r(),r.flags&4||(r.flags&=-2)}}}function FR(t){if(_r.length){const e=[...new Set(_r)].sort((s,r)=>RE(s)-RE(r));if(_r.length=0,cs){cs.push(...e);return}for(cs=e,er=0;er<cs.length;er++){const s=cs[er];s.flags&4&&(s.flags&=-2),s.flags&8||s(),s.flags&=-2}cs=null,er=0}}const RE=t=>t.id==null?t.flags&2?-1:1/0:t.id;function GR(t){try{for(Yt=0;Yt<Xe.length;Yt++){const e=Xe[Yt];e&&!(e.flags&8)&&(e.flags&4&&(e.flags&=-2),_E(e,e.i,e.i?15:14),e.flags&4||(e.flags&=-2))}}finally{for(;Yt<Xe.length;Yt++){const e=Xe[Yt];e&&(e.flags&=-2)}Yt=-1,Xe.length=0,FR(),rn=null,(Xe.length||_r.length)&&GR()}}let St=null,bR=null;function En(t){const e=St;return St=t,bR=t&&t.type.__scopeId||null,e}function hO(t,e=St,s){if(!e||t._n)return t;const r=(...E)=>{r._d&&Ho(-1);const n=En(e);let i;try{i=t(...E)}finally{En(n),r._d&&Ho(1)}return i};return r._n=!0,r._c=!0,r._d=!0,r}function DO(t,e){if(St===null)return t;const s=zn(St),r=t.dirs||(t.dirs=[]);for(let E=0;E<e.length;E++){let[n,i,T,o=Ne]=e[E];n&&(Q(n)&&(n={mounted:n,updated:n}),n.deep&&ns(i),r.push({dir:n,instance:s,value:i,oldValue:void 0,arg:T,modifiers:o}))}return t}function Fs(t,e,s,r){const E=t.dirs,n=e&&e.dirs;for(let i=0;i<E.length;i++){const T=E[i];n&&(T.oldValue=n[i].value);let o=T.dir[r];o&&(Ps(),kt(o,s,8,[t.el,T,t,e]),Ms())}}const pO=Symbol("_vte"),PO=t=>t.__isTeleport;function wT(t,e){t.shapeFlag&6&&t.component?(t.transition=e,wT(t.component.subTree,e)):t.shapeFlag&128?(t.ssContent.transition=e.clone(t.ssContent),t.ssFallback.transition=e.clone(t.ssFallback)):t.transition=e}function gR(t){t.ids=[t.ids[0]+t.ids[2]+++"-",0,0]}function nn(t,e,s,r,E=!1){if(q(t)){t.forEach((h,U)=>nn(h,e&&(q(e)?e[U]:e),s,r,E));return}if(rE(r)&&!E){r.shapeFlag&512&&r.type.__asyncResolved&&r.component.subTree.component&&nn(t,e,s,r.component.subTree);return}const n=r.shapeFlag&4?zn(r.component):r.el,i=E?null:n,{i:T,r:o}=t,a=e&&e.r,R=T.refs===Ne?T.refs={}:T.refs,A=T.setupState,l=le(A),u=A===Ne?()=>!1:h=>ie(l,h);if(a!=null&&a!==o&&(ye(a)?(R[a]=null,u(a)&&(A[a]=null)):qe(a)&&(a.value=null)),Q(o))_E(o,T,12,[i,R]);else{const h=ye(o),U=qe(o);if(h||U){const j=()=>{if(t.f){const B=h?u(o)?A[o]:R[o]:o.value;E?q(B)&&MT(B,n):q(B)?B.includes(n)||B.push(n):h?(R[o]=[n],u(o)&&(A[o]=R[o])):(o.value=[n],t.k&&(R[t.k]=o.value))}else h?(R[o]=i,u(o)&&(A[o]=i)):U&&(o.value=i,t.k&&(R[t.k]=i))};i?(j.id=-1,ot(j,s)):j()}}}$n().requestIdleCallback;$n().cancelIdleCallback;const rE=t=>!!t.type.__asyncLoader,HR=t=>t.type.__isKeepAlive;function MO(t,e){YR(t,"a",e)}function UO(t,e){YR(t,"da",e)}function YR(t,e,s=Ye){const r=t.__wdc||(t.__wdc=()=>{let E=s;for(;E;){if(E.isDeactivated)return;E=E.parent}return t()});if(qn(e,r,s),s){let E=s.parent;for(;E&&E.parent;)HR(E.parent.vnode)&&yO(r,e,s,E),E=E.parent}}function yO(t,e,s,r){const E=qn(e,t,r,!0);vR(()=>{MT(r[e],E)},s)}function qn(t,e,s=Ye,r=!1){if(s){const E=s[t]||(s[t]=[]),n=e.__weh||(e.__weh=(...i)=>{Ps();const T=LE(s),o=kt(e,s,t,i);return T(),Ms(),o});return r?E.unshift(n):E.push(n),n}}const as=t=>(e,s=Ye)=>{(!SE||t==="sp")&&qn(t,(...r)=>e(...r),s)},mO=as("bm"),BO=as("m"),FO=as("bu"),GO=as("u"),bO=as("bum"),vR=as("um"),gO=as("sp"),HO=as("rtg"),YO=as("rtc");function vO(t,e=Ye){qn("ec",t,e)}const wO="components";function Sr(t,e){return WO(wO,t,!0,e)||t}const VO=Symbol.for("v-ndc");function WO(t,e,s=!0,r=!1){const E=St||Ye;if(E){const n=E.type;{const T=Ul(n,!1);if(T&&(T===e||T===Ct(e)||T===Kn(Ct(e))))return n}const i=Mo(E[t]||n[t],e)||Mo(E.appContext[t],e);return!i&&r?n:i}}function Mo(t,e){return t&&(t[e]||t[Ct(e)]||t[Kn(Ct(e))])}function Lr(t,e,s,r){let E;const n=s,i=q(t);if(i||ye(t)){const T=i&&ur(t);let o=!1;T&&(o=!Pt(t),t=Jn(t)),E=new Array(t.length);for(let a=0,R=t.length;a<R;a++)E[a]=e(o?et(t[a]):t[a],a,void 0,n)}else if(typeof t=="number"){E=new Array(t);for(let T=0;T<t;T++)E[T]=e(T+1,T,void 0,n)}else if(Pe(t))if(t[Symbol.iterator])E=Array.from(t,(T,o)=>e(T,o,void 0,n));else{const T=Object.keys(t);E=new Array(T.length);for(let o=0,a=T.length;o<a;o++){const R=T[o];E[o]=e(t[R],R,o,n)}}else E=[];return E}const ET=t=>t?TA(t)?zn(t):ET(t.parent):null,EE=Qe(Object.create(null),{$:t=>t,$el:t=>t.vnode.el,$data:t=>t.data,$props:t=>t.props,$attrs:t=>t.attrs,$slots:t=>t.slots,$refs:t=>t.refs,$parent:t=>ET(t.parent),$root:t=>ET(t.root),$host:t=>t.ce,$emit:t=>t.emit,$options:t=>VR(t),$forceUpdate:t=>t.f||(t.f=()=>{vT(t.update)}),$nextTick:t=>t.n||(t.n=dO.bind(t.proxy)),$watch:t=>Rl.bind(t)}),Ii=(t,e)=>t!==Ne&&!t.__isScriptSetup&&ie(t,e),xO={get({_:t},e){if(e==="__v_skip")return!0;const{ctx:s,setupState:r,data:E,props:n,accessCache:i,type:T,appContext:o}=t;let a;if(e[0]!=="$"){const u=i[e];if(u!==void 0)switch(u){case 1:return r[e];case 2:return E[e];case 4:return s[e];case 3:return n[e]}else{if(Ii(r,e))return i[e]=1,r[e];if(E!==Ne&&ie(E,e))return i[e]=2,E[e];if((a=t.propsOptions[0])&&ie(a,e))return i[e]=3,n[e];if(s!==Ne&&ie(s,e))return i[e]=4,s[e];nT&&(i[e]=0)}}const R=EE[e];let A,l;if(R)return e==="$attrs"&&He(t.attrs,"get",""),R(t);if((A=T.__cssModules)&&(A=A[e]))return A;if(s!==Ne&&ie(s,e))return i[e]=4,s[e];if(l=o.config.globalProperties,ie(l,e))return l[e]},set({_:t},e,s){const{data:r,setupState:E,ctx:n}=t;return Ii(E,e)?(E[e]=s,!0):r!==Ne&&ie(r,e)?(r[e]=s,!0):ie(t.props,e)||e[0]==="$"&&e.slice(1)in t?!1:(n[e]=s,!0)},has({_:{data:t,setupState:e,accessCache:s,ctx:r,appContext:E,propsOptions:n}},i){let T;return!!s[i]||t!==Ne&&ie(t,i)||Ii(e,i)||(T=n[0])&&ie(T,i)||ie(r,i)||ie(EE,i)||ie(E.config.globalProperties,i)},defineProperty(t,e,s){return s.get!=null?t._.accessCache[e]=0:ie(s,"value")&&this.set(t,e,s.value,null),Reflect.defineProperty(t,e,s)}};function Uo(t){return q(t)?t.reduce((e,s)=>(e[s]=null,e),{}):t}let nT=!0;function XO(t){const e=VR(t),s=t.proxy,r=t.ctx;nT=!1,e.beforeCreate&&yo(e.beforeCreate,t,"bc");const{data:E,computed:n,methods:i,watch:T,provide:o,inject:a,created:R,beforeMount:A,mounted:l,beforeUpdate:u,updated:h,activated:U,deactivated:j,beforeDestroy:B,beforeUnmount:k,destroyed:re,unmounted:F,render:Ce,renderTracked:mt,renderTriggered:nt,errorCaptured:Is,serverPrefetch:pE,expose:ys,inheritAttrs:Hr,components:PE,directives:ME,filters:ii}=e;if(a&&KO(a,r,null),i)for(const De in i){const ue=i[De];Q(ue)&&(r[De]=ue.bind(s))}if(E){const De=E.call(s,s);Pe(De)&&(t.data=gT(De))}if(nT=!0,n)for(const De in n){const ue=n[De],ms=Q(ue)?ue.bind(s,s):Q(ue.get)?ue.get.bind(s,s):Jt,UE=!Q(ue)&&Q(ue.set)?ue.set.bind(s):Jt,Bs=ml({get:ms,set:UE});Object.defineProperty(r,De,{enumerable:!0,configurable:!0,get:()=>Bs.value,set:Bt=>Bs.value=Bt})}if(T)for(const De in T)wR(T[De],r,s,De);if(o){const De=Q(o)?o.call(s):o;Reflect.ownKeys(De).forEach(ue=>{jO(ue,De[ue])})}R&&yo(R,t,"c");function We(De,ue){q(ue)?ue.forEach(ms=>De(ms.bind(s))):ue&&De(ue.bind(s))}if(We(mO,A),We(BO,l),We(FO,u),We(GO,h),We(MO,U),We(UO,j),We(vO,Is),We(YO,mt),We(HO,nt),We(bO,k),We(vR,F),We(gO,pE),q(ys))if(ys.length){const De=t.exposed||(t.exposed={});ys.forEach(ue=>{Object.defineProperty(De,ue,{get:()=>s[ue],set:ms=>s[ue]=ms})})}else t.exposed||(t.exposed={});Ce&&t.render===Jt&&(t.render=Ce),Hr!=null&&(t.inheritAttrs=Hr),PE&&(t.components=PE),ME&&(t.directives=ME),pE&&gR(t)}function KO(t,e,s=Jt){q(t)&&(t=iT(t));for(const r in t){const E=t[r];let n;Pe(E)?"default"in E?n=YE(E.from||r,E.default,!0):n=YE(E.from||r):n=YE(E),qe(n)?Object.defineProperty(e,r,{enumerable:!0,configurable:!0,get:()=>n.value,set:i=>n.value=i}):e[r]=n}}function yo(t,e,s){kt(q(t)?t.map(r=>r.bind(e.proxy)):t.bind(e.proxy),e,s)}function wR(t,e,s,r){let E=r.includes(".")?tA(s,r):()=>s[r];if(ye(t)){const n=e[t];Q(n)&&li(E,n)}else if(Q(t))li(E,t.bind(s));else if(Pe(t))if(q(t))t.forEach(n=>wR(n,e,s,r));else{const n=Q(t.handler)?t.handler.bind(s):e[t.handler];Q(n)&&li(E,n,t)}}function VR(t){const e=t.type,{mixins:s,extends:r}=e,{mixins:E,optionsCache:n,config:{optionMergeStrategies:i}}=t.appContext,T=n.get(e);let o;return T?o=T:!E.length&&!s&&!r?o=e:(o={},E.length&&E.forEach(a=>Tn(o,a,i,!0)),Tn(o,e,i)),Pe(e)&&n.set(e,o),o}function Tn(t,e,s,r=!1){const{mixins:E,extends:n}=e;n&&Tn(t,n,s,!0),E&&E.forEach(i=>Tn(t,i,s,!0));for(const i in e)if(!(r&&i==="expose")){const T=$O[i]||s&&s[i];t[i]=T?T(t[i],e[i]):e[i]}return t}const $O={data:mo,props:Bo,emits:Bo,methods:Kr,computed:Kr,beforeCreate:xe,created:xe,beforeMount:xe,mounted:xe,beforeUpdate:xe,updated:xe,beforeDestroy:xe,beforeUnmount:xe,destroyed:xe,unmounted:xe,activated:xe,deactivated:xe,errorCaptured:xe,serverPrefetch:xe,components:Kr,directives:Kr,watch:kO,provide:mo,inject:JO};function mo(t,e){return e?t?function(){return Qe(Q(t)?t.call(this,this):t,Q(e)?e.call(this,this):e)}:e:t}function JO(t,e){return Kr(iT(t),iT(e))}function iT(t){if(q(t)){const e={};for(let s=0;s<t.length;s++)e[t[s]]=t[s];return e}return t}function xe(t,e){return t?[...new Set([].concat(t,e))]:e}function Kr(t,e){return t?Qe(Object.create(null),t,e):e}function Bo(t,e){return t?q(t)&&q(e)?[...new Set([...t,...e])]:Qe(Object.create(null),Uo(t),Uo(e??{})):e}function kO(t,e){if(!t)return e;if(!e)return t;const s=Qe(Object.create(null),t);for(const r in e)s[r]=xe(t[r],e[r]);return s}function WR(){return{app:null,config:{isNativeTag:bI,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let qO=0;function QO(t,e){return function(r,E=null){Q(r)||(r=Qe({},r)),E!=null&&!Pe(E)&&(E=null);const n=WR(),i=new WeakSet,T=[];let o=!1;const a=n.app={_uid:qO++,_component:r,_props:E,_container:null,_context:n,_instance:null,version:Bl,get config(){return n.config},set config(R){},use(R,...A){return i.has(R)||(R&&Q(R.install)?(i.add(R),R.install(a,...A)):Q(R)&&(i.add(R),R(a,...A))),a},mixin(R){return n.mixins.includes(R)||n.mixins.push(R),a},component(R,A){return A?(n.components[R]=A,a):n.components[R]},directive(R,A){return A?(n.directives[R]=A,a):n.directives[R]},mount(R,A,l){if(!o){const u=a._ceVNode||Lt(r,E);return u.appContext=n,l===!0?l="svg":l===!1&&(l=void 0),t(u,R,l),o=!0,a._container=R,R.__vue_app__=a,zn(u.component)}},onUnmount(R){T.push(R)},unmount(){o&&(kt(T,a._instance,16),t(null,a._container),delete a._container.__vue_app__)},provide(R,A){return n.provides[R]=A,a},runWithContext(R){const A=dr;dr=a;try{return R()}finally{dr=A}}};return a}}let dr=null;function jO(t,e){if(Ye){let s=Ye.provides;const r=Ye.parent&&Ye.parent.provides;r===s&&(s=Ye.provides=Object.create(r)),s[t]=e}}function YE(t,e,s=!1){const r=Ye||St;if(r||dr){const E=dr?dr._context.provides:r?r.parent==null?r.vnode.appContext&&r.vnode.appContext.provides:r.parent.provides:void 0;if(E&&t in E)return E[t];if(arguments.length>1)return s&&Q(e)?e.call(r&&r.proxy):e}}const xR={},XR=()=>Object.create(xR),KR=t=>Object.getPrototypeOf(t)===xR;function ZO(t,e,s,r=!1){const E={},n=XR();t.propsDefaults=Object.create(null),$R(t,e,E,n);for(const i in t.propsOptions[0])i in E||(E[i]=void 0);s?t.props=r?E:SO(E):t.type.props?t.props=E:t.props=n,t.attrs=n}function zO(t,e,s,r){const{props:E,attrs:n,vnode:{patchFlag:i}}=t,T=le(E),[o]=t.propsOptions;let a=!1;if((r||i>0)&&!(i&16)){if(i&8){const R=t.vnode.dynamicProps;for(let A=0;A<R.length;A++){let l=R[A];if(Qn(t.emitsOptions,l))continue;const u=e[l];if(o)if(ie(n,l))u!==n[l]&&(n[l]=u,a=!0);else{const h=Ct(l);E[h]=TT(o,T,h,u,t,!1)}else u!==n[l]&&(n[l]=u,a=!0)}}}else{$R(t,e,E,n)&&(a=!0);let R;for(const A in T)(!e||!ie(e,A)&&((R=ps(A))===A||!ie(e,R)))&&(o?s&&(s[A]!==void 0||s[R]!==void 0)&&(E[A]=TT(o,T,A,void 0,t,!0)):delete E[A]);if(n!==T)for(const A in n)(!e||!ie(e,A))&&(delete n[A],a=!0)}a&&Es(t.attrs,"set","")}function $R(t,e,s,r){const[E,n]=t.propsOptions;let i=!1,T;if(e)for(let o in e){if(eE(o))continue;const a=e[o];let R;E&&ie(E,R=Ct(o))?!n||!n.includes(R)?s[R]=a:(T||(T={}))[R]=a:Qn(t.emitsOptions,o)||(!(o in r)||a!==r[o])&&(r[o]=a,i=!0)}if(n){const o=le(s),a=T||Ne;for(let R=0;R<n.length;R++){const A=n[R];s[A]=TT(E,o,A,a[A],t,!ie(a,A))}}return i}function TT(t,e,s,r,E,n){const i=t[s];if(i!=null){const T=ie(i,"default");if(T&&r===void 0){const o=i.default;if(i.type!==Function&&!i.skipFactory&&Q(o)){const{propsDefaults:a}=E;if(s in a)r=a[s];else{const R=LE(E);r=a[s]=o.call(null,e),R()}}else r=o;E.ce&&E.ce._setProp(s,r)}i[0]&&(n&&!T?r=!1:i[1]&&(r===""||r===ps(s))&&(r=!0))}return r}const el=new WeakMap;function JR(t,e,s=!1){const r=s?el:e.propsCache,E=r.get(t);if(E)return E;const n=t.props,i={},T=[];let o=!1;if(!Q(t)){const R=A=>{o=!0;const[l,u]=JR(A,e,!0);Qe(i,l),u&&T.push(...u)};!s&&e.mixins.length&&e.mixins.forEach(R),t.extends&&R(t.extends),t.mixins&&t.mixins.forEach(R)}if(!n&&!o)return Pe(t)&&r.set(t,Nr),Nr;if(q(n))for(let R=0;R<n.length;R++){const A=Ct(n[R]);Fo(A)&&(i[A]=Ne)}else if(n)for(const R in n){const A=Ct(R);if(Fo(A)){const l=n[R],u=i[A]=q(l)||Q(l)?{type:l}:Qe({},l),h=u.type;let U=!1,j=!0;if(q(h))for(let B=0;B<h.length;++B){const k=h[B],re=Q(k)&&k.name;if(re==="Boolean"){U=!0;break}else re==="String"&&(j=!1)}else U=Q(h)&&h.name==="Boolean";u[0]=U,u[1]=j,(U||ie(u,"default"))&&T.push(A)}}const a=[i,T];return Pe(t)&&r.set(t,a),a}function Fo(t){return t[0]!=="$"&&!eE(t)}const kR=t=>t[0]==="_"||t==="$stable",VT=t=>q(t)?t.map(Vt):[Vt(t)],tl=(t,e,s)=>{if(e._n)return e;const r=hO((...E)=>VT(e(...E)),s);return r._c=!1,r},qR=(t,e,s)=>{const r=t._ctx;for(const E in t){if(kR(E))continue;const n=t[E];if(Q(n))e[E]=tl(E,n,r);else if(n!=null){const i=VT(n);e[E]=()=>i}}},QR=(t,e)=>{const s=VT(e);t.slots.default=()=>s},jR=(t,e,s)=>{for(const r in e)(s||r!=="_")&&(t[r]=e[r])},sl=(t,e,s)=>{const r=t.slots=XR();if(t.vnode.shapeFlag&32){const E=e._;E?(jR(r,e,s),s&&aR(r,"_",E,!0)):qR(e,r)}else e&&QR(t,e)},rl=(t,e,s)=>{const{vnode:r,slots:E}=t;let n=!0,i=Ne;if(r.shapeFlag&32){const T=e._;T?s&&T===1?n=!1:jR(E,e,s):(n=!e.$stable,qR(e,E)),i=e}else e&&(QR(t,e),i={default:1});if(n)for(const T in E)!kR(T)&&i[T]==null&&delete E[T]},ot=cl;function El(t){return nl(t)}function nl(t,e){const s=$n();s.__VUE__=!0;const{insert:r,remove:E,patchProp:n,createElement:i,createText:T,createComment:o,setText:a,setElementText:R,parentNode:A,nextSibling:l,setScopeId:u=Jt,insertStaticContent:h}=t,U=(I,O,N,d=null,_=null,L=null,P=void 0,p=null,D=!!O.dynamicChildren)=>{if(I===O)return;I&&!Wr(I,O)&&(d=yE(I),Bt(I,_,L,!0),I=null),O.patchFlag===-2&&(D=!1,O.dynamicChildren=null);const{type:C,ref:W,shapeFlag:M}=O;switch(C){case jn:j(I,O,N,d);break;case Ws:B(I,O,N,d);break;case Ni:I==null&&k(O,N,d,P);break;case Ke:PE(I,O,N,d,_,L,P,p,D);break;default:M&1?Ce(I,O,N,d,_,L,P,p,D):M&6?ME(I,O,N,d,_,L,P,p,D):(M&64||M&128)&&C.process(I,O,N,d,_,L,P,p,D,vr)}W!=null&&_&&nn(W,I&&I.ref,L,O||I,!O)},j=(I,O,N,d)=>{if(I==null)r(O.el=T(O.children),N,d);else{const _=O.el=I.el;O.children!==I.children&&a(_,O.children)}},B=(I,O,N,d)=>{I==null?r(O.el=o(O.children||""),N,d):O.el=I.el},k=(I,O,N,d)=>{[I.el,I.anchor]=h(I.children,O,N,d,I.el,I.anchor)},re=({el:I,anchor:O},N,d)=>{let _;for(;I&&I!==O;)_=l(I),r(I,N,d),I=_;r(O,N,d)},F=({el:I,anchor:O})=>{let N;for(;I&&I!==O;)N=l(I),E(I),I=N;E(O)},Ce=(I,O,N,d,_,L,P,p,D)=>{O.type==="svg"?P="svg":O.type==="math"&&(P="mathml"),I==null?mt(O,N,d,_,L,P,p,D):pE(I,O,_,L,P,p,D)},mt=(I,O,N,d,_,L,P,p)=>{let D,C;const{props:W,shapeFlag:M,transition:m,dirs:J}=I;if(D=I.el=i(I.type,L,W&&W.is,W),M&8?R(D,I.children):M&16&&Is(I.children,D,null,d,_,Oi(I,L),P,p),J&&Fs(I,null,d,"created"),nt(D,I,I.scopeId,P,d),W){for(const _e in W)_e!=="value"&&!eE(_e)&&n(D,_e,null,W[_e],L,d);"value"in W&&n(D,"value",null,W.value,L),(C=W.onVnodeBeforeMount)&&gt(C,d,I)}J&&Fs(I,null,d,"beforeMount");const se=il(_,m);se&&m.beforeEnter(D),r(D,O,N),((C=W&&W.onVnodeMounted)||se||J)&&ot(()=>{C&&gt(C,d,I),se&&m.enter(D),J&&Fs(I,null,d,"mounted")},_)},nt=(I,O,N,d,_)=>{if(N&&u(I,N),d)for(let L=0;L<d.length;L++)u(I,d[L]);if(_){let L=_.subTree;if(O===L||rA(L.type)&&(L.ssContent===O||L.ssFallback===O)){const P=_.vnode;nt(I,P,P.scopeId,P.slotScopeIds,_.parent)}}},Is=(I,O,N,d,_,L,P,p,D=0)=>{for(let C=D;C<I.length;C++){const W=I[C]=p?us(I[C]):Vt(I[C]);U(null,W,O,N,d,_,L,P,p)}},pE=(I,O,N,d,_,L,P)=>{const p=O.el=I.el;let{patchFlag:D,dynamicChildren:C,dirs:W}=O;D|=I.patchFlag&16;const M=I.props||Ne,m=O.props||Ne;let J;if(N&&Gs(N,!1),(J=m.onVnodeBeforeUpdate)&&gt(J,N,O,I),W&&Fs(O,I,N,"beforeUpdate"),N&&Gs(N,!0),(M.innerHTML&&m.innerHTML==null||M.textContent&&m.textContent==null)&&R(p,""),C?ys(I.dynamicChildren,C,p,N,d,Oi(O,_),L):P||ue(I,O,p,null,N,d,Oi(O,_),L,!1),D>0){if(D&16)Hr(p,M,m,N,_);else if(D&2&&M.class!==m.class&&n(p,"class",null,m.class,_),D&4&&n(p,"style",M.style,m.style,_),D&8){const se=O.dynamicProps;for(let _e=0;_e<se.length;_e++){const Re=se[_e],it=M[Re],Ze=m[Re];(Ze!==it||Re==="value")&&n(p,Re,it,Ze,_,N)}}D&1&&I.children!==O.children&&R(p,O.children)}else!P&&C==null&&Hr(p,M,m,N,_);((J=m.onVnodeUpdated)||W)&&ot(()=>{J&&gt(J,N,O,I),W&&Fs(O,I,N,"updated")},d)},ys=(I,O,N,d,_,L,P)=>{for(let p=0;p<O.length;p++){const D=I[p],C=O[p],W=D.el&&(D.type===Ke||!Wr(D,C)||D.shapeFlag&70)?A(D.el):N;U(D,C,W,null,d,_,L,P,!0)}},Hr=(I,O,N,d,_)=>{if(O!==N){if(O!==Ne)for(const L in O)!eE(L)&&!(L in N)&&n(I,L,O[L],null,_,d);for(const L in N){if(eE(L))continue;const P=N[L],p=O[L];P!==p&&L!=="value"&&n(I,L,p,P,_,d)}"value"in N&&n(I,"value",O.value,N.value,_)}},PE=(I,O,N,d,_,L,P,p,D)=>{const C=O.el=I?I.el:T(""),W=O.anchor=I?I.anchor:T("");let{patchFlag:M,dynamicChildren:m,slotScopeIds:J}=O;J&&(p=p?p.concat(J):J),I==null?(r(C,N,d),r(W,N,d),Is(O.children||[],N,W,_,L,P,p,D)):M>0&&M&64&&m&&I.dynamicChildren?(ys(I.dynamicChildren,m,N,_,L,P,p),(O.key!=null||_&&O===_.subTree)&&ZR(I,O,!0)):ue(I,O,N,W,_,L,P,p,D)},ME=(I,O,N,d,_,L,P,p,D)=>{O.slotScopeIds=p,I==null?O.shapeFlag&512?_.ctx.activate(O,N,d,P,D):ii(O,N,d,_,L,P,D):uo(I,O,D)},ii=(I,O,N,d,_,L,P)=>{const p=I.component=hl(I,d,_);if(HR(I)&&(p.ctx.renderer=vr),Dl(p,!1,P),p.asyncDep){if(_&&_.registerDep(p,We,P),!I.el){const D=p.subTree=Lt(Ws);B(null,D,O,N)}}else We(p,I,O,N,_,L,P)},uo=(I,O,N)=>{const d=O.component=I.component;if(ll(I,O,N))if(d.asyncDep&&!d.asyncResolved){De(d,O,N);return}else d.next=O,d.update();else O.el=I.el,d.vnode=O},We=(I,O,N,d,_,L,P)=>{const p=()=>{if(I.isMounted){let{next:M,bu:m,u:J,parent:se,vnode:_e}=I;{const Gt=zR(I);if(Gt){M&&(M.el=_e.el,De(I,M,P)),Gt.asyncDep.then(()=>{I.isUnmounted||p()});return}}let Re=M,it;Gs(I,!1),M?(M.el=_e.el,De(I,M,P)):M=_e,m&&HE(m),(it=M.props&&M.props.onVnodeBeforeUpdate)&&gt(it,se,M,_e),Gs(I,!0);const Ze=bo(I),Ft=I.subTree;I.subTree=Ze,U(Ft,Ze,A(Ft.el),yE(Ft),I,_,L),M.el=Ze.el,Re===null&&Nl(I,Ze.el),J&&ot(J,_),(it=M.props&&M.props.onVnodeUpdated)&&ot(()=>gt(it,se,M,_e),_)}else{let M;const{el:m,props:J}=O,{bm:se,m:_e,parent:Re,root:it,type:Ze}=I,Ft=rE(O);Gs(I,!1),se&&HE(se),!Ft&&(M=J&&J.onVnodeBeforeMount)&&gt(M,Re,O),Gs(I,!0);{it.ce&&it.ce._injectChildStyle(Ze);const Gt=I.subTree=bo(I);U(null,Gt,N,d,I,_,L),O.el=Gt.el}if(_e&&ot(_e,_),!Ft&&(M=J&&J.onVnodeMounted)){const Gt=O;ot(()=>gt(M,Re,Gt),_)}(O.shapeFlag&256||Re&&rE(Re.vnode)&&Re.vnode.shapeFlag&256)&&I.a&&ot(I.a,_),I.isMounted=!0,O=N=d=null}};I.scope.on();const D=I.effect=new IR(p);I.scope.off();const C=I.update=D.run.bind(D),W=I.job=D.runIfDirty.bind(D);W.i=I,W.id=I.uid,D.scheduler=()=>vT(W),Gs(I,!0),C()},De=(I,O,N)=>{O.component=I;const d=I.vnode.props;I.vnode=O,I.next=null,zO(I,O.props,d,N),rl(I,O.children,N),Ps(),Po(I),Ms()},ue=(I,O,N,d,_,L,P,p,D=!1)=>{const C=I&&I.children,W=I?I.shapeFlag:0,M=O.children,{patchFlag:m,shapeFlag:J}=O;if(m>0){if(m&128){UE(C,M,N,d,_,L,P,p,D);return}else if(m&256){ms(C,M,N,d,_,L,P,p,D);return}}J&8?(W&16&&Yr(C,_,L),M!==C&&R(N,M)):W&16?J&16?UE(C,M,N,d,_,L,P,p,D):Yr(C,_,L,!0):(W&8&&R(N,""),J&16&&Is(M,N,d,_,L,P,p,D))},ms=(I,O,N,d,_,L,P,p,D)=>{I=I||Nr,O=O||Nr;const C=I.length,W=O.length,M=Math.min(C,W);let m;for(m=0;m<M;m++){const J=O[m]=D?us(O[m]):Vt(O[m]);U(I[m],J,N,null,_,L,P,p,D)}C>W?Yr(I,_,L,!0,!1,M):Is(O,N,d,_,L,P,p,D,M)},UE=(I,O,N,d,_,L,P,p,D)=>{let C=0;const W=O.length;let M=I.length-1,m=W-1;for(;C<=M&&C<=m;){const J=I[C],se=O[C]=D?us(O[C]):Vt(O[C]);if(Wr(J,se))U(J,se,N,null,_,L,P,p,D);else break;C++}for(;C<=M&&C<=m;){const J=I[M],se=O[m]=D?us(O[m]):Vt(O[m]);if(Wr(J,se))U(J,se,N,null,_,L,P,p,D);else break;M--,m--}if(C>M){if(C<=m){const J=m+1,se=J<W?O[J].el:d;for(;C<=m;)U(null,O[C]=D?us(O[C]):Vt(O[C]),N,se,_,L,P,p,D),C++}}else if(C>m)for(;C<=M;)Bt(I[C],_,L,!0),C++;else{const J=C,se=C,_e=new Map;for(C=se;C<=m;C++){const Tt=O[C]=D?us(O[C]):Vt(O[C]);Tt.key!=null&&_e.set(Tt.key,C)}let Re,it=0;const Ze=m-se+1;let Ft=!1,Gt=0;const wr=new Array(Ze);for(C=0;C<Ze;C++)wr[C]=0;for(C=J;C<=M;C++){const Tt=I[C];if(it>=Ze){Bt(Tt,_,L,!0);continue}let bt;if(Tt.key!=null)bt=_e.get(Tt.key);else for(Re=se;Re<=m;Re++)if(wr[Re-se]===0&&Wr(Tt,O[Re])){bt=Re;break}bt===void 0?Bt(Tt,_,L,!0):(wr[bt-se]=C+1,bt>=Gt?Gt=bt:Ft=!0,U(Tt,O[bt],N,null,_,L,P,p,D),it++)}const Co=Ft?Tl(wr):Nr;for(Re=Co.length-1,C=Ze-1;C>=0;C--){const Tt=se+C,bt=O[Tt],fo=Tt+1<W?O[Tt+1].el:d;wr[C]===0?U(null,bt,N,fo,_,L,P,p,D):Ft&&(Re<0||C!==Co[Re]?Bs(bt,N,fo,2):Re--)}}},Bs=(I,O,N,d,_=null)=>{const{el:L,type:P,transition:p,children:D,shapeFlag:C}=I;if(C&6){Bs(I.component.subTree,O,N,d);return}if(C&128){I.suspense.move(O,N,d);return}if(C&64){P.move(I,O,N,vr);return}if(P===Ke){r(L,O,N);for(let M=0;M<D.length;M++)Bs(D[M],O,N,d);r(I.anchor,O,N);return}if(P===Ni){re(I,O,N);return}if(d!==2&&C&1&&p)if(d===0)p.beforeEnter(L),r(L,O,N),ot(()=>p.enter(L),_);else{const{leave:M,delayLeave:m,afterLeave:J}=p,se=()=>r(L,O,N),_e=()=>{M(L,()=>{se(),J&&J()})};m?m(L,se,_e):_e()}else r(L,O,N)},Bt=(I,O,N,d=!1,_=!1)=>{const{type:L,props:P,ref:p,children:D,dynamicChildren:C,shapeFlag:W,patchFlag:M,dirs:m,cacheIndex:J}=I;if(M===-2&&(_=!1),p!=null&&nn(p,null,N,I,!0),J!=null&&(O.renderCache[J]=void 0),W&256){O.ctx.deactivate(I);return}const se=W&1&&m,_e=!rE(I);let Re;if(_e&&(Re=P&&P.onVnodeBeforeUnmount)&&gt(Re,O,I),W&6)GI(I.component,N,d);else{if(W&128){I.suspense.unmount(N,d);return}se&&Fs(I,null,O,"beforeUnmount"),W&64?I.type.remove(I,O,N,vr,d):C&&!C.hasOnce&&(L!==Ke||M>0&&M&64)?Yr(C,O,N,!1,!0):(L===Ke&&M&384||!_&&W&16)&&Yr(D,O,N),d&&_o(I)}(_e&&(Re=P&&P.onVnodeUnmounted)||se)&&ot(()=>{Re&&gt(Re,O,I),se&&Fs(I,null,O,"unmounted")},N)},_o=I=>{const{type:O,el:N,anchor:d,transition:_}=I;if(O===Ke){FI(N,d);return}if(O===Ni){F(I);return}const L=()=>{E(N),_&&!_.persisted&&_.afterLeave&&_.afterLeave()};if(I.shapeFlag&1&&_&&!_.persisted){const{leave:P,delayLeave:p}=_,D=()=>P(N,L);p?p(I.el,L,D):D()}else L()},FI=(I,O)=>{let N;for(;I!==O;)N=l(I),E(I),I=N;E(O)},GI=(I,O,N)=>{const{bum:d,scope:_,job:L,subTree:P,um:p,m:D,a:C}=I;Go(D),Go(C),d&&HE(d),_.stop(),L&&(L.flags|=8,Bt(P,I,O,N)),p&&ot(p,O),ot(()=>{I.isUnmounted=!0},O),O&&O.pendingBranch&&!O.isUnmounted&&I.asyncDep&&!I.asyncResolved&&I.suspenseId===O.pendingId&&(O.deps--,O.deps===0&&O.resolve())},Yr=(I,O,N,d=!1,_=!1,L=0)=>{for(let P=L;P<I.length;P++)Bt(I[P],O,N,d,_)},yE=I=>{if(I.shapeFlag&6)return yE(I.component.subTree);if(I.shapeFlag&128)return I.suspense.next();const O=l(I.anchor||I.el),N=O&&O[pO];return N?l(N):O};let Ti=!1;const Lo=(I,O,N)=>{I==null?O._vnode&&Bt(O._vnode,null,null,!0):U(O._vnode||null,I,O,null,null,null,N),O._vnode=I,Ti||(Ti=!0,Po(),FR(),Ti=!1)},vr={p:U,um:Bt,m:Bs,r:_o,mt:ii,mc:Is,pc:ue,pbc:ys,n:yE,o:t};return{render:Lo,hydrate:void 0,createApp:QO(Lo)}}function Oi({type:t,props:e},s){return s==="svg"&&t==="foreignObject"||s==="mathml"&&t==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:s}function Gs({effect:t,job:e},s){s?(t.flags|=32,e.flags|=4):(t.flags&=-33,e.flags&=-5)}function il(t,e){return(!t||t&&!t.pendingBranch)&&e&&!e.persisted}function ZR(t,e,s=!1){const r=t.children,E=e.children;if(q(r)&&q(E))for(let n=0;n<r.length;n++){const i=r[n];let T=E[n];T.shapeFlag&1&&!T.dynamicChildren&&((T.patchFlag<=0||T.patchFlag===32)&&(T=E[n]=us(E[n]),T.el=i.el),!s&&T.patchFlag!==-2&&ZR(i,T)),T.type===jn&&(T.el=i.el)}}function Tl(t){const e=t.slice(),s=[0];let r,E,n,i,T;const o=t.length;for(r=0;r<o;r++){const a=t[r];if(a!==0){if(E=s[s.length-1],t[E]<a){e[r]=E,s.push(r);continue}for(n=0,i=s.length-1;n<i;)T=n+i>>1,t[s[T]]<a?n=T+1:i=T;a<t[s[n]]&&(n>0&&(e[r]=s[n-1]),s[n]=r)}}for(n=s.length,i=s[n-1];n-- >0;)s[n]=i,i=e[i];return s}function zR(t){const e=t.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:zR(e)}function Go(t){if(t)for(let e=0;e<t.length;e++)t[e].flags|=8}const ol=Symbol.for("v-scx"),al=()=>YE(ol);function li(t,e,s){return eA(t,e,s)}function eA(t,e,s=Ne){const{immediate:r,deep:E,flush:n,once:i}=s,T=Qe({},s),o=e&&r||!e&&n!=="post";let a;if(SE){if(n==="sync"){const u=al();a=u.__watcherHandles||(u.__watcherHandles=[])}else if(!o){const u=()=>{};return u.stop=Jt,u.resume=Jt,u.pause=Jt,u}}const R=Ye;T.call=(u,h,U)=>kt(u,R,h,U);let A=!1;n==="post"?T.scheduler=u=>{ot(u,R&&R.suspense)}:n!=="sync"&&(A=!0,T.scheduler=(u,h)=>{h?u():vT(u)}),T.augmentJob=u=>{e&&(u.flags|=4),A&&(u.flags|=2,R&&(u.id=R.uid,u.i=R))};const l=_O(t,e,T);return SE&&(a?a.push(l):o&&l()),l}function Rl(t,e,s){const r=this.proxy,E=ye(t)?t.includes(".")?tA(r,t):()=>r[t]:t.bind(r,r);let n;Q(e)?n=e:(n=e.handler,s=e);const i=LE(this),T=eA(E,n.bind(r),s);return i(),T}function tA(t,e){const s=e.split(".");return()=>{let r=t;for(let E=0;E<s.length&&r;E++)r=r[s[E]];return r}}const Al=(t,e)=>e==="modelValue"||e==="model-value"?t.modelModifiers:t[`${e}Modifiers`]||t[`${Ct(e)}Modifiers`]||t[`${ps(e)}Modifiers`];function Sl(t,e,...s){if(t.isUnmounted)return;const r=t.vnode.props||Ne;let E=s;const n=e.startsWith("update:"),i=n&&Al(r,e.slice(7));i&&(i.trim&&(E=s.map(R=>ye(R)?R.trim():R)),i.number&&(E=s.map(Zi)));let T,o=r[T=oi(e)]||r[T=oi(Ct(e))];!o&&n&&(o=r[T=oi(ps(e))]),o&&kt(o,t,6,E);const a=r[T+"Once"];if(a){if(!t.emitted)t.emitted={};else if(t.emitted[T])return;t.emitted[T]=!0,kt(a,t,6,E)}}function sA(t,e,s=!1){const r=e.emitsCache,E=r.get(t);if(E!==void 0)return E;const n=t.emits;let i={},T=!1;if(!Q(t)){const o=a=>{const R=sA(a,e,!0);R&&(T=!0,Qe(i,R))};!s&&e.mixins.length&&e.mixins.forEach(o),t.extends&&o(t.extends),t.mixins&&t.mixins.forEach(o)}return!n&&!T?(Pe(t)&&r.set(t,null),null):(q(n)?n.forEach(o=>i[o]=null):Qe(i,n),Pe(t)&&r.set(t,i),i)}function Qn(t,e){return!t||!Wn(e)?!1:(e=e.slice(2).replace(/Once$/,""),ie(t,e[0].toLowerCase()+e.slice(1))||ie(t,ps(e))||ie(t,e))}function bo(t){const{type:e,vnode:s,proxy:r,withProxy:E,propsOptions:[n],slots:i,attrs:T,emit:o,render:a,renderCache:R,props:A,data:l,setupState:u,ctx:h,inheritAttrs:U}=t,j=En(t);let B,k;try{if(s.shapeFlag&4){const F=E||r,Ce=F;B=Vt(a.call(Ce,F,R,A,u,l,h)),k=T}else{const F=e;B=Vt(F.length>1?F(A,{attrs:T,slots:i,emit:o}):F(A,null)),k=e.props?T:Il(T)}}catch(F){nE.length=0,kn(F,t,1),B=Lt(Ws)}let re=B;if(k&&U!==!1){const F=Object.keys(k),{shapeFlag:Ce}=re;F.length&&Ce&7&&(n&&F.some(PT)&&(k=Ol(k,n)),re=Pr(re,k,!1,!0))}return s.dirs&&(re=Pr(re,null,!1,!0),re.dirs=re.dirs?re.dirs.concat(s.dirs):s.dirs),s.transition&&wT(re,s.transition),B=re,En(j),B}const Il=t=>{let e;for(const s in t)(s==="class"||s==="style"||Wn(s))&&((e||(e={}))[s]=t[s]);return e},Ol=(t,e)=>{const s={};for(const r in t)(!PT(r)||!(r.slice(9)in e))&&(s[r]=t[r]);return s};function ll(t,e,s){const{props:r,children:E,component:n}=t,{props:i,children:T,patchFlag:o}=e,a=n.emitsOptions;if(e.dirs||e.transition)return!0;if(s&&o>=0){if(o&1024)return!0;if(o&16)return r?go(r,i,a):!!i;if(o&8){const R=e.dynamicProps;for(let A=0;A<R.length;A++){const l=R[A];if(i[l]!==r[l]&&!Qn(a,l))return!0}}}else return(E||T)&&(!T||!T.$stable)?!0:r===i?!1:r?i?go(r,i,a):!0:!!i;return!1}function go(t,e,s){const r=Object.keys(e);if(r.length!==Object.keys(t).length)return!0;for(let E=0;E<r.length;E++){const n=r[E];if(e[n]!==t[n]&&!Qn(s,n))return!0}return!1}function Nl({vnode:t,parent:e},s){for(;e;){const r=e.subTree;if(r.suspense&&r.suspense.activeBranch===t&&(r.el=t.el),r===t)(t=e.vnode).el=s,e=e.parent;else break}}const rA=t=>t.__isSuspense;function cl(t,e){e&&e.pendingBranch?q(t)?e.effects.push(...t):e.effects.push(t):fO(t)}const Ke=Symbol.for("v-fgt"),jn=Symbol.for("v-txt"),Ws=Symbol.for("v-cmt"),Ni=Symbol.for("v-stc"),nE=[];let It=null;function Oe(t=!1){nE.push(It=t?null:[])}function ul(){nE.pop(),It=nE[nE.length-1]||null}let AE=1;function Ho(t,e=!1){AE+=t,t<0&&It&&e&&(It.hasOnce=!0)}function EA(t){return t.dynamicChildren=AE>0?It||Nr:null,ul(),AE>0&&It&&It.push(t),t}function fe(t,e,s,r,E,n){return EA(f(t,e,s,r,E,n,!0))}function on(t,e,s,r,E){return EA(Lt(t,e,s,r,E,!0))}function nA(t){return t?t.__v_isVNode===!0:!1}function Wr(t,e){return t.type===e.type&&t.key===e.key}const iA=({key:t})=>t??null,vE=({ref:t,ref_key:e,ref_for:s})=>(typeof t=="number"&&(t=""+t),t!=null?ye(t)||qe(t)||Q(t)?{i:St,r:t,k:e,f:!!s}:t:null);function f(t,e=null,s=null,r=0,E=null,n=t===Ke?0:1,i=!1,T=!1){const o={__v_isVNode:!0,__v_skip:!0,type:t,props:e,key:e&&iA(e),ref:e&&vE(e),scopeId:bR,slotScopeIds:null,children:s,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:n,patchFlag:r,dynamicProps:E,dynamicChildren:null,appContext:null,ctx:St};return T?(WT(o,s),n&128&&t.normalize(o)):s&&(o.shapeFlag|=ye(s)?8:16),AE>0&&!i&&It&&(o.patchFlag>0||n&6)&&o.patchFlag!==32&&It.push(o),o}const Lt=_l;function _l(t,e=null,s=null,r=0,E=null,n=!1){if((!t||t===VO)&&(t=Ws),nA(t)){const T=Pr(t,e,!0);return s&&WT(T,s),AE>0&&!n&&It&&(T.shapeFlag&6?It[It.indexOf(t)]=T:It.push(T)),T.patchFlag=-2,T}if(yl(t)&&(t=t.__vccOpts),e){e=Ll(e);let{class:T,style:o}=e;T&&!ye(T)&&(e.class=mT(T)),Pe(o)&&(YT(o)&&!q(o)&&(o=Qe({},o)),e.style=yT(o))}const i=ye(t)?1:rA(t)?128:PO(t)?64:Pe(t)?4:Q(t)?2:0;return f(t,e,s,r,E,i,n,!0)}function Ll(t){return t?YT(t)||KR(t)?Qe({},t):t:null}function Pr(t,e,s=!1,r=!1){const{props:E,ref:n,patchFlag:i,children:T,transition:o}=t,a=e?dl(E||{},e):E,R={__v_isVNode:!0,__v_skip:!0,type:t.type,props:a,key:a&&iA(a),ref:e&&e.ref?s&&n?q(n)?n.concat(vE(e)):[n,vE(e)]:vE(e):n,scopeId:t.scopeId,slotScopeIds:t.slotScopeIds,children:T,target:t.target,targetStart:t.targetStart,targetAnchor:t.targetAnchor,staticCount:t.staticCount,shapeFlag:t.shapeFlag,patchFlag:e&&t.type!==Ke?i===-1?16:i|16:i,dynamicProps:t.dynamicProps,dynamicChildren:t.dynamicChildren,appContext:t.appContext,dirs:t.dirs,transition:o,component:t.component,suspense:t.suspense,ssContent:t.ssContent&&Pr(t.ssContent),ssFallback:t.ssFallback&&Pr(t.ssFallback),el:t.el,anchor:t.anchor,ctx:t.ctx,ce:t.ce};return o&&r&&wT(R,o.clone(R)),R}function Ir(t=" ",e=0){return Lt(jn,null,t,e)}function Zn(t="",e=!1){return e?(Oe(),on(Ws,null,t)):Lt(Ws,null,t)}function Vt(t){return t==null||typeof t=="boolean"?Lt(Ws):q(t)?Lt(Ke,null,t.slice()):nA(t)?us(t):Lt(jn,null,String(t))}function us(t){return t.el===null&&t.patchFlag!==-1||t.memo?t:Pr(t)}function WT(t,e){let s=0;const{shapeFlag:r}=t;if(e==null)e=null;else if(q(e))s=16;else if(typeof e=="object")if(r&65){const E=e.default;E&&(E._c&&(E._d=!1),WT(t,E()),E._c&&(E._d=!0));return}else{s=32;const E=e._;!E&&!KR(e)?e._ctx=St:E===3&&St&&(St.slots._===1?e._=1:(e._=2,t.patchFlag|=1024))}else Q(e)?(e={default:e,_ctx:St},s=32):(e=String(e),r&64?(s=16,e=[Ir(e)]):s=8);t.children=e,t.shapeFlag|=s}function dl(...t){const e={};for(let s=0;s<t.length;s++){const r=t[s];for(const E in r)if(E==="class")e.class!==r.class&&(e.class=mT([e.class,r.class]));else if(E==="style")e.style=yT([e.style,r.style]);else if(Wn(E)){const n=e[E],i=r[E];i&&n!==i&&!(q(n)&&n.includes(i))&&(e[E]=n?[].concat(n,i):i)}else E!==""&&(e[E]=r[E])}return e}function gt(t,e,s,r=null){kt(t,e,7,[s,r])}const Cl=WR();let fl=0;function hl(t,e,s){const r=t.type,E=(e?e.appContext:t.appContext)||Cl,n={uid:fl++,vnode:t,type:r,parent:e,appContext:E,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new $I(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(E.provides),ids:e?e.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:JR(r,E),emitsOptions:sA(r,E),emit:null,emitted:null,propsDefaults:Ne,inheritAttrs:r.inheritAttrs,ctx:Ne,data:Ne,props:Ne,attrs:Ne,slots:Ne,refs:Ne,setupState:Ne,setupContext:null,suspense:s,suspenseId:s?s.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return n.ctx={_:n},n.root=e?e.root:n,n.emit=Sl.bind(null,n),t.ce&&t.ce(n),n}let Ye=null,an,oT;{const t=$n(),e=(s,r)=>{let E;return(E=t[s])||(E=t[s]=[]),E.push(r),n=>{E.length>1?E.forEach(i=>i(n)):E[0](n)}};an=e("__VUE_INSTANCE_SETTERS__",s=>Ye=s),oT=e("__VUE_SSR_SETTERS__",s=>SE=s)}const LE=t=>{const e=Ye;return an(t),t.scope.on(),()=>{t.scope.off(),an(e)}},Yo=()=>{Ye&&Ye.scope.off(),an(null)};function TA(t){return t.vnode.shapeFlag&4}let SE=!1;function Dl(t,e=!1,s=!1){e&&oT(e);const{props:r,children:E}=t.vnode,n=TA(t);ZO(t,r,n,e),sl(t,E,s);const i=n?pl(t,e):void 0;return e&&oT(!1),i}function pl(t,e){const s=t.type;t.accessCache=Object.create(null),t.proxy=new Proxy(t.ctx,xO);const{setup:r}=s;if(r){Ps();const E=t.setupContext=r.length>1?Ml(t):null,n=LE(t),i=_E(r,t,0,[t.props,E]),T=iR(i);if(Ms(),n(),(T||t.sp)&&!rE(t)&&gR(t),T){if(i.then(Yo,Yo),e)return i.then(o=>{vo(t,o)}).catch(o=>{kn(o,t,0)});t.asyncDep=i}else vo(t,i)}else oA(t)}function vo(t,e,s){Q(e)?t.type.__ssrInlineRender?t.ssrRender=e:t.render=e:Pe(e)&&(t.setupState=yR(e)),oA(t)}function oA(t,e,s){const r=t.type;t.render||(t.render=r.render||Jt);{const E=LE(t);Ps();try{XO(t)}finally{Ms(),E()}}}const Pl={get(t,e){return He(t,"get",""),t[e]}};function Ml(t){const e=s=>{t.exposed=s||{}};return{attrs:new Proxy(t.attrs,Pl),slots:t.slots,emit:t.emit,expose:e}}function zn(t){return t.exposed?t.exposeProxy||(t.exposeProxy=new Proxy(yR(IO(t.exposed)),{get(e,s){if(s in e)return e[s];if(s in EE)return EE[s](t)},has(e,s){return s in e||s in EE}})):t.proxy}function Ul(t,e=!0){return Q(t)?t.displayName||t.name:t.name||e&&t.__name}function yl(t){return Q(t)&&"__vccOpts"in t}const ml=(t,e)=>cO(t,e,SE),Bl="3.5.13";/**
* @vue/runtime-dom v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let aT;const wo=typeof window<"u"&&window.trustedTypes;if(wo)try{aT=wo.createPolicy("vue",{createHTML:t=>t})}catch{}const aA=aT?t=>aT.createHTML(t):t=>t,Fl="http://www.w3.org/2000/svg",Gl="http://www.w3.org/1998/Math/MathML",es=typeof document<"u"?document:null,Vo=es&&es.createElement("template"),bl={insert:(t,e,s)=>{e.insertBefore(t,s||null)},remove:t=>{const e=t.parentNode;e&&e.removeChild(t)},createElement:(t,e,s,r)=>{const E=e==="svg"?es.createElementNS(Fl,t):e==="mathml"?es.createElementNS(Gl,t):s?es.createElement(t,{is:s}):es.createElement(t);return t==="select"&&r&&r.multiple!=null&&E.setAttribute("multiple",r.multiple),E},createText:t=>es.createTextNode(t),createComment:t=>es.createComment(t),setText:(t,e)=>{t.nodeValue=e},setElementText:(t,e)=>{t.textContent=e},parentNode:t=>t.parentNode,nextSibling:t=>t.nextSibling,querySelector:t=>es.querySelector(t),setScopeId(t,e){t.setAttribute(e,"")},insertStaticContent(t,e,s,r,E,n){const i=s?s.previousSibling:e.lastChild;if(E&&(E===n||E.nextSibling))for(;e.insertBefore(E.cloneNode(!0),s),!(E===n||!(E=E.nextSibling)););else{Vo.innerHTML=aA(r==="svg"?`<svg>${t}</svg>`:r==="mathml"?`<math>${t}</math>`:t);const T=Vo.content;if(r==="svg"||r==="mathml"){const o=T.firstChild;for(;o.firstChild;)T.appendChild(o.firstChild);T.removeChild(o)}e.insertBefore(T,s)}return[i?i.nextSibling:e.firstChild,s?s.previousSibling:e.lastChild]}},gl=Symbol("_vtc");function Hl(t,e,s){const r=t[gl];r&&(e=(e?[e,...r]:[...r]).join(" ")),e==null?t.removeAttribute("class"):s?t.setAttribute("class",e):t.className=e}const Wo=Symbol("_vod"),Yl=Symbol("_vsh"),vl=Symbol(""),wl=/(^|;)\s*display\s*:/;function Vl(t,e,s){const r=t.style,E=ye(s);let n=!1;if(s&&!E){if(e)if(ye(e))for(const i of e.split(";")){const T=i.slice(0,i.indexOf(":")).trim();s[T]==null&&wE(r,T,"")}else for(const i in e)s[i]==null&&wE(r,i,"");for(const i in s)i==="display"&&(n=!0),wE(r,i,s[i])}else if(E){if(e!==s){const i=r[vl];i&&(s+=";"+i),r.cssText=s,n=wl.test(s)}}else e&&t.removeAttribute("style");Wo in t&&(t[Wo]=n?r.display:"",t[Yl]&&(r.display="none"))}const xo=/\s*!important$/;function wE(t,e,s){if(q(s))s.forEach(r=>wE(t,e,r));else if(s==null&&(s=""),e.startsWith("--"))t.setProperty(e,s);else{const r=Wl(t,e);xo.test(s)?t.setProperty(ps(r),s.replace(xo,""),"important"):t[r]=s}}const Xo=["Webkit","Moz","ms"],ci={};function Wl(t,e){const s=ci[e];if(s)return s;let r=Ct(e);if(r!=="filter"&&r in t)return ci[e]=r;r=Kn(r);for(let E=0;E<Xo.length;E++){const n=Xo[E]+r;if(n in t)return ci[e]=n}return e}const Ko="http://www.w3.org/1999/xlink";function $o(t,e,s,r,E,n=KI(e)){r&&e.startsWith("xlink:")?s==null?t.removeAttributeNS(Ko,e.slice(6,e.length)):t.setAttributeNS(Ko,e,s):s==null||n&&!RR(s)?t.removeAttribute(e):t.setAttribute(e,n?"":Ds(s)?String(s):s)}function Jo(t,e,s,r,E){if(e==="innerHTML"||e==="textContent"){s!=null&&(t[e]=e==="innerHTML"?aA(s):s);return}const n=t.tagName;if(e==="value"&&n!=="PROGRESS"&&!n.includes("-")){const T=n==="OPTION"?t.getAttribute("value")||"":t.value,o=s==null?t.type==="checkbox"?"on":"":String(s);(T!==o||!("_value"in t))&&(t.value=o),s==null&&t.removeAttribute(e),t._value=s;return}let i=!1;if(s===""||s==null){const T=typeof t[e];T==="boolean"?s=RR(s):s==null&&T==="string"?(s="",i=!0):T==="number"&&(s=0,i=!0)}try{t[e]=s}catch{}i&&t.removeAttribute(E||e)}function tr(t,e,s,r){t.addEventListener(e,s,r)}function xl(t,e,s,r){t.removeEventListener(e,s,r)}const ko=Symbol("_vei");function Xl(t,e,s,r,E=null){const n=t[ko]||(t[ko]={}),i=n[e];if(r&&i)i.value=r;else{const[T,o]=Kl(e);if(r){const a=n[e]=kl(r,E);tr(t,T,a,o)}else i&&(xl(t,T,i,o),n[e]=void 0)}}const qo=/(?:Once|Passive|Capture)$/;function Kl(t){let e;if(qo.test(t)){e={};let r;for(;r=t.match(qo);)t=t.slice(0,t.length-r[0].length),e[r[0].toLowerCase()]=!0}return[t[2]===":"?t.slice(3):ps(t.slice(2)),e]}let ui=0;const $l=Promise.resolve(),Jl=()=>ui||($l.then(()=>ui=0),ui=Date.now());function kl(t,e){const s=r=>{if(!r._vts)r._vts=Date.now();else if(r._vts<=s.attached)return;kt(ql(r,s.value),e,5,[r])};return s.value=t,s.attached=Jl(),s}function ql(t,e){if(q(e)){const s=t.stopImmediatePropagation;return t.stopImmediatePropagation=()=>{s.call(t),t._stopped=!0},e.map(r=>E=>!E._stopped&&r&&r(E))}else return e}const Qo=t=>t.charCodeAt(0)===111&&t.charCodeAt(1)===110&&t.charCodeAt(2)>96&&t.charCodeAt(2)<123,Ql=(t,e,s,r,E,n)=>{const i=E==="svg";e==="class"?Hl(t,r,i):e==="style"?Vl(t,s,r):Wn(e)?PT(e)||Xl(t,e,s,r,n):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):jl(t,e,r,i))?(Jo(t,e,r),!t.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&$o(t,e,r,i,n,e!=="value")):t._isVueCE&&(/[A-Z]/.test(e)||!ye(r))?Jo(t,Ct(e),r,n,e):(e==="true-value"?t._trueValue=r:e==="false-value"&&(t._falseValue=r),$o(t,e,r,i))};function jl(t,e,s,r){if(r)return!!(e==="innerHTML"||e==="textContent"||e in t&&Qo(e)&&Q(s));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&t.tagName==="INPUT"||e==="type"&&t.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const E=t.tagName;if(E==="IMG"||E==="VIDEO"||E==="CANVAS"||E==="SOURCE")return!1}return Qo(e)&&ye(s)?!1:e in t}const jo=t=>{const e=t.props["onUpdate:modelValue"]||!1;return q(e)?s=>HE(e,s):e};function Zl(t){t.target.composing=!0}function Zo(t){const e=t.target;e.composing&&(e.composing=!1,e.dispatchEvent(new Event("input")))}const _i=Symbol("_assign"),zl={created(t,{modifiers:{lazy:e,trim:s,number:r}},E){t[_i]=jo(E);const n=r||E.props&&E.props.type==="number";tr(t,e?"change":"input",i=>{if(i.target.composing)return;let T=t.value;s&&(T=T.trim()),n&&(T=Zi(T)),t[_i](T)}),s&&tr(t,"change",()=>{t.value=t.value.trim()}),e||(tr(t,"compositionstart",Zl),tr(t,"compositionend",Zo),tr(t,"change",Zo))},mounted(t,{value:e}){t.value=e??""},beforeUpdate(t,{value:e,oldValue:s,modifiers:{lazy:r,trim:E,number:n}},i){if(t[_i]=jo(i),t.composing)return;const T=(n||t.type==="number")&&!/^0\d/.test(t.value)?Zi(t.value):t.value,o=e??"";T!==o&&(document.activeElement===t&&t.type!=="range"&&(r&&e===s||E&&t.value.trim()===o)||(t.value=o))}},eN=["ctrl","shift","alt","meta"],tN={stop:t=>t.stopPropagation(),prevent:t=>t.preventDefault(),self:t=>t.target!==t.currentTarget,ctrl:t=>!t.ctrlKey,shift:t=>!t.shiftKey,alt:t=>!t.altKey,meta:t=>!t.metaKey,left:t=>"button"in t&&t.button!==0,middle:t=>"button"in t&&t.button!==1,right:t=>"button"in t&&t.button!==2,exact:(t,e)=>eN.some(s=>t[`${s}Key`]&&!e.includes(s))},os=(t,e)=>{const s=t._withMods||(t._withMods={}),r=e.join(".");return s[r]||(s[r]=(E,...n)=>{for(let i=0;i<e.length;i++){const T=tN[e[i]];if(T&&T(E,e))return}return t(E,...n)})},sN={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},rN=(t,e)=>{const s=t._withKeys||(t._withKeys={}),r=e.join(".");return s[r]||(s[r]=E=>{if(!("key"in E))return;const n=ps(E.key);if(e.some(i=>i===n||sN[i]===n))return t(E)})},EN=Qe({patchProp:Ql},bl);let zo;function nN(){return zo||(zo=El(EN))}const iN=(...t)=>{const e=nN().createApp(...t),{mount:s}=e;return e.mount=r=>{const E=oN(r);if(!E)return;const n=e._component;!Q(n)&&!n.render&&!n.template&&(n.template=E.innerHTML),E.nodeType===1&&(E.textContent="");const i=s(E,!1,TN(E));return E instanceof Element&&(E.removeAttribute("v-cloak"),E.setAttribute("data-v-app","")),i},e};function TN(t){if(t instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&t instanceof MathMLElement)return"mathml"}function oN(t){return ye(t)?document.querySelector(t):t}function $(t,e,s,r){function E(n){return n instanceof s?n:new s(function(i){i(n)})}return new(s||(s=Promise))(function(n,i){function T(R){try{a(r.next(R))}catch(A){i(A)}}function o(R){try{a(r.throw(R))}catch(A){i(A)}}function a(R){R.done?n(R.value):E(R.value).then(T,o)}a((r=r.apply(t,e||[])).next())})}function ea(t){var e=typeof Symbol=="function"&&Symbol.iterator,s=e&&t[e],r=0;if(s)return s.call(t);if(t&&typeof t.length=="number")return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function Z(t){return this instanceof Z?(this.v=t,this):new Z(t)}function Kt(t,e,s){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r=s.apply(t,e||[]),E,n=[];return E=Object.create((typeof AsyncIterator=="function"?AsyncIterator:Object).prototype),T("next"),T("throw"),T("return",i),E[Symbol.asyncIterator]=function(){return this},E;function i(u){return function(h){return Promise.resolve(h).then(u,A)}}function T(u,h){r[u]&&(E[u]=function(U){return new Promise(function(j,B){n.push([u,U,j,B])>1||o(u,U)})},h&&(E[u]=h(E[u])))}function o(u,h){try{a(r[u](h))}catch(U){l(n[0][3],U)}}function a(u){u.value instanceof Z?Promise.resolve(u.value.v).then(R,A):l(n[0][2],u)}function R(u){o("next",u)}function A(u){o("throw",u)}function l(u,h){u(h),n.shift(),n.length&&o(n[0][0],n[0][1])}}function VE(t){var e,s;return e={},r("next"),r("throw",function(E){throw E}),r("return"),e[Symbol.iterator]=function(){return this},e;function r(E,n){e[E]=t[E]?function(i){return(s=!s)?{value:Z(t[E](i)),done:!1}:n?n(i):i}:n}}function Vs(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=t[Symbol.asyncIterator],s;return e?e.call(t):(t=typeof ea=="function"?ea(t):t[Symbol.iterator](),s={},r("next"),r("throw"),r("return"),s[Symbol.asyncIterator]=function(){return this},s);function r(n){s[n]=t[n]&&function(i){return new Promise(function(T,o){i=t[n](i),E(T,o,i.done,i.value)})}}function E(n,i,T,o){Promise.resolve(o).then(function(a){n({value:a,done:T})},i)}}const aN=new TextDecoder("utf-8"),RT=t=>aN.decode(t),RN=new TextEncoder,xT=t=>RN.encode(t),AN=t=>typeof t=="number",RA=t=>typeof t=="boolean",me=t=>typeof t=="function",rt=t=>t!=null&&Object(t)===t,xs=t=>rt(t)&&me(t.then),dE=t=>rt(t)&&me(t[Symbol.iterator]),Gr=t=>rt(t)&&me(t[Symbol.asyncIterator]),AT=t=>rt(t)&&rt(t.schema),AA=t=>rt(t)&&"done"in t&&"value"in t,SA=t=>rt(t)&&me(t.stat)&&AN(t.fd),IA=t=>rt(t)&&XT(t.body),ei=t=>"_getDOMStream"in t&&"_getNodeStream"in t,SN=t=>rt(t)&&me(t.abort)&&me(t.getWriter)&&!ei(t),XT=t=>rt(t)&&me(t.cancel)&&me(t.getReader)&&!ei(t),IN=t=>rt(t)&&me(t.end)&&me(t.write)&&RA(t.writable)&&!ei(t),OA=t=>rt(t)&&me(t.read)&&me(t.pipe)&&RA(t.readable)&&!ei(t),ON=t=>rt(t)&&me(t.clear)&&me(t.bytes)&&me(t.position)&&me(t.setPosition)&&me(t.capacity)&&me(t.getBufferIdentifier)&&me(t.createLong),KT=typeof SharedArrayBuffer<"u"?SharedArrayBuffer:ArrayBuffer;function lN(t){const e=t[0]?[t[0]]:[];let s,r,E,n;for(let i,T,o=0,a=0,R=t.length;++o<R;){if(i=e[a],T=t[o],!i||!T||i.buffer!==T.buffer||T.byteOffset<i.byteOffset){T&&(e[++a]=T);continue}if({byteOffset:s,byteLength:E}=i,{byteOffset:r,byteLength:n}=T,s+E<r||r+n<s){T&&(e[++a]=T);continue}e[a]=new Uint8Array(i.buffer,s,r-s+n)}return e}function ta(t,e,s=0,r=e.byteLength){const E=t.byteLength,n=new Uint8Array(t.buffer,t.byteOffset,E),i=new Uint8Array(e.buffer,e.byteOffset,Math.min(r,E));return n.set(i,s),t}function qt(t,e){const s=lN(t),r=s.reduce((R,A)=>R+A.byteLength,0);let E,n,i,T=0,o=-1;const a=Math.min(e||Number.POSITIVE_INFINITY,r);for(const R=s.length;++o<R;){if(E=s[o],n=E.subarray(0,Math.min(E.length,a-T)),a<=T+n.length){n.length<E.length?s[o]=E.subarray(n.length):n.length===E.length&&o++,i?ta(i,n,T):i=n;break}ta(i||(i=new Uint8Array(a)),n,T),T+=n.length}return[i||new Uint8Array(0),s.slice(o),r-(i?i.byteLength:0)]}function Ie(t,e){let s=AA(e)?e.value:e;return s instanceof t?t===Uint8Array?new t(s.buffer,s.byteOffset,s.byteLength):s:s?(typeof s=="string"&&(s=xT(s)),s instanceof ArrayBuffer?new t(s):s instanceof KT?new t(s):ON(s)?Ie(t,s.bytes()):ArrayBuffer.isView(s)?s.byteLength<=0?new t(0):new t(s.buffer,s.byteOffset,s.byteLength/t.BYTES_PER_ELEMENT):t.from(s)):new t(0)}const xr=t=>Ie(Int32Array,t),sa=t=>Ie(BigInt64Array,t),te=t=>Ie(Uint8Array,t),ST=t=>(t.next(),t);function*NN(t,e){const s=function*(E){yield E},r=typeof e=="string"||ArrayBuffer.isView(e)||e instanceof ArrayBuffer||e instanceof KT?s(e):dE(e)?e:s(e);return yield*ST(function*(E){let n=null;do n=E.next(yield Ie(t,n));while(!n.done)}(r[Symbol.iterator]())),new t}const cN=t=>NN(Uint8Array,t);function lA(t,e){return Kt(this,arguments,function*(){if(xs(e))return yield Z(yield Z(yield*VE(Vs(lA(t,yield Z(e))))));const r=function(i){return Kt(this,arguments,function*(){yield yield Z(yield Z(i))})},E=function(i){return Kt(this,arguments,function*(){yield Z(yield*VE(Vs(ST(function*(T){let o=null;do o=T.next(yield o==null?void 0:o.value);while(!o.done)}(i[Symbol.iterator]())))))})},n=typeof e=="string"||ArrayBuffer.isView(e)||e instanceof ArrayBuffer||e instanceof KT?r(e):dE(e)?E(e):Gr(e)?e:r(e);return yield Z(yield*VE(Vs(ST(function(i){return Kt(this,arguments,function*(){let T=null;do T=yield Z(i.next(yield yield Z(Ie(t,T))));while(!T.done)})}(n[Symbol.asyncIterator]()))))),yield Z(new t)})}const uN=t=>lA(Uint8Array,t);function NA(t,e,s){if(t!==0){s=s.slice(0,e);for(let r=-1,E=s.length;++r<E;)s[r]+=t}return s.subarray(0,e)}function _N(t,e){let s=0;const r=t.length;if(r!==e.length)return!1;if(r>0)do if(t[s]!==e[s])return!1;while(++s<r);return!0}const Nt={fromIterable(t){return GE(LN(t))},fromAsyncIterable(t){return GE(dN(t))},fromDOMStream(t){return GE(CN(t))},fromNodeStream(t){return GE(hN(t))},toDOMStream(t,e){throw new Error('"toDOMStream" not available in this environment')},toNodeStream(t,e){throw new Error('"toNodeStream" not available in this environment')}},GE=t=>(t.next(),t);function*LN(t){let e,s=!1,r=[],E,n,i,T=0;function o(){return n==="peek"?qt(r,i)[0]:([E,r,T]=qt(r,i),E)}({cmd:n,size:i}=(yield null)||{cmd:"read",size:0});const a=cN(t)[Symbol.iterator]();try{do if({done:e,value:E}=Number.isNaN(i-T)?a.next():a.next(i-T),!e&&E.byteLength>0&&(r.push(E),T+=E.byteLength),e||i<=T)do({cmd:n,size:i}=yield o());while(i<T);while(!e)}catch(R){(s=!0)&&typeof a.throw=="function"&&a.throw(R)}finally{s===!1&&typeof a.return=="function"&&a.return(null)}return null}function dN(t){return Kt(this,arguments,function*(){let s,r=!1,E=[],n,i,T,o=0;function a(){return i==="peek"?qt(E,T)[0]:([n,E,o]=qt(E,T),n)}({cmd:i,size:T}=(yield yield Z(null))||{cmd:"read",size:0});const R=uN(t)[Symbol.asyncIterator]();try{do if({done:s,value:n}=Number.isNaN(T-o)?yield Z(R.next()):yield Z(R.next(T-o)),!s&&n.byteLength>0&&(E.push(n),o+=n.byteLength),s||T<=o)do({cmd:i,size:T}=yield yield Z(a()));while(T<o);while(!s)}catch(A){(r=!0)&&typeof R.throw=="function"&&(yield Z(R.throw(A)))}finally{r===!1&&typeof R.return=="function"&&(yield Z(R.return(new Uint8Array(0))))}return yield Z(null)})}function CN(t){return Kt(this,arguments,function*(){let s=!1,r=!1,E=[],n,i,T,o=0;function a(){return i==="peek"?qt(E,T)[0]:([n,E,o]=qt(E,T),n)}({cmd:i,size:T}=(yield yield Z(null))||{cmd:"read",size:0});const R=new fN(t);try{do if({done:s,value:n}=Number.isNaN(T-o)?yield Z(R.read()):yield Z(R.read(T-o)),!s&&n.byteLength>0&&(E.push(te(n)),o+=n.byteLength),s||T<=o)do({cmd:i,size:T}=yield yield Z(a()));while(T<o);while(!s)}catch(A){(r=!0)&&(yield Z(R.cancel(A)))}finally{r===!1?yield Z(R.cancel()):t.locked&&R.releaseLock()}return yield Z(null)})}class fN{constructor(e){this.source=e,this.reader=null,this.reader=this.source.getReader(),this.reader.closed.catch(()=>{})}get closed(){return this.reader?this.reader.closed.catch(()=>{}):Promise.resolve()}releaseLock(){this.reader&&this.reader.releaseLock(),this.reader=null}cancel(e){return $(this,void 0,void 0,function*(){const{reader:s,source:r}=this;s&&(yield s.cancel(e).catch(()=>{})),r&&r.locked&&this.releaseLock()})}read(e){return $(this,void 0,void 0,function*(){if(e===0)return{done:this.reader==null,value:new Uint8Array(0)};const s=yield this.reader.read();return!s.done&&(s.value=te(s)),s})}}const Li=(t,e)=>{const s=E=>r([e,E]);let r;return[e,s,new Promise(E=>(r=E)&&t.once(e,s))]};function hN(t){return Kt(this,arguments,function*(){const s=[];let r="error",E=!1,n=null,i,T,o=0,a=[],R;function A(){return i==="peek"?qt(a,T)[0]:([R,a,o]=qt(a,T),R)}if({cmd:i,size:T}=(yield yield Z(null))||{cmd:"read",size:0},t.isTTY)return yield yield Z(new Uint8Array(0)),yield Z(null);try{s[0]=Li(t,"end"),s[1]=Li(t,"error");do{if(s[2]=Li(t,"readable"),[r,n]=yield Z(Promise.race(s.map(u=>u[2]))),r==="error")break;if((E=r==="end")||(Number.isFinite(T-o)?(R=te(t.read(T-o)),R.byteLength<T-o&&(R=te(t.read()))):R=te(t.read()),R.byteLength>0&&(a.push(R),o+=R.byteLength)),E||T<=o)do({cmd:i,size:T}=yield yield Z(A()));while(T<o)}while(!E)}finally{yield Z(l(s,r==="error"?n:null))}return yield Z(null);function l(u,h){return R=a=null,new Promise((U,j)=>{for(const[B,k]of u)t.off(B,k);try{const B=t.destroy;B&&B.call(t,h),h=void 0}catch(B){h=B||h}finally{h!=null?j(h):U()}})}})}var Ue;(function(t){t[t.V1=0]="V1",t[t.V2=1]="V2",t[t.V3=2]="V3",t[t.V4=3]="V4",t[t.V5=4]="V5"})(Ue||(Ue={}));var we;(function(t){t[t.Sparse=0]="Sparse",t[t.Dense=1]="Dense"})(we||(we={}));var ve;(function(t){t[t.HALF=0]="HALF",t[t.SINGLE=1]="SINGLE",t[t.DOUBLE=2]="DOUBLE"})(ve||(ve={}));var ft;(function(t){t[t.DAY=0]="DAY",t[t.MILLISECOND=1]="MILLISECOND"})(ft||(ft={}));var Y;(function(t){t[t.SECOND=0]="SECOND",t[t.MILLISECOND=1]="MILLISECOND",t[t.MICROSECOND=2]="MICROSECOND",t[t.NANOSECOND=3]="NANOSECOND"})(Y||(Y={}));var Qt;(function(t){t[t.YEAR_MONTH=0]="YEAR_MONTH",t[t.DAY_TIME=1]="DAY_TIME",t[t.MONTH_DAY_NANO=2]="MONTH_DAY_NANO"})(Qt||(Qt={}));const di=2,Wt=4,is=4,ae=4,_s=new Int32Array(2),ra=new Float32Array(_s.buffer),Ea=new Float64Array(_s.buffer),bE=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;var IT;(function(t){t[t.UTF8_BYTES=1]="UTF8_BYTES",t[t.UTF16_STRING=2]="UTF16_STRING"})(IT||(IT={}));let Mr=class cA{constructor(e){this.bytes_=e,this.position_=0,this.text_decoder_=new TextDecoder}static allocate(e){return new cA(new Uint8Array(e))}clear(){this.position_=0}bytes(){return this.bytes_}position(){return this.position_}setPosition(e){this.position_=e}capacity(){return this.bytes_.length}readInt8(e){return this.readUint8(e)<<24>>24}readUint8(e){return this.bytes_[e]}readInt16(e){return this.readUint16(e)<<16>>16}readUint16(e){return this.bytes_[e]|this.bytes_[e+1]<<8}readInt32(e){return this.bytes_[e]|this.bytes_[e+1]<<8|this.bytes_[e+2]<<16|this.bytes_[e+3]<<24}readUint32(e){return this.readInt32(e)>>>0}readInt64(e){return BigInt.asIntN(64,BigInt(this.readUint32(e))+(BigInt(this.readUint32(e+4))<<BigInt(32)))}readUint64(e){return BigInt.asUintN(64,BigInt(this.readUint32(e))+(BigInt(this.readUint32(e+4))<<BigInt(32)))}readFloat32(e){return _s[0]=this.readInt32(e),ra[0]}readFloat64(e){return _s[bE?0:1]=this.readInt32(e),_s[bE?1:0]=this.readInt32(e+4),Ea[0]}writeInt8(e,s){this.bytes_[e]=s}writeUint8(e,s){this.bytes_[e]=s}writeInt16(e,s){this.bytes_[e]=s,this.bytes_[e+1]=s>>8}writeUint16(e,s){this.bytes_[e]=s,this.bytes_[e+1]=s>>8}writeInt32(e,s){this.bytes_[e]=s,this.bytes_[e+1]=s>>8,this.bytes_[e+2]=s>>16,this.bytes_[e+3]=s>>24}writeUint32(e,s){this.bytes_[e]=s,this.bytes_[e+1]=s>>8,this.bytes_[e+2]=s>>16,this.bytes_[e+3]=s>>24}writeInt64(e,s){this.writeInt32(e,Number(BigInt.asIntN(32,s))),this.writeInt32(e+4,Number(BigInt.asIntN(32,s>>BigInt(32))))}writeUint64(e,s){this.writeUint32(e,Number(BigInt.asUintN(32,s))),this.writeUint32(e+4,Number(BigInt.asUintN(32,s>>BigInt(32))))}writeFloat32(e,s){ra[0]=s,this.writeInt32(e,_s[0])}writeFloat64(e,s){Ea[0]=s,this.writeInt32(e,_s[bE?0:1]),this.writeInt32(e+4,_s[bE?1:0])}getBufferIdentifier(){if(this.bytes_.length<this.position_+Wt+is)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");let e="";for(let s=0;s<is;s++)e+=String.fromCharCode(this.readInt8(this.position_+Wt+s));return e}__offset(e,s){const r=e-this.readInt32(e);return s<this.readInt16(r)?this.readInt16(r+s):0}__union(e,s){return e.bb_pos=s+this.readInt32(s),e.bb=this,e}__string(e,s){e+=this.readInt32(e);const r=this.readInt32(e);e+=Wt;const E=this.bytes_.subarray(e,e+r);return s===IT.UTF8_BYTES?E:this.text_decoder_.decode(E)}__union_with_string(e,s){return typeof e=="string"?this.__string(s):this.__union(e,s)}__indirect(e){return e+this.readInt32(e)}__vector(e){return e+this.readInt32(e)+Wt}__vector_len(e){return this.readInt32(e+this.readInt32(e))}__has_identifier(e){if(e.length!=is)throw new Error("FlatBuffers: file identifier must be length "+is);for(let s=0;s<is;s++)if(e.charCodeAt(s)!=this.readInt8(this.position()+Wt+s))return!1;return!0}createScalarList(e,s){const r=[];for(let E=0;E<s;++E){const n=e(E);n!==null&&r.push(n)}return r}createObjList(e,s){const r=[];for(let E=0;E<s;++E){const n=e(E);n!==null&&r.push(n.unpack())}return r}},uA=class _A{constructor(e){this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null,this.text_encoder=new TextEncoder;let s;e?s=e:s=1024,this.bb=Mr.allocate(s),this.space=s}clear(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null}forceDefaults(e){this.force_defaults=e}dataBuffer(){return this.bb}asUint8Array(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())}prep(e,s){e>this.minalign&&(this.minalign=e);const r=~(this.bb.capacity()-this.space+s)+1&e-1;for(;this.space<r+e+s;){const E=this.bb.capacity();this.bb=_A.growByteBuffer(this.bb),this.space+=this.bb.capacity()-E}this.pad(r)}pad(e){for(let s=0;s<e;s++)this.bb.writeInt8(--this.space,0)}writeInt8(e){this.bb.writeInt8(this.space-=1,e)}writeInt16(e){this.bb.writeInt16(this.space-=2,e)}writeInt32(e){this.bb.writeInt32(this.space-=4,e)}writeInt64(e){this.bb.writeInt64(this.space-=8,e)}writeFloat32(e){this.bb.writeFloat32(this.space-=4,e)}writeFloat64(e){this.bb.writeFloat64(this.space-=8,e)}addInt8(e){this.prep(1,0),this.writeInt8(e)}addInt16(e){this.prep(2,0),this.writeInt16(e)}addInt32(e){this.prep(4,0),this.writeInt32(e)}addInt64(e){this.prep(8,0),this.writeInt64(e)}addFloat32(e){this.prep(4,0),this.writeFloat32(e)}addFloat64(e){this.prep(8,0),this.writeFloat64(e)}addFieldInt8(e,s,r){(this.force_defaults||s!=r)&&(this.addInt8(s),this.slot(e))}addFieldInt16(e,s,r){(this.force_defaults||s!=r)&&(this.addInt16(s),this.slot(e))}addFieldInt32(e,s,r){(this.force_defaults||s!=r)&&(this.addInt32(s),this.slot(e))}addFieldInt64(e,s,r){(this.force_defaults||s!==r)&&(this.addInt64(s),this.slot(e))}addFieldFloat32(e,s,r){(this.force_defaults||s!=r)&&(this.addFloat32(s),this.slot(e))}addFieldFloat64(e,s,r){(this.force_defaults||s!=r)&&(this.addFloat64(s),this.slot(e))}addFieldOffset(e,s,r){(this.force_defaults||s!=r)&&(this.addOffset(s),this.slot(e))}addFieldStruct(e,s,r){s!=r&&(this.nested(s),this.slot(e))}nested(e){if(e!=this.offset())throw new TypeError("FlatBuffers: struct must be serialized inline.")}notNested(){if(this.isNested)throw new TypeError("FlatBuffers: object serialization must not be nested.")}slot(e){this.vtable!==null&&(this.vtable[e]=this.offset())}offset(){return this.bb.capacity()-this.space}static growByteBuffer(e){const s=e.capacity();if(s&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");const r=s<<1,E=Mr.allocate(r);return E.setPosition(r-s),E.bytes().set(e.bytes(),r-s),E}addOffset(e){this.prep(Wt,0),this.writeInt32(this.offset()-e+Wt)}startObject(e){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=e;for(let s=0;s<e;s++)this.vtable[s]=0;this.isNested=!0,this.object_start=this.offset()}endObject(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);const e=this.offset();let s=this.vtable_in_use-1;for(;s>=0&&this.vtable[s]==0;s--);const r=s+1;for(;s>=0;s--)this.addInt16(this.vtable[s]!=0?e-this.vtable[s]:0);const E=2;this.addInt16(e-this.object_start);const n=(r+E)*di;this.addInt16(n);let i=0;const T=this.space;e:for(s=0;s<this.vtables.length;s++){const o=this.bb.capacity()-this.vtables[s];if(n==this.bb.readInt16(o)){for(let a=di;a<n;a+=di)if(this.bb.readInt16(T+a)!=this.bb.readInt16(o+a))continue e;i=this.vtables[s];break}}return i?(this.space=this.bb.capacity()-e,this.bb.writeInt32(this.space,i-e)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-e,this.offset()-e)),this.isNested=!1,e}finish(e,s,r){const E=r?ae:0;if(s){const n=s;if(this.prep(this.minalign,Wt+is+E),n.length!=is)throw new TypeError("FlatBuffers: file identifier must be length "+is);for(let i=is-1;i>=0;i--)this.writeInt8(n.charCodeAt(i))}this.prep(this.minalign,Wt+E),this.addOffset(e),E&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)}finishSizePrefixed(e,s){this.finish(e,s,!0)}requiredField(e,s){const r=this.bb.capacity()-e,E=r-this.bb.readInt32(r);if(!(s<this.bb.readInt16(E)&&this.bb.readInt16(E+s)!=0))throw new TypeError("FlatBuffers: field "+s+" must be set")}startVector(e,s,r){this.notNested(),this.vector_num_elems=s,this.prep(Wt,e*s),this.prep(r,e*s)}endVector(){return this.writeInt32(this.vector_num_elems),this.offset()}createSharedString(e){if(!e)return 0;if(this.string_maps||(this.string_maps=new Map),this.string_maps.has(e))return this.string_maps.get(e);const s=this.createString(e);return this.string_maps.set(e,s),s}createString(e){if(e==null)return 0;let s;return e instanceof Uint8Array?s=e:s=this.text_encoder.encode(e),this.addInt8(0),this.startVector(1,s.length,1),this.bb.setPosition(this.space-=s.length),this.bb.bytes().set(s,this.space),this.endVector()}createByteVector(e){return e==null?0:(this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length),this.bb.bytes().set(e,this.space),this.endVector())}createObjectOffset(e){return e===null?0:typeof e=="string"?this.createString(e):e.pack(this)}createObjectOffsetList(e){const s=[];for(let r=0;r<e.length;++r){const E=e[r];if(E!==null)s.push(this.createObjectOffset(E));else throw new TypeError("FlatBuffers: Argument for createObjectOffsetList cannot contain null.")}return s}createStructOffsetList(e,s){return s(this,e.length),this.createObjectOffsetList(e.slice().reverse()),this.endVector()}};var Rn;(function(t){t[t.BUFFER=0]="BUFFER"})(Rn||(Rn={}));var An;(function(t){t[t.LZ4_FRAME=0]="LZ4_FRAME",t[t.ZSTD=1]="ZSTD"})(An||(An={}));class Ls{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsBodyCompression(e,s){return(s||new Ls).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsBodyCompression(e,s){return e.setPosition(e.position()+ae),(s||new Ls).__init(e.readInt32(e.position())+e.position(),e)}codec(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt8(this.bb_pos+e):An.LZ4_FRAME}method(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readInt8(this.bb_pos+e):Rn.BUFFER}static startBodyCompression(e){e.startObject(2)}static addCodec(e,s){e.addFieldInt8(0,s,An.LZ4_FRAME)}static addMethod(e,s){e.addFieldInt8(1,s,Rn.BUFFER)}static endBodyCompression(e){return e.endObject()}static createBodyCompression(e,s,r){return Ls.startBodyCompression(e),Ls.addCodec(e,s),Ls.addMethod(e,r),Ls.endBodyCompression(e)}}class LA{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}offset(){return this.bb.readInt64(this.bb_pos)}length(){return this.bb.readInt64(this.bb_pos+8)}static sizeOf(){return 16}static createBuffer(e,s,r){return e.prep(8,16),e.writeInt64(BigInt(r??0)),e.writeInt64(BigInt(s??0)),e.offset()}}let dA=class{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}length(){return this.bb.readInt64(this.bb_pos)}nullCount(){return this.bb.readInt64(this.bb_pos+8)}static sizeOf(){return 16}static createFieldNode(e,s,r){return e.prep(8,16),e.writeInt64(BigInt(r??0)),e.writeInt64(BigInt(s??0)),e.offset()}},ts=class OT{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsRecordBatch(e,s){return(s||new OT).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsRecordBatch(e,s){return e.setPosition(e.position()+ae),(s||new OT).__init(e.readInt32(e.position())+e.position(),e)}length(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt64(this.bb_pos+e):BigInt("0")}nodes(e,s){const r=this.bb.__offset(this.bb_pos,6);return r?(s||new dA).__init(this.bb.__vector(this.bb_pos+r)+e*16,this.bb):null}nodesLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}buffers(e,s){const r=this.bb.__offset(this.bb_pos,8);return r?(s||new LA).__init(this.bb.__vector(this.bb_pos+r)+e*16,this.bb):null}buffersLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}compression(e){const s=this.bb.__offset(this.bb_pos,10);return s?(e||new Ls).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startRecordBatch(e){e.startObject(4)}static addLength(e,s){e.addFieldInt64(0,s,BigInt("0"))}static addNodes(e,s){e.addFieldOffset(1,s,0)}static startNodesVector(e,s){e.startVector(16,s,8)}static addBuffers(e,s){e.addFieldOffset(2,s,0)}static startBuffersVector(e,s){e.startVector(16,s,8)}static addCompression(e,s){e.addFieldOffset(3,s,0)}static endRecordBatch(e){return e.endObject()}},sr=class lT{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsDictionaryBatch(e,s){return(s||new lT).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsDictionaryBatch(e,s){return e.setPosition(e.position()+ae),(s||new lT).__init(e.readInt32(e.position())+e.position(),e)}id(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt64(this.bb_pos+e):BigInt("0")}data(e){const s=this.bb.__offset(this.bb_pos,6);return s?(e||new ts).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}isDelta(){const e=this.bb.__offset(this.bb_pos,8);return e?!!this.bb.readInt8(this.bb_pos+e):!1}static startDictionaryBatch(e){e.startObject(3)}static addId(e,s){e.addFieldInt64(0,s,BigInt("0"))}static addData(e,s){e.addFieldOffset(1,s,0)}static addIsDelta(e,s){e.addFieldInt8(2,+s,0)}static endDictionaryBatch(e){return e.endObject()}};var Ur;(function(t){t[t.Little=0]="Little",t[t.Big=1]="Big"})(Ur||(Ur={}));var Sn;(function(t){t[t.DenseArray=0]="DenseArray"})(Sn||(Sn={}));class At{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsInt(e,s){return(s||new At).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsInt(e,s){return e.setPosition(e.position()+ae),(s||new At).__init(e.readInt32(e.position())+e.position(),e)}bitWidth(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt32(this.bb_pos+e):0}isSigned(){const e=this.bb.__offset(this.bb_pos,6);return e?!!this.bb.readInt8(this.bb_pos+e):!1}static startInt(e){e.startObject(2)}static addBitWidth(e,s){e.addFieldInt32(0,s,0)}static addIsSigned(e,s){e.addFieldInt8(1,+s,0)}static endInt(e){return e.endObject()}static createInt(e,s,r){return At.startInt(e),At.addBitWidth(e,s),At.addIsSigned(e,r),At.endInt(e)}}class Ts{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsDictionaryEncoding(e,s){return(s||new Ts).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsDictionaryEncoding(e,s){return e.setPosition(e.position()+ae),(s||new Ts).__init(e.readInt32(e.position())+e.position(),e)}id(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt64(this.bb_pos+e):BigInt("0")}indexType(e){const s=this.bb.__offset(this.bb_pos,6);return s?(e||new At).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}isOrdered(){const e=this.bb.__offset(this.bb_pos,8);return e?!!this.bb.readInt8(this.bb_pos+e):!1}dictionaryKind(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readInt16(this.bb_pos+e):Sn.DenseArray}static startDictionaryEncoding(e){e.startObject(4)}static addId(e,s){e.addFieldInt64(0,s,BigInt("0"))}static addIndexType(e,s){e.addFieldOffset(1,s,0)}static addIsOrdered(e,s){e.addFieldInt8(2,+s,0)}static addDictionaryKind(e,s){e.addFieldInt16(3,s,Sn.DenseArray)}static endDictionaryEncoding(e){return e.endObject()}}class Be{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsKeyValue(e,s){return(s||new Be).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsKeyValue(e,s){return e.setPosition(e.position()+ae),(s||new Be).__init(e.readInt32(e.position())+e.position(),e)}key(e){const s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,e):null}value(e){const s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,e):null}static startKeyValue(e){e.startObject(2)}static addKey(e,s){e.addFieldOffset(0,s,0)}static addValue(e,s){e.addFieldOffset(1,s,0)}static endKeyValue(e){return e.endObject()}static createKeyValue(e,s,r){return Be.startKeyValue(e),Be.addKey(e,s),Be.addValue(e,r),Be.endKeyValue(e)}}let na=class $r{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsBinary(e,s){return(s||new $r).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsBinary(e,s){return e.setPosition(e.position()+ae),(s||new $r).__init(e.readInt32(e.position())+e.position(),e)}static startBinary(e){e.startObject(0)}static endBinary(e){return e.endObject()}static createBinary(e){return $r.startBinary(e),$r.endBinary(e)}},ia=class Jr{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsBool(e,s){return(s||new Jr).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsBool(e,s){return e.setPosition(e.position()+ae),(s||new Jr).__init(e.readInt32(e.position())+e.position(),e)}static startBool(e){e.startObject(0)}static endBool(e){return e.endObject()}static createBool(e){return Jr.startBool(e),Jr.endBool(e)}},WE=class rr{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsDate(e,s){return(s||new rr).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsDate(e,s){return e.setPosition(e.position()+ae),(s||new rr).__init(e.readInt32(e.position())+e.position(),e)}unit(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):ft.MILLISECOND}static startDate(e){e.startObject(1)}static addUnit(e,s){e.addFieldInt16(0,s,ft.MILLISECOND)}static endDate(e){return e.endObject()}static createDate(e,s){return rr.startDate(e),rr.addUnit(e,s),rr.endDate(e)}},Er=class Ns{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsDecimal(e,s){return(s||new Ns).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsDecimal(e,s){return e.setPosition(e.position()+ae),(s||new Ns).__init(e.readInt32(e.position())+e.position(),e)}precision(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt32(this.bb_pos+e):0}scale(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readInt32(this.bb_pos+e):0}bitWidth(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.readInt32(this.bb_pos+e):128}static startDecimal(e){e.startObject(3)}static addPrecision(e,s){e.addFieldInt32(0,s,0)}static addScale(e,s){e.addFieldInt32(1,s,0)}static addBitWidth(e,s){e.addFieldInt32(2,s,128)}static endDecimal(e){return e.endObject()}static createDecimal(e,s,r,E){return Ns.startDecimal(e),Ns.addPrecision(e,s),Ns.addScale(e,r),Ns.addBitWidth(e,E),Ns.endDecimal(e)}},xE=class nr{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsDuration(e,s){return(s||new nr).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsDuration(e,s){return e.setPosition(e.position()+ae),(s||new nr).__init(e.readInt32(e.position())+e.position(),e)}unit(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):Y.MILLISECOND}static startDuration(e){e.startObject(1)}static addUnit(e,s){e.addFieldInt16(0,s,Y.MILLISECOND)}static endDuration(e){return e.endObject()}static createDuration(e,s){return nr.startDuration(e),nr.addUnit(e,s),nr.endDuration(e)}},XE=class ir{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsFixedSizeBinary(e,s){return(s||new ir).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsFixedSizeBinary(e,s){return e.setPosition(e.position()+ae),(s||new ir).__init(e.readInt32(e.position())+e.position(),e)}byteWidth(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt32(this.bb_pos+e):0}static startFixedSizeBinary(e){e.startObject(1)}static addByteWidth(e,s){e.addFieldInt32(0,s,0)}static endFixedSizeBinary(e){return e.endObject()}static createFixedSizeBinary(e,s){return ir.startFixedSizeBinary(e),ir.addByteWidth(e,s),ir.endFixedSizeBinary(e)}},KE=class Tr{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsFixedSizeList(e,s){return(s||new Tr).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsFixedSizeList(e,s){return e.setPosition(e.position()+ae),(s||new Tr).__init(e.readInt32(e.position())+e.position(),e)}listSize(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt32(this.bb_pos+e):0}static startFixedSizeList(e){e.startObject(1)}static addListSize(e,s){e.addFieldInt32(0,s,0)}static endFixedSizeList(e){return e.endObject()}static createFixedSizeList(e,s){return Tr.startFixedSizeList(e),Tr.addListSize(e,s),Tr.endFixedSizeList(e)}};class xt{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsFloatingPoint(e,s){return(s||new xt).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsFloatingPoint(e,s){return e.setPosition(e.position()+ae),(s||new xt).__init(e.readInt32(e.position())+e.position(),e)}precision(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):ve.HALF}static startFloatingPoint(e){e.startObject(1)}static addPrecision(e,s){e.addFieldInt16(0,s,ve.HALF)}static endFloatingPoint(e){return e.endObject()}static createFloatingPoint(e,s){return xt.startFloatingPoint(e),xt.addPrecision(e,s),xt.endFloatingPoint(e)}}class Xt{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsInterval(e,s){return(s||new Xt).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsInterval(e,s){return e.setPosition(e.position()+ae),(s||new Xt).__init(e.readInt32(e.position())+e.position(),e)}unit(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):Qt.YEAR_MONTH}static startInterval(e){e.startObject(1)}static addUnit(e,s){e.addFieldInt16(0,s,Qt.YEAR_MONTH)}static endInterval(e){return e.endObject()}static createInterval(e,s){return Xt.startInterval(e),Xt.addUnit(e,s),Xt.endInterval(e)}}let Ta=class kr{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsLargeBinary(e,s){return(s||new kr).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsLargeBinary(e,s){return e.setPosition(e.position()+ae),(s||new kr).__init(e.readInt32(e.position())+e.position(),e)}static startLargeBinary(e){e.startObject(0)}static endLargeBinary(e){return e.endObject()}static createLargeBinary(e){return kr.startLargeBinary(e),kr.endLargeBinary(e)}},oa=class qr{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsLargeUtf8(e,s){return(s||new qr).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsLargeUtf8(e,s){return e.setPosition(e.position()+ae),(s||new qr).__init(e.readInt32(e.position())+e.position(),e)}static startLargeUtf8(e){e.startObject(0)}static endLargeUtf8(e){return e.endObject()}static createLargeUtf8(e){return qr.startLargeUtf8(e),qr.endLargeUtf8(e)}},aa=class Qr{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsList(e,s){return(s||new Qr).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsList(e,s){return e.setPosition(e.position()+ae),(s||new Qr).__init(e.readInt32(e.position())+e.position(),e)}static startList(e){e.startObject(0)}static endList(e){return e.endObject()}static createList(e){return Qr.startList(e),Qr.endList(e)}},$E=class or{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsMap(e,s){return(s||new or).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsMap(e,s){return e.setPosition(e.position()+ae),(s||new or).__init(e.readInt32(e.position())+e.position(),e)}keysSorted(){const e=this.bb.__offset(this.bb_pos,4);return e?!!this.bb.readInt8(this.bb_pos+e):!1}static startMap(e){e.startObject(1)}static addKeysSorted(e,s){e.addFieldInt8(0,+s,0)}static endMap(e){return e.endObject()}static createMap(e,s){return or.startMap(e),or.addKeysSorted(e,s),or.endMap(e)}},Ra=class jr{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsNull(e,s){return(s||new jr).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsNull(e,s){return e.setPosition(e.position()+ae),(s||new jr).__init(e.readInt32(e.position())+e.position(),e)}static startNull(e){e.startObject(0)}static endNull(e){return e.endObject()}static createNull(e){return jr.startNull(e),jr.endNull(e)}};class Ys{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsStruct_(e,s){return(s||new Ys).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsStruct_(e,s){return e.setPosition(e.position()+ae),(s||new Ys).__init(e.readInt32(e.position())+e.position(),e)}static startStruct_(e){e.startObject(0)}static endStruct_(e){return e.endObject()}static createStruct_(e){return Ys.startStruct_(e),Ys.endStruct_(e)}}class ut{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsTime(e,s){return(s||new ut).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsTime(e,s){return e.setPosition(e.position()+ae),(s||new ut).__init(e.readInt32(e.position())+e.position(),e)}unit(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):Y.MILLISECOND}bitWidth(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readInt32(this.bb_pos+e):32}static startTime(e){e.startObject(2)}static addUnit(e,s){e.addFieldInt16(0,s,Y.MILLISECOND)}static addBitWidth(e,s){e.addFieldInt32(1,s,32)}static endTime(e){return e.endObject()}static createTime(e,s,r){return ut.startTime(e),ut.addUnit(e,s),ut.addBitWidth(e,r),ut.endTime(e)}}class _t{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsTimestamp(e,s){return(s||new _t).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsTimestamp(e,s){return e.setPosition(e.position()+ae),(s||new _t).__init(e.readInt32(e.position())+e.position(),e)}unit(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):Y.SECOND}timezone(e){const s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,e):null}static startTimestamp(e){e.startObject(2)}static addUnit(e,s){e.addFieldInt16(0,s,Y.SECOND)}static addTimezone(e,s){e.addFieldOffset(1,s,0)}static endTimestamp(e){return e.endObject()}static createTimestamp(e,s,r){return _t.startTimestamp(e),_t.addUnit(e,s),_t.addTimezone(e,r),_t.endTimestamp(e)}}class tt{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsUnion(e,s){return(s||new tt).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsUnion(e,s){return e.setPosition(e.position()+ae),(s||new tt).__init(e.readInt32(e.position())+e.position(),e)}mode(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):we.Sparse}typeIds(e){const s=this.bb.__offset(this.bb_pos,6);return s?this.bb.readInt32(this.bb.__vector(this.bb_pos+s)+e*4):0}typeIdsLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}typeIdsArray(){const e=this.bb.__offset(this.bb_pos,6);return e?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}static startUnion(e){e.startObject(2)}static addMode(e,s){e.addFieldInt16(0,s,we.Sparse)}static addTypeIds(e,s){e.addFieldOffset(1,s,0)}static createTypeIdsVector(e,s){e.startVector(4,s.length,4);for(let r=s.length-1;r>=0;r--)e.addInt32(s[r]);return e.endVector()}static startTypeIdsVector(e,s){e.startVector(4,s,4)}static endUnion(e){return e.endObject()}static createUnion(e,s,r){return tt.startUnion(e),tt.addMode(e,s),tt.addTypeIds(e,r),tt.endUnion(e)}}let Aa=class Zr{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsUtf8(e,s){return(s||new Zr).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsUtf8(e,s){return e.setPosition(e.position()+ae),(s||new Zr).__init(e.readInt32(e.position())+e.position(),e)}static startUtf8(e){e.startObject(0)}static endUtf8(e){return e.endObject()}static createUtf8(e){return Zr.startUtf8(e),Zr.endUtf8(e)}};var Le;(function(t){t[t.NONE=0]="NONE",t[t.Null=1]="Null",t[t.Int=2]="Int",t[t.FloatingPoint=3]="FloatingPoint",t[t.Binary=4]="Binary",t[t.Utf8=5]="Utf8",t[t.Bool=6]="Bool",t[t.Decimal=7]="Decimal",t[t.Date=8]="Date",t[t.Time=9]="Time",t[t.Timestamp=10]="Timestamp",t[t.Interval=11]="Interval",t[t.List=12]="List",t[t.Struct_=13]="Struct_",t[t.Union=14]="Union",t[t.FixedSizeBinary=15]="FixedSizeBinary",t[t.FixedSizeList=16]="FixedSizeList",t[t.Map=17]="Map",t[t.Duration=18]="Duration",t[t.LargeBinary=19]="LargeBinary",t[t.LargeUtf8=20]="LargeUtf8",t[t.LargeList=21]="LargeList",t[t.RunEndEncoded=22]="RunEndEncoded"})(Le||(Le={}));let lt=class JE{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsField(e,s){return(s||new JE).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsField(e,s){return e.setPosition(e.position()+ae),(s||new JE).__init(e.readInt32(e.position())+e.position(),e)}name(e){const s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,e):null}nullable(){const e=this.bb.__offset(this.bb_pos,6);return e?!!this.bb.readInt8(this.bb_pos+e):!1}typeType(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.readUint8(this.bb_pos+e):Le.NONE}type(e){const s=this.bb.__offset(this.bb_pos,10);return s?this.bb.__union(e,this.bb_pos+s):null}dictionary(e){const s=this.bb.__offset(this.bb_pos,12);return s?(e||new Ts).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}children(e,s){const r=this.bb.__offset(this.bb_pos,14);return r?(s||new JE).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+e*4),this.bb):null}childrenLength(){const e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}customMetadata(e,s){const r=this.bb.__offset(this.bb_pos,16);return r?(s||new Be).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+e*4),this.bb):null}customMetadataLength(){const e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__vector_len(this.bb_pos+e):0}static startField(e){e.startObject(7)}static addName(e,s){e.addFieldOffset(0,s,0)}static addNullable(e,s){e.addFieldInt8(1,+s,0)}static addTypeType(e,s){e.addFieldInt8(2,s,Le.NONE)}static addType(e,s){e.addFieldOffset(3,s,0)}static addDictionary(e,s){e.addFieldOffset(4,s,0)}static addChildren(e,s){e.addFieldOffset(5,s,0)}static createChildrenVector(e,s){e.startVector(4,s.length,4);for(let r=s.length-1;r>=0;r--)e.addOffset(s[r]);return e.endVector()}static startChildrenVector(e,s){e.startVector(4,s,4)}static addCustomMetadata(e,s){e.addFieldOffset(6,s,0)}static createCustomMetadataVector(e,s){e.startVector(4,s.length,4);for(let r=s.length-1;r>=0;r--)e.addOffset(s[r]);return e.endVector()}static startCustomMetadataVector(e,s){e.startVector(4,s,4)}static endField(e){return e.endObject()}},vt=class zt{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsSchema(e,s){return(s||new zt).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsSchema(e,s){return e.setPosition(e.position()+ae),(s||new zt).__init(e.readInt32(e.position())+e.position(),e)}endianness(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):Ur.Little}fields(e,s){const r=this.bb.__offset(this.bb_pos,6);return r?(s||new lt).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+e*4),this.bb):null}fieldsLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}customMetadata(e,s){const r=this.bb.__offset(this.bb_pos,8);return r?(s||new Be).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+e*4),this.bb):null}customMetadataLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}features(e){const s=this.bb.__offset(this.bb_pos,10);return s?this.bb.readInt64(this.bb.__vector(this.bb_pos+s)+e*8):BigInt(0)}featuresLength(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0}static startSchema(e){e.startObject(4)}static addEndianness(e,s){e.addFieldInt16(0,s,Ur.Little)}static addFields(e,s){e.addFieldOffset(1,s,0)}static createFieldsVector(e,s){e.startVector(4,s.length,4);for(let r=s.length-1;r>=0;r--)e.addOffset(s[r]);return e.endVector()}static startFieldsVector(e,s){e.startVector(4,s,4)}static addCustomMetadata(e,s){e.addFieldOffset(2,s,0)}static createCustomMetadataVector(e,s){e.startVector(4,s.length,4);for(let r=s.length-1;r>=0;r--)e.addOffset(s[r]);return e.endVector()}static startCustomMetadataVector(e,s){e.startVector(4,s,4)}static addFeatures(e,s){e.addFieldOffset(3,s,0)}static createFeaturesVector(e,s){e.startVector(8,s.length,8);for(let r=s.length-1;r>=0;r--)e.addInt64(s[r]);return e.endVector()}static startFeaturesVector(e,s){e.startVector(8,s,8)}static endSchema(e){return e.endObject()}static finishSchemaBuffer(e,s){e.finish(s)}static finishSizePrefixedSchemaBuffer(e,s){e.finish(s,void 0,!0)}static createSchema(e,s,r,E,n){return zt.startSchema(e),zt.addEndianness(e,s),zt.addFields(e,r),zt.addCustomMetadata(e,E),zt.addFeatures(e,n),zt.endSchema(e)}};var ne;(function(t){t[t.NONE=0]="NONE",t[t.Schema=1]="Schema",t[t.DictionaryBatch=2]="DictionaryBatch",t[t.RecordBatch=3]="RecordBatch",t[t.Tensor=4]="Tensor",t[t.SparseTensor=5]="SparseTensor"})(ne||(ne={}));var S;(function(t){t[t.NONE=0]="NONE",t[t.Null=1]="Null",t[t.Int=2]="Int",t[t.Float=3]="Float",t[t.Binary=4]="Binary",t[t.Utf8=5]="Utf8",t[t.Bool=6]="Bool",t[t.Decimal=7]="Decimal",t[t.Date=8]="Date",t[t.Time=9]="Time",t[t.Timestamp=10]="Timestamp",t[t.Interval=11]="Interval",t[t.List=12]="List",t[t.Struct=13]="Struct",t[t.Union=14]="Union",t[t.FixedSizeBinary=15]="FixedSizeBinary",t[t.FixedSizeList=16]="FixedSizeList",t[t.Map=17]="Map",t[t.Duration=18]="Duration",t[t.LargeBinary=19]="LargeBinary",t[t.LargeUtf8=20]="LargeUtf8",t[t.Dictionary=-1]="Dictionary",t[t.Int8=-2]="Int8",t[t.Int16=-3]="Int16",t[t.Int32=-4]="Int32",t[t.Int64=-5]="Int64",t[t.Uint8=-6]="Uint8",t[t.Uint16=-7]="Uint16",t[t.Uint32=-8]="Uint32",t[t.Uint64=-9]="Uint64",t[t.Float16=-10]="Float16",t[t.Float32=-11]="Float32",t[t.Float64=-12]="Float64",t[t.DateDay=-13]="DateDay",t[t.DateMillisecond=-14]="DateMillisecond",t[t.TimestampSecond=-15]="TimestampSecond",t[t.TimestampMillisecond=-16]="TimestampMillisecond",t[t.TimestampMicrosecond=-17]="TimestampMicrosecond",t[t.TimestampNanosecond=-18]="TimestampNanosecond",t[t.TimeSecond=-19]="TimeSecond",t[t.TimeMillisecond=-20]="TimeMillisecond",t[t.TimeMicrosecond=-21]="TimeMicrosecond",t[t.TimeNanosecond=-22]="TimeNanosecond",t[t.DenseUnion=-23]="DenseUnion",t[t.SparseUnion=-24]="SparseUnion",t[t.IntervalDayTime=-25]="IntervalDayTime",t[t.IntervalYearMonth=-26]="IntervalYearMonth",t[t.DurationSecond=-27]="DurationSecond",t[t.DurationMillisecond=-28]="DurationMillisecond",t[t.DurationMicrosecond=-29]="DurationMicrosecond",t[t.DurationNanosecond=-30]="DurationNanosecond"})(S||(S={}));var ss;(function(t){t[t.OFFSET=0]="OFFSET",t[t.DATA=1]="DATA",t[t.VALIDITY=2]="VALIDITY",t[t.TYPE=3]="TYPE"})(ss||(ss={}));const DN=void 0;function IE(t){if(t===null)return"null";if(t===DN)return"undefined";switch(typeof t){case"number":return`${t}`;case"bigint":return`${t}`;case"string":return`"${t}"`}return typeof t[Symbol.toPrimitive]=="function"?t[Symbol.toPrimitive]("string"):ArrayBuffer.isView(t)?t instanceof BigInt64Array||t instanceof BigUint64Array?`[${[...t].map(e=>IE(e))}]`:`[${t}]`:ArrayBuffer.isView(t)?`[${t}]`:JSON.stringify(t,(e,s)=>typeof s=="bigint"?`${s}`:s)}function ce(t){if(typeof t=="bigint"&&(t<Number.MIN_SAFE_INTEGER||t>Number.MAX_SAFE_INTEGER))throw new TypeError(`${t} is not safe to convert to a number.`);return Number(t)}function CA(t,e){return ce(t/e)+ce(t%e)/ce(e)}const pN=Symbol.for("isArrowBigNum");function yt(t,...e){return e.length===0?Object.setPrototypeOf(Ie(this.TypedArray,t),this.constructor.prototype):Object.setPrototypeOf(new this.TypedArray(t,...e),this.constructor.prototype)}yt.prototype[pN]=!0;yt.prototype.toJSON=function(){return`"${lE(this)}"`};yt.prototype.valueOf=function(t){return fA(this,t)};yt.prototype.toString=function(){return lE(this)};yt.prototype[Symbol.toPrimitive]=function(t="default"){switch(t){case"number":return fA(this);case"string":return lE(this);case"default":return UN(this)}return lE(this)};function Cr(...t){return yt.apply(this,t)}function fr(...t){return yt.apply(this,t)}function OE(...t){return yt.apply(this,t)}Object.setPrototypeOf(Cr.prototype,Object.create(Int32Array.prototype));Object.setPrototypeOf(fr.prototype,Object.create(Uint32Array.prototype));Object.setPrototypeOf(OE.prototype,Object.create(Uint32Array.prototype));Object.assign(Cr.prototype,yt.prototype,{constructor:Cr,signed:!0,TypedArray:Int32Array,BigIntArray:BigInt64Array});Object.assign(fr.prototype,yt.prototype,{constructor:fr,signed:!1,TypedArray:Uint32Array,BigIntArray:BigUint64Array});Object.assign(OE.prototype,yt.prototype,{constructor:OE,signed:!0,TypedArray:Uint32Array,BigIntArray:BigUint64Array});const PN=BigInt(4294967296)*BigInt(4294967296),MN=PN-BigInt(1);function fA(t,e){const{buffer:s,byteOffset:r,byteLength:E,signed:n}=t,i=new BigUint64Array(s,r,E/8),T=n&&i.at(-1)&BigInt(1)<<BigInt(63);let o=BigInt(0),a=0;if(T){for(const R of i)o|=(R^MN)*(BigInt(1)<<BigInt(64*a++));o*=BigInt(-1),o-=BigInt(1)}else for(const R of i)o|=R*(BigInt(1)<<BigInt(64*a++));if(typeof e=="number"){const R=BigInt(Math.pow(10,e)),A=o/R,l=o%R;return ce(A)+ce(l)/ce(R)}return ce(o)}function lE(t){if(t.byteLength===8)return`${new t.BigIntArray(t.buffer,t.byteOffset,1)[0]}`;if(!t.signed)return Ci(t);let e=new Uint16Array(t.buffer,t.byteOffset,t.byteLength/2);if(new Int16Array([e.at(-1)])[0]>=0)return Ci(t);e=e.slice();let r=1;for(let n=0;n<e.length;n++){const i=e[n],T=~i+r;e[n]=T,r&=i===0?1:0}return`-${Ci(e)}`}function UN(t){return t.byteLength===8?new t.BigIntArray(t.buffer,t.byteOffset,1)[0]:lE(t)}function Ci(t){let e="";const s=new Uint32Array(2);let r=new Uint16Array(t.buffer,t.byteOffset,t.byteLength/2);const E=new Uint32Array((r=new Uint16Array(r).reverse()).buffer);let n=-1;const i=r.length-1;do{for(s[0]=r[n=0];n<i;)r[n++]=s[1]=s[0]/10,s[0]=(s[0]-s[1]*10<<16)+r[n];r[n]=s[1]=s[0]/10,s[0]=s[0]-s[1]*10,e=`${s[0]}${e}`}while(E[0]||E[1]||E[2]||E[3]);return e??"0"}class $T{static new(e,s){switch(s){case!0:return new Cr(e);case!1:return new fr(e)}switch(e.constructor){case Int8Array:case Int16Array:case Int32Array:case BigInt64Array:return new Cr(e)}return e.byteLength===16?new OE(e):new fr(e)}static signed(e){return new Cr(e)}static unsigned(e){return new fr(e)}static decimal(e){return new OE(e)}constructor(e,s){return $T.new(e,s)}}var hA,DA,pA,PA,MA,UA,yA,mA,BA,FA,GA,bA,gA,HA,YA,vA,wA,VA,WA,xA,XA,KA;class y{static isNull(e){return(e==null?void 0:e.typeId)===S.Null}static isInt(e){return(e==null?void 0:e.typeId)===S.Int}static isFloat(e){return(e==null?void 0:e.typeId)===S.Float}static isBinary(e){return(e==null?void 0:e.typeId)===S.Binary}static isLargeBinary(e){return(e==null?void 0:e.typeId)===S.LargeBinary}static isUtf8(e){return(e==null?void 0:e.typeId)===S.Utf8}static isLargeUtf8(e){return(e==null?void 0:e.typeId)===S.LargeUtf8}static isBool(e){return(e==null?void 0:e.typeId)===S.Bool}static isDecimal(e){return(e==null?void 0:e.typeId)===S.Decimal}static isDate(e){return(e==null?void 0:e.typeId)===S.Date}static isTime(e){return(e==null?void 0:e.typeId)===S.Time}static isTimestamp(e){return(e==null?void 0:e.typeId)===S.Timestamp}static isInterval(e){return(e==null?void 0:e.typeId)===S.Interval}static isDuration(e){return(e==null?void 0:e.typeId)===S.Duration}static isList(e){return(e==null?void 0:e.typeId)===S.List}static isStruct(e){return(e==null?void 0:e.typeId)===S.Struct}static isUnion(e){return(e==null?void 0:e.typeId)===S.Union}static isFixedSizeBinary(e){return(e==null?void 0:e.typeId)===S.FixedSizeBinary}static isFixedSizeList(e){return(e==null?void 0:e.typeId)===S.FixedSizeList}static isMap(e){return(e==null?void 0:e.typeId)===S.Map}static isDictionary(e){return(e==null?void 0:e.typeId)===S.Dictionary}static isDenseUnion(e){return y.isUnion(e)&&e.mode===we.Dense}static isSparseUnion(e){return y.isUnion(e)&&e.mode===we.Sparse}constructor(e){this.typeId=e}}hA=Symbol.toStringTag;y[hA]=(t=>(t.children=null,t.ArrayType=Array,t.OffsetArrayType=Int32Array,t[Symbol.toStringTag]="DataType"))(y.prototype);class ds extends y{constructor(){super(S.Null)}toString(){return"Null"}}DA=Symbol.toStringTag;ds[DA]=(t=>t[Symbol.toStringTag]="Null")(ds.prototype);class Xs extends y{constructor(e,s){super(S.Int),this.isSigned=e,this.bitWidth=s}get ArrayType(){switch(this.bitWidth){case 8:return this.isSigned?Int8Array:Uint8Array;case 16:return this.isSigned?Int16Array:Uint16Array;case 32:return this.isSigned?Int32Array:Uint32Array;case 64:return this.isSigned?BigInt64Array:BigUint64Array}throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`)}toString(){return`${this.isSigned?"I":"Ui"}nt${this.bitWidth}`}}pA=Symbol.toStringTag;Xs[pA]=(t=>(t.isSigned=null,t.bitWidth=null,t[Symbol.toStringTag]="Int"))(Xs.prototype);class NE extends Xs{constructor(){super(!0,32)}get ArrayType(){return Int32Array}}Object.defineProperty(NE.prototype,"ArrayType",{value:Int32Array});class In extends y{constructor(e){super(S.Float),this.precision=e}get ArrayType(){switch(this.precision){case ve.HALF:return Uint16Array;case ve.SINGLE:return Float32Array;case ve.DOUBLE:return Float64Array}throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`)}toString(){return`Float${this.precision<<5||16}`}}PA=Symbol.toStringTag;In[PA]=(t=>(t.precision=null,t[Symbol.toStringTag]="Float"))(In.prototype);class On extends y{constructor(){super(S.Binary)}toString(){return"Binary"}}MA=Symbol.toStringTag;On[MA]=(t=>(t.ArrayType=Uint8Array,t[Symbol.toStringTag]="Binary"))(On.prototype);class ln extends y{constructor(){super(S.LargeBinary)}toString(){return"LargeBinary"}}UA=Symbol.toStringTag;ln[UA]=(t=>(t.ArrayType=Uint8Array,t.OffsetArrayType=BigInt64Array,t[Symbol.toStringTag]="LargeBinary"))(ln.prototype);class Nn extends y{constructor(){super(S.Utf8)}toString(){return"Utf8"}}yA=Symbol.toStringTag;Nn[yA]=(t=>(t.ArrayType=Uint8Array,t[Symbol.toStringTag]="Utf8"))(Nn.prototype);class cn extends y{constructor(){super(S.LargeUtf8)}toString(){return"LargeUtf8"}}mA=Symbol.toStringTag;cn[mA]=(t=>(t.ArrayType=Uint8Array,t.OffsetArrayType=BigInt64Array,t[Symbol.toStringTag]="LargeUtf8"))(cn.prototype);class un extends y{constructor(){super(S.Bool)}toString(){return"Bool"}}BA=Symbol.toStringTag;un[BA]=(t=>(t.ArrayType=Uint8Array,t[Symbol.toStringTag]="Bool"))(un.prototype);class _n extends y{constructor(e,s,r=128){super(S.Decimal),this.scale=e,this.precision=s,this.bitWidth=r}toString(){return`Decimal[${this.precision}e${this.scale>0?"+":""}${this.scale}]`}}FA=Symbol.toStringTag;_n[FA]=(t=>(t.scale=null,t.precision=null,t.ArrayType=Uint32Array,t[Symbol.toStringTag]="Decimal"))(_n.prototype);class Ln extends y{constructor(e){super(S.Date),this.unit=e}toString(){return`Date${(this.unit+1)*32}<${ft[this.unit]}>`}get ArrayType(){return this.unit===ft.DAY?Int32Array:BigInt64Array}}GA=Symbol.toStringTag;Ln[GA]=(t=>(t.unit=null,t[Symbol.toStringTag]="Date"))(Ln.prototype);class dn extends y{constructor(e,s){super(S.Time),this.unit=e,this.bitWidth=s}toString(){return`Time${this.bitWidth}<${Y[this.unit]}>`}get ArrayType(){switch(this.bitWidth){case 32:return Int32Array;case 64:return BigInt64Array}throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`)}}bA=Symbol.toStringTag;dn[bA]=(t=>(t.unit=null,t.bitWidth=null,t[Symbol.toStringTag]="Time"))(dn.prototype);class Cn extends y{constructor(e,s){super(S.Timestamp),this.unit=e,this.timezone=s}toString(){return`Timestamp<${Y[this.unit]}${this.timezone?`, ${this.timezone}`:""}>`}}gA=Symbol.toStringTag;Cn[gA]=(t=>(t.unit=null,t.timezone=null,t.ArrayType=BigInt64Array,t[Symbol.toStringTag]="Timestamp"))(Cn.prototype);class fn extends y{constructor(e){super(S.Interval),this.unit=e}toString(){return`Interval<${Qt[this.unit]}>`}}HA=Symbol.toStringTag;fn[HA]=(t=>(t.unit=null,t.ArrayType=Int32Array,t[Symbol.toStringTag]="Interval"))(fn.prototype);class hn extends y{constructor(e){super(S.Duration),this.unit=e}toString(){return`Duration<${Y[this.unit]}>`}}YA=Symbol.toStringTag;hn[YA]=(t=>(t.unit=null,t.ArrayType=BigInt64Array,t[Symbol.toStringTag]="Duration"))(hn.prototype);class Dn extends y{constructor(e){super(S.List),this.children=[e]}toString(){return`List<${this.valueType}>`}get valueType(){return this.children[0].type}get valueField(){return this.children[0]}get ArrayType(){return this.valueType.ArrayType}}vA=Symbol.toStringTag;Dn[vA]=(t=>(t.children=null,t[Symbol.toStringTag]="List"))(Dn.prototype);class Je extends y{constructor(e){super(S.Struct),this.children=e}toString(){return`Struct<{${this.children.map(e=>`${e.name}:${e.type}`).join(", ")}}>`}}wA=Symbol.toStringTag;Je[wA]=(t=>(t.children=null,t[Symbol.toStringTag]="Struct"))(Je.prototype);class pn extends y{constructor(e,s,r){super(S.Union),this.mode=e,this.children=r,this.typeIds=s=Int32Array.from(s),this.typeIdToChildIndex=s.reduce((E,n,i)=>(E[n]=i)&&E||E,Object.create(null))}toString(){return`${this[Symbol.toStringTag]}<${this.children.map(e=>`${e.type}`).join(" | ")}>`}}VA=Symbol.toStringTag;pn[VA]=(t=>(t.mode=null,t.typeIds=null,t.children=null,t.typeIdToChildIndex=null,t.ArrayType=Int8Array,t[Symbol.toStringTag]="Union"))(pn.prototype);class Pn extends y{constructor(e){super(S.FixedSizeBinary),this.byteWidth=e}toString(){return`FixedSizeBinary[${this.byteWidth}]`}}WA=Symbol.toStringTag;Pn[WA]=(t=>(t.byteWidth=null,t.ArrayType=Uint8Array,t[Symbol.toStringTag]="FixedSizeBinary"))(Pn.prototype);class Mn extends y{constructor(e,s){super(S.FixedSizeList),this.listSize=e,this.children=[s]}get valueType(){return this.children[0].type}get valueField(){return this.children[0]}get ArrayType(){return this.valueType.ArrayType}toString(){return`FixedSizeList[${this.listSize}]<${this.valueType}>`}}xA=Symbol.toStringTag;Mn[xA]=(t=>(t.children=null,t.listSize=null,t[Symbol.toStringTag]="FixedSizeList"))(Mn.prototype);class Un extends y{constructor(e,s=!1){var r,E,n;if(super(S.Map),this.children=[e],this.keysSorted=s,e&&(e.name="entries",!((r=e==null?void 0:e.type)===null||r===void 0)&&r.children)){const i=(E=e==null?void 0:e.type)===null||E===void 0?void 0:E.children[0];i&&(i.name="key");const T=(n=e==null?void 0:e.type)===null||n===void 0?void 0:n.children[1];T&&(T.name="value")}}get keyType(){return this.children[0].type.children[0].type}get valueType(){return this.children[0].type.children[1].type}get childType(){return this.children[0].type}toString(){return`Map<{${this.children[0].type.children.map(e=>`${e.name}:${e.type}`).join(", ")}}>`}}XA=Symbol.toStringTag;Un[XA]=(t=>(t.children=null,t.keysSorted=null,t[Symbol.toStringTag]="Map_"))(Un.prototype);const yN=(t=>()=>++t)(-1);class yr extends y{constructor(e,s,r,E){super(S.Dictionary),this.indices=s,this.dictionary=e,this.isOrdered=E||!1,this.id=r==null?yN():ce(r)}get children(){return this.dictionary.children}get valueType(){return this.dictionary}get ArrayType(){return this.dictionary.ArrayType}toString(){return`Dictionary<${this.indices}, ${this.dictionary}>`}}KA=Symbol.toStringTag;yr[KA]=(t=>(t.id=null,t.indices=null,t.isOrdered=null,t.dictionary=null,t[Symbol.toStringTag]="Dictionary"))(yr.prototype);function rs(t){const e=t;switch(t.typeId){case S.Decimal:return t.bitWidth/32;case S.Interval:return 1+e.unit;case S.FixedSizeList:return e.listSize;case S.FixedSizeBinary:return e.byteWidth;default:return 1}}class z{visitMany(e,...s){return e.map((r,E)=>this.visit(r,...s.map(n=>n[E])))}visit(...e){return this.getVisitFn(e[0],!1).apply(this,e)}getVisitFn(e,s=!0){return mN(this,e,s)}getVisitFnByTypeId(e,s=!0){return ar(this,e,s)}visitNull(e,...s){return null}visitBool(e,...s){return null}visitInt(e,...s){return null}visitFloat(e,...s){return null}visitUtf8(e,...s){return null}visitLargeUtf8(e,...s){return null}visitBinary(e,...s){return null}visitLargeBinary(e,...s){return null}visitFixedSizeBinary(e,...s){return null}visitDate(e,...s){return null}visitTimestamp(e,...s){return null}visitTime(e,...s){return null}visitDecimal(e,...s){return null}visitList(e,...s){return null}visitStruct(e,...s){return null}visitUnion(e,...s){return null}visitDictionary(e,...s){return null}visitInterval(e,...s){return null}visitDuration(e,...s){return null}visitFixedSizeList(e,...s){return null}visitMap(e,...s){return null}}function mN(t,e,s=!0){return typeof e=="number"?ar(t,e,s):typeof e=="string"&&e in S?ar(t,S[e],s):e&&e instanceof y?ar(t,Sa(e),s):e!=null&&e.type&&e.type instanceof y?ar(t,Sa(e.type),s):ar(t,S.NONE,s)}function ar(t,e,s=!0){let r=null;switch(e){case S.Null:r=t.visitNull;break;case S.Bool:r=t.visitBool;break;case S.Int:r=t.visitInt;break;case S.Int8:r=t.visitInt8||t.visitInt;break;case S.Int16:r=t.visitInt16||t.visitInt;break;case S.Int32:r=t.visitInt32||t.visitInt;break;case S.Int64:r=t.visitInt64||t.visitInt;break;case S.Uint8:r=t.visitUint8||t.visitInt;break;case S.Uint16:r=t.visitUint16||t.visitInt;break;case S.Uint32:r=t.visitUint32||t.visitInt;break;case S.Uint64:r=t.visitUint64||t.visitInt;break;case S.Float:r=t.visitFloat;break;case S.Float16:r=t.visitFloat16||t.visitFloat;break;case S.Float32:r=t.visitFloat32||t.visitFloat;break;case S.Float64:r=t.visitFloat64||t.visitFloat;break;case S.Utf8:r=t.visitUtf8;break;case S.LargeUtf8:r=t.visitLargeUtf8;break;case S.Binary:r=t.visitBinary;break;case S.LargeBinary:r=t.visitLargeBinary;break;case S.FixedSizeBinary:r=t.visitFixedSizeBinary;break;case S.Date:r=t.visitDate;break;case S.DateDay:r=t.visitDateDay||t.visitDate;break;case S.DateMillisecond:r=t.visitDateMillisecond||t.visitDate;break;case S.Timestamp:r=t.visitTimestamp;break;case S.TimestampSecond:r=t.visitTimestampSecond||t.visitTimestamp;break;case S.TimestampMillisecond:r=t.visitTimestampMillisecond||t.visitTimestamp;break;case S.TimestampMicrosecond:r=t.visitTimestampMicrosecond||t.visitTimestamp;break;case S.TimestampNanosecond:r=t.visitTimestampNanosecond||t.visitTimestamp;break;case S.Time:r=t.visitTime;break;case S.TimeSecond:r=t.visitTimeSecond||t.visitTime;break;case S.TimeMillisecond:r=t.visitTimeMillisecond||t.visitTime;break;case S.TimeMicrosecond:r=t.visitTimeMicrosecond||t.visitTime;break;case S.TimeNanosecond:r=t.visitTimeNanosecond||t.visitTime;break;case S.Decimal:r=t.visitDecimal;break;case S.List:r=t.visitList;break;case S.Struct:r=t.visitStruct;break;case S.Union:r=t.visitUnion;break;case S.DenseUnion:r=t.visitDenseUnion||t.visitUnion;break;case S.SparseUnion:r=t.visitSparseUnion||t.visitUnion;break;case S.Dictionary:r=t.visitDictionary;break;case S.Interval:r=t.visitInterval;break;case S.IntervalDayTime:r=t.visitIntervalDayTime||t.visitInterval;break;case S.IntervalYearMonth:r=t.visitIntervalYearMonth||t.visitInterval;break;case S.Duration:r=t.visitDuration;break;case S.DurationSecond:r=t.visitDurationSecond||t.visitDuration;break;case S.DurationMillisecond:r=t.visitDurationMillisecond||t.visitDuration;break;case S.DurationMicrosecond:r=t.visitDurationMicrosecond||t.visitDuration;break;case S.DurationNanosecond:r=t.visitDurationNanosecond||t.visitDuration;break;case S.FixedSizeList:r=t.visitFixedSizeList;break;case S.Map:r=t.visitMap;break}if(typeof r=="function")return r;if(!s)return()=>null;throw new Error(`Unrecognized type '${S[e]}'`)}function Sa(t){switch(t.typeId){case S.Null:return S.Null;case S.Int:{const{bitWidth:e,isSigned:s}=t;switch(e){case 8:return s?S.Int8:S.Uint8;case 16:return s?S.Int16:S.Uint16;case 32:return s?S.Int32:S.Uint32;case 64:return s?S.Int64:S.Uint64}return S.Int}case S.Float:switch(t.precision){case ve.HALF:return S.Float16;case ve.SINGLE:return S.Float32;case ve.DOUBLE:return S.Float64}return S.Float;case S.Binary:return S.Binary;case S.LargeBinary:return S.LargeBinary;case S.Utf8:return S.Utf8;case S.LargeUtf8:return S.LargeUtf8;case S.Bool:return S.Bool;case S.Decimal:return S.Decimal;case S.Time:switch(t.unit){case Y.SECOND:return S.TimeSecond;case Y.MILLISECOND:return S.TimeMillisecond;case Y.MICROSECOND:return S.TimeMicrosecond;case Y.NANOSECOND:return S.TimeNanosecond}return S.Time;case S.Timestamp:switch(t.unit){case Y.SECOND:return S.TimestampSecond;case Y.MILLISECOND:return S.TimestampMillisecond;case Y.MICROSECOND:return S.TimestampMicrosecond;case Y.NANOSECOND:return S.TimestampNanosecond}return S.Timestamp;case S.Date:switch(t.unit){case ft.DAY:return S.DateDay;case ft.MILLISECOND:return S.DateMillisecond}return S.Date;case S.Interval:switch(t.unit){case Qt.DAY_TIME:return S.IntervalDayTime;case Qt.YEAR_MONTH:return S.IntervalYearMonth}return S.Interval;case S.Duration:switch(t.unit){case Y.SECOND:return S.DurationSecond;case Y.MILLISECOND:return S.DurationMillisecond;case Y.MICROSECOND:return S.DurationMicrosecond;case Y.NANOSECOND:return S.DurationNanosecond}return S.Duration;case S.Map:return S.Map;case S.List:return S.List;case S.Struct:return S.Struct;case S.Union:switch(t.mode){case we.Dense:return S.DenseUnion;case we.Sparse:return S.SparseUnion}return S.Union;case S.FixedSizeBinary:return S.FixedSizeBinary;case S.FixedSizeList:return S.FixedSizeList;case S.Dictionary:return S.Dictionary}throw new Error(`Unrecognized type '${S[t.typeId]}'`)}z.prototype.visitInt8=null;z.prototype.visitInt16=null;z.prototype.visitInt32=null;z.prototype.visitInt64=null;z.prototype.visitUint8=null;z.prototype.visitUint16=null;z.prototype.visitUint32=null;z.prototype.visitUint64=null;z.prototype.visitFloat16=null;z.prototype.visitFloat32=null;z.prototype.visitFloat64=null;z.prototype.visitDateDay=null;z.prototype.visitDateMillisecond=null;z.prototype.visitTimestampSecond=null;z.prototype.visitTimestampMillisecond=null;z.prototype.visitTimestampMicrosecond=null;z.prototype.visitTimestampNanosecond=null;z.prototype.visitTimeSecond=null;z.prototype.visitTimeMillisecond=null;z.prototype.visitTimeMicrosecond=null;z.prototype.visitTimeNanosecond=null;z.prototype.visitDenseUnion=null;z.prototype.visitSparseUnion=null;z.prototype.visitIntervalDayTime=null;z.prototype.visitIntervalYearMonth=null;z.prototype.visitDuration=null;z.prototype.visitDurationSecond=null;z.prototype.visitDurationMillisecond=null;z.prototype.visitDurationMicrosecond=null;z.prototype.visitDurationNanosecond=null;const $A=new Float64Array(1),Qs=new Uint32Array($A.buffer);function JA(t){const e=(t&31744)>>10,s=(t&1023)/1024,r=Math.pow(-1,(t&32768)>>15);switch(e){case 31:return r*(s?Number.NaN:1/0);case 0:return r*(s?6103515625e-14*s:0)}return r*Math.pow(2,e-15)*(1+s)}function BN(t){if(t!==t)return 32256;$A[0]=t;const e=(Qs[1]&2147483648)>>16&65535;let s=Qs[1]&2146435072,r=0;return s>=1089470464?Qs[0]>0?s=31744:(s=(s&2080374784)>>16,r=(Qs[1]&1048575)>>10):s<=1056964608?(r=1048576+(Qs[1]&1048575),r=1048576+(r<<(s>>20)-998)>>21,s=0):(s=s-1056964608>>10,r=(Qs[1]&1048575)+512>>10),e|s|r&65535}class v extends z{}function X(t){return(e,s,r)=>{if(e.setValid(s,r!=null))return t(e,s,r)}}const FN=(t,e,s)=>{t[e]=Math.floor(s/864e5)},kA=(t,e,s,r)=>{if(s+1<e.length){const E=ce(e[s]),n=ce(e[s+1]);t.set(r.subarray(0,n-E),E)}},GN=({offset:t,values:e},s,r)=>{const E=t+s;r?e[E>>3]|=1<<E%8:e[E>>3]&=~(1<<E%8)},Rs=({values:t},e,s)=>{t[e]=s},JT=({values:t},e,s)=>{t[e]=s},qA=({values:t},e,s)=>{t[e]=BN(s)},bN=(t,e,s)=>{switch(t.type.precision){case ve.HALF:return qA(t,e,s);case ve.SINGLE:case ve.DOUBLE:return JT(t,e,s)}},QA=({values:t},e,s)=>{FN(t,e,s.valueOf())},jA=({values:t},e,s)=>{t[e]=BigInt(s)},gN=({stride:t,values:e},s,r)=>{e.set(r.subarray(0,t),t*s)},ZA=({values:t,valueOffsets:e},s,r)=>kA(t,e,s,r),zA=({values:t,valueOffsets:e},s,r)=>kA(t,e,s,xT(r)),HN=(t,e,s)=>{t.type.unit===ft.DAY?QA(t,e,s):jA(t,e,s)},eS=({values:t},e,s)=>{t[e]=BigInt(s/1e3)},tS=({values:t},e,s)=>{t[e]=BigInt(s)},sS=({values:t},e,s)=>{t[e]=BigInt(s*1e3)},rS=({values:t},e,s)=>{t[e]=BigInt(s*1e6)},YN=(t,e,s)=>{switch(t.type.unit){case Y.SECOND:return eS(t,e,s);case Y.MILLISECOND:return tS(t,e,s);case Y.MICROSECOND:return sS(t,e,s);case Y.NANOSECOND:return rS(t,e,s)}},ES=({values:t},e,s)=>{t[e]=s},nS=({values:t},e,s)=>{t[e]=s},iS=({values:t},e,s)=>{t[e]=s},TS=({values:t},e,s)=>{t[e]=s},vN=(t,e,s)=>{switch(t.type.unit){case Y.SECOND:return ES(t,e,s);case Y.MILLISECOND:return nS(t,e,s);case Y.MICROSECOND:return iS(t,e,s);case Y.NANOSECOND:return TS(t,e,s)}},wN=({values:t,stride:e},s,r)=>{t.set(r.subarray(0,e),e*s)},VN=(t,e,s)=>{const r=t.children[0],E=t.valueOffsets,n=ht.getVisitFn(r);if(Array.isArray(s))for(let i=-1,T=E[e],o=E[e+1];T<o;)n(r,T++,s[++i]);else for(let i=-1,T=E[e],o=E[e+1];T<o;)n(r,T++,s.get(++i))},WN=(t,e,s)=>{const r=t.children[0],{valueOffsets:E}=t,n=ht.getVisitFn(r);let{[e]:i,[e+1]:T}=E;const o=s instanceof Map?s.entries():Object.entries(s);for(const a of o)if(n(r,i,a),++i>=T)break},xN=(t,e)=>(s,r,E,n)=>r&&s(r,t,e[n]),XN=(t,e)=>(s,r,E,n)=>r&&s(r,t,e.get(n)),KN=(t,e)=>(s,r,E,n)=>r&&s(r,t,e.get(E.name)),$N=(t,e)=>(s,r,E,n)=>r&&s(r,t,e[E.name]),JN=(t,e,s)=>{const r=t.type.children.map(n=>ht.getVisitFn(n.type)),E=s instanceof Map?KN(e,s):s instanceof Te?XN(e,s):Array.isArray(s)?xN(e,s):$N(e,s);t.type.children.forEach((n,i)=>E(r[i],t.children[i],n,i))},kN=(t,e,s)=>{t.type.mode===we.Dense?oS(t,e,s):aS(t,e,s)},oS=(t,e,s)=>{const r=t.type.typeIdToChildIndex[t.typeIds[e]],E=t.children[r];ht.visit(E,t.valueOffsets[e],s)},aS=(t,e,s)=>{const r=t.type.typeIdToChildIndex[t.typeIds[e]],E=t.children[r];ht.visit(E,e,s)},qN=(t,e,s)=>{var r;(r=t.dictionary)===null||r===void 0||r.set(t.values[e],s)},QN=(t,e,s)=>{t.type.unit===Qt.DAY_TIME?RS(t,e,s):AS(t,e,s)},RS=({values:t},e,s)=>{t.set(s.subarray(0,2),2*e)},AS=({values:t},e,s)=>{t[e]=s[0]*12+s[1]%12},SS=({values:t},e,s)=>{t[e]=s},IS=({values:t},e,s)=>{t[e]=s},OS=({values:t},e,s)=>{t[e]=s},lS=({values:t},e,s)=>{t[e]=s},jN=(t,e,s)=>{switch(t.type.unit){case Y.SECOND:return SS(t,e,s);case Y.MILLISECOND:return IS(t,e,s);case Y.MICROSECOND:return OS(t,e,s);case Y.NANOSECOND:return lS(t,e,s)}},ZN=(t,e,s)=>{const{stride:r}=t,E=t.children[0],n=ht.getVisitFn(E);if(Array.isArray(s))for(let i=-1,T=e*r;++i<r;)n(E,T+i,s[i]);else for(let i=-1,T=e*r;++i<r;)n(E,T+i,s.get(i))};v.prototype.visitBool=X(GN);v.prototype.visitInt=X(Rs);v.prototype.visitInt8=X(Rs);v.prototype.visitInt16=X(Rs);v.prototype.visitInt32=X(Rs);v.prototype.visitInt64=X(Rs);v.prototype.visitUint8=X(Rs);v.prototype.visitUint16=X(Rs);v.prototype.visitUint32=X(Rs);v.prototype.visitUint64=X(Rs);v.prototype.visitFloat=X(bN);v.prototype.visitFloat16=X(qA);v.prototype.visitFloat32=X(JT);v.prototype.visitFloat64=X(JT);v.prototype.visitUtf8=X(zA);v.prototype.visitLargeUtf8=X(zA);v.prototype.visitBinary=X(ZA);v.prototype.visitLargeBinary=X(ZA);v.prototype.visitFixedSizeBinary=X(gN);v.prototype.visitDate=X(HN);v.prototype.visitDateDay=X(QA);v.prototype.visitDateMillisecond=X(jA);v.prototype.visitTimestamp=X(YN);v.prototype.visitTimestampSecond=X(eS);v.prototype.visitTimestampMillisecond=X(tS);v.prototype.visitTimestampMicrosecond=X(sS);v.prototype.visitTimestampNanosecond=X(rS);v.prototype.visitTime=X(vN);v.prototype.visitTimeSecond=X(ES);v.prototype.visitTimeMillisecond=X(nS);v.prototype.visitTimeMicrosecond=X(iS);v.prototype.visitTimeNanosecond=X(TS);v.prototype.visitDecimal=X(wN);v.prototype.visitList=X(VN);v.prototype.visitStruct=X(JN);v.prototype.visitUnion=X(kN);v.prototype.visitDenseUnion=X(oS);v.prototype.visitSparseUnion=X(aS);v.prototype.visitDictionary=X(qN);v.prototype.visitInterval=X(QN);v.prototype.visitIntervalDayTime=X(RS);v.prototype.visitIntervalYearMonth=X(AS);v.prototype.visitDuration=X(jN);v.prototype.visitDurationSecond=X(SS);v.prototype.visitDurationMillisecond=X(IS);v.prototype.visitDurationMicrosecond=X(OS);v.prototype.visitDurationNanosecond=X(lS);v.prototype.visitFixedSizeList=X(ZN);v.prototype.visitMap=X(WN);const ht=new v,Dt=Symbol.for("parent"),hr=Symbol.for("rowIndex");class kT{constructor(e,s){return this[Dt]=e,this[hr]=s,new Proxy(this,new ec)}toArray(){return Object.values(this.toJSON())}toJSON(){const e=this[hr],s=this[Dt],r=s.type.children,E={};for(let n=-1,i=r.length;++n<i;)E[r[n].name]=Et.visit(s.children[n],e);return E}toString(){return`{${[...this].map(([e,s])=>`${IE(e)}: ${IE(s)}`).join(", ")}}`}[Symbol.for("nodejs.util.inspect.custom")](){return this.toString()}[Symbol.iterator](){return new zN(this[Dt],this[hr])}}class zN{constructor(e,s){this.childIndex=0,this.children=e.children,this.rowIndex=s,this.childFields=e.type.children,this.numChildren=this.childFields.length}[Symbol.iterator](){return this}next(){const e=this.childIndex;return e<this.numChildren?(this.childIndex=e+1,{done:!1,value:[this.childFields[e].name,Et.visit(this.children[e],this.rowIndex)]}):{done:!0,value:null}}}Object.defineProperties(kT.prototype,{[Symbol.toStringTag]:{enumerable:!1,configurable:!1,value:"Row"},[Dt]:{writable:!0,enumerable:!1,configurable:!1,value:null},[hr]:{writable:!0,enumerable:!1,configurable:!1,value:-1}});class ec{isExtensible(){return!1}deleteProperty(){return!1}preventExtensions(){return!0}ownKeys(e){return e[Dt].type.children.map(s=>s.name)}has(e,s){return e[Dt].type.children.findIndex(r=>r.name===s)!==-1}getOwnPropertyDescriptor(e,s){if(e[Dt].type.children.findIndex(r=>r.name===s)!==-1)return{writable:!0,enumerable:!0,configurable:!0}}get(e,s){if(Reflect.has(e,s))return e[s];const r=e[Dt].type.children.findIndex(E=>E.name===s);if(r!==-1){const E=Et.visit(e[Dt].children[r],e[hr]);return Reflect.set(e,s,E),E}}set(e,s,r){const E=e[Dt].type.children.findIndex(n=>n.name===s);return E!==-1?(ht.visit(e[Dt].children[E],e[hr],r),Reflect.set(e,s,r)):Reflect.has(e,s)||typeof s=="symbol"?Reflect.set(e,s,r):!1}}class G extends z{}function w(t){return(e,s)=>e.getValid(s)?t(e,s):null}const tc=(t,e)=>864e5*t[e],sc=(t,e)=>null,NS=(t,e,s)=>{if(s+1>=e.length)return null;const r=ce(e[s]),E=ce(e[s+1]);return t.subarray(r,E)},rc=({offset:t,values:e},s)=>{const r=t+s;return(e[r>>3]&1<<r%8)!==0},cS=({values:t},e)=>tc(t,e),uS=({values:t},e)=>ce(t[e]),Us=({stride:t,values:e},s)=>e[t*s],Ec=({stride:t,values:e},s)=>JA(e[t*s]),_S=({values:t},e)=>t[e],nc=({stride:t,values:e},s)=>e.subarray(t*s,t*(s+1)),LS=({values:t,valueOffsets:e},s)=>NS(t,e,s),dS=({values:t,valueOffsets:e},s)=>{const r=NS(t,e,s);return r!==null?RT(r):null},ic=({values:t},e)=>t[e],Tc=({type:t,values:e},s)=>t.precision!==ve.HALF?e[s]:JA(e[s]),oc=(t,e)=>t.type.unit===ft.DAY?cS(t,e):uS(t,e),CS=({values:t},e)=>1e3*ce(t[e]),fS=({values:t},e)=>ce(t[e]),hS=({values:t},e)=>CA(t[e],BigInt(1e3)),DS=({values:t},e)=>CA(t[e],BigInt(1e6)),ac=(t,e)=>{switch(t.type.unit){case Y.SECOND:return CS(t,e);case Y.MILLISECOND:return fS(t,e);case Y.MICROSECOND:return hS(t,e);case Y.NANOSECOND:return DS(t,e)}},pS=({values:t},e)=>t[e],PS=({values:t},e)=>t[e],MS=({values:t},e)=>t[e],US=({values:t},e)=>t[e],Rc=(t,e)=>{switch(t.type.unit){case Y.SECOND:return pS(t,e);case Y.MILLISECOND:return PS(t,e);case Y.MICROSECOND:return MS(t,e);case Y.NANOSECOND:return US(t,e)}},Ac=({values:t,stride:e},s)=>$T.decimal(t.subarray(e*s,e*(s+1))),Sc=(t,e)=>{const{valueOffsets:s,stride:r,children:E}=t,{[e*r]:n,[e*r+1]:i}=s,o=E[0].slice(n,i-n);return new Te([o])},Ic=(t,e)=>{const{valueOffsets:s,children:r}=t,{[e]:E,[e+1]:n}=s,i=r[0];return new qT(i.slice(E,n-E))},Oc=(t,e)=>new kT(t,e),lc=(t,e)=>t.type.mode===we.Dense?yS(t,e):mS(t,e),yS=(t,e)=>{const s=t.type.typeIdToChildIndex[t.typeIds[e]],r=t.children[s];return Et.visit(r,t.valueOffsets[e])},mS=(t,e)=>{const s=t.type.typeIdToChildIndex[t.typeIds[e]],r=t.children[s];return Et.visit(r,e)},Nc=(t,e)=>{var s;return(s=t.dictionary)===null||s===void 0?void 0:s.get(t.values[e])},cc=(t,e)=>t.type.unit===Qt.DAY_TIME?BS(t,e):FS(t,e),BS=({values:t},e)=>t.subarray(2*e,2*(e+1)),FS=({values:t},e)=>{const s=t[e],r=new Int32Array(2);return r[0]=Math.trunc(s/12),r[1]=Math.trunc(s%12),r},GS=({values:t},e)=>t[e],bS=({values:t},e)=>t[e],gS=({values:t},e)=>t[e],HS=({values:t},e)=>t[e],uc=(t,e)=>{switch(t.type.unit){case Y.SECOND:return GS(t,e);case Y.MILLISECOND:return bS(t,e);case Y.MICROSECOND:return gS(t,e);case Y.NANOSECOND:return HS(t,e)}},_c=(t,e)=>{const{stride:s,children:r}=t,n=r[0].slice(e*s,s);return new Te([n])};G.prototype.visitNull=w(sc);G.prototype.visitBool=w(rc);G.prototype.visitInt=w(ic);G.prototype.visitInt8=w(Us);G.prototype.visitInt16=w(Us);G.prototype.visitInt32=w(Us);G.prototype.visitInt64=w(_S);G.prototype.visitUint8=w(Us);G.prototype.visitUint16=w(Us);G.prototype.visitUint32=w(Us);G.prototype.visitUint64=w(_S);G.prototype.visitFloat=w(Tc);G.prototype.visitFloat16=w(Ec);G.prototype.visitFloat32=w(Us);G.prototype.visitFloat64=w(Us);G.prototype.visitUtf8=w(dS);G.prototype.visitLargeUtf8=w(dS);G.prototype.visitBinary=w(LS);G.prototype.visitLargeBinary=w(LS);G.prototype.visitFixedSizeBinary=w(nc);G.prototype.visitDate=w(oc);G.prototype.visitDateDay=w(cS);G.prototype.visitDateMillisecond=w(uS);G.prototype.visitTimestamp=w(ac);G.prototype.visitTimestampSecond=w(CS);G.prototype.visitTimestampMillisecond=w(fS);G.prototype.visitTimestampMicrosecond=w(hS);G.prototype.visitTimestampNanosecond=w(DS);G.prototype.visitTime=w(Rc);G.prototype.visitTimeSecond=w(pS);G.prototype.visitTimeMillisecond=w(PS);G.prototype.visitTimeMicrosecond=w(MS);G.prototype.visitTimeNanosecond=w(US);G.prototype.visitDecimal=w(Ac);G.prototype.visitList=w(Sc);G.prototype.visitStruct=w(Oc);G.prototype.visitUnion=w(lc);G.prototype.visitDenseUnion=w(yS);G.prototype.visitSparseUnion=w(mS);G.prototype.visitDictionary=w(Nc);G.prototype.visitInterval=w(cc);G.prototype.visitIntervalDayTime=w(BS);G.prototype.visitIntervalYearMonth=w(FS);G.prototype.visitDuration=w(uc);G.prototype.visitDurationSecond=w(GS);G.prototype.visitDurationMillisecond=w(bS);G.prototype.visitDurationMicrosecond=w(gS);G.prototype.visitDurationNanosecond=w(HS);G.prototype.visitFixedSizeList=w(_c);G.prototype.visitMap=w(Ic);const Et=new G,Rr=Symbol.for("keys"),Dr=Symbol.for("vals"),Ar=Symbol.for("kKeysAsStrings"),NT=Symbol.for("_kKeysAsStrings");class qT{constructor(e){return this[Rr]=new Te([e.children[0]]).memoize(),this[Dr]=e.children[1],new Proxy(this,new dc)}get[Ar](){return this[NT]||(this[NT]=Array.from(this[Rr].toArray(),String))}[Symbol.iterator](){return new Lc(this[Rr],this[Dr])}get size(){return this[Rr].length}toArray(){return Object.values(this.toJSON())}toJSON(){const e=this[Rr],s=this[Dr],r={};for(let E=-1,n=e.length;++E<n;)r[e.get(E)]=Et.visit(s,E);return r}toString(){return`{${[...this].map(([e,s])=>`${IE(e)}: ${IE(s)}`).join(", ")}}`}[Symbol.for("nodejs.util.inspect.custom")](){return this.toString()}}class Lc{constructor(e,s){this.keys=e,this.vals=s,this.keyIndex=0,this.numKeys=e.length}[Symbol.iterator](){return this}next(){const e=this.keyIndex;return e===this.numKeys?{done:!0,value:null}:(this.keyIndex++,{done:!1,value:[this.keys.get(e),Et.visit(this.vals,e)]})}}class dc{isExtensible(){return!1}deleteProperty(){return!1}preventExtensions(){return!0}ownKeys(e){return e[Ar]}has(e,s){return e[Ar].includes(s)}getOwnPropertyDescriptor(e,s){if(e[Ar].indexOf(s)!==-1)return{writable:!0,enumerable:!0,configurable:!0}}get(e,s){if(Reflect.has(e,s))return e[s];const r=e[Ar].indexOf(s);if(r!==-1){const E=Et.visit(Reflect.get(e,Dr),r);return Reflect.set(e,s,E),E}}set(e,s,r){const E=e[Ar].indexOf(s);return E!==-1?(ht.visit(Reflect.get(e,Dr),E,r),Reflect.set(e,s,r)):Reflect.has(e,s)?Reflect.set(e,s,r):!1}}Object.defineProperties(qT.prototype,{[Symbol.toStringTag]:{enumerable:!1,configurable:!1,value:"Row"},[Rr]:{writable:!0,enumerable:!1,configurable:!1,value:null},[Dr]:{writable:!0,enumerable:!1,configurable:!1,value:null},[NT]:{writable:!0,enumerable:!1,configurable:!1,value:null}});let Ia;function YS(t,e,s,r){const{length:E=0}=t;let n=typeof e!="number"?0:e,i=typeof s!="number"?E:s;return n<0&&(n=(n%E+E)%E),i<0&&(i=(i%E+E)%E),i<n&&(Ia=n,n=i,i=Ia),i>E&&(i=E),r?r(t,n,i):[n,i]}const QT=(t,e)=>t<0?e+t:t,Oa=t=>t!==t;function br(t){if(typeof t!=="object"||t===null)return Oa(t)?Oa:s=>s===t;if(t instanceof Date){const s=t.valueOf();return r=>r instanceof Date?r.valueOf()===s:!1}return ArrayBuffer.isView(t)?s=>s?_N(t,s):!1:t instanceof Map?fc(t):Array.isArray(t)?Cc(t):t instanceof Te?hc(t):Dc(t,!0)}function Cc(t){const e=[];for(let s=-1,r=t.length;++s<r;)e[s]=br(t[s]);return ti(e)}function fc(t){let e=-1;const s=[];for(const r of t.values())s[++e]=br(r);return ti(s)}function hc(t){const e=[];for(let s=-1,r=t.length;++s<r;)e[s]=br(t.get(s));return ti(e)}function Dc(t,e=!1){const s=Object.keys(t);if(!e&&s.length===0)return()=>!1;const r=[];for(let E=-1,n=s.length;++E<n;)r[E]=br(t[s[E]]);return ti(r,s)}function ti(t,e){return s=>{if(!s||typeof s!="object")return!1;switch(s.constructor){case Array:return pc(t,s);case Map:return la(t,s,s.keys());case qT:case kT:case Object:case void 0:return la(t,s,e||Object.keys(s))}return s instanceof Te?Pc(t,s):!1}}function pc(t,e){const s=t.length;if(e.length!==s)return!1;for(let r=-1;++r<s;)if(!t[r](e[r]))return!1;return!0}function Pc(t,e){const s=t.length;if(e.length!==s)return!1;for(let r=-1;++r<s;)if(!t[r](e.get(r)))return!1;return!0}function la(t,e,s){const r=s[Symbol.iterator](),E=e instanceof Map?e.keys():Object.keys(e)[Symbol.iterator](),n=e instanceof Map?e.values():Object.values(e)[Symbol.iterator]();let i=0;const T=t.length;let o=n.next(),a=r.next(),R=E.next();for(;i<T&&!a.done&&!R.done&&!o.done&&!(a.value!==R.value||!t[i](o.value));++i,a=r.next(),R=E.next(),o=n.next());return i===T&&a.done&&R.done&&o.done?!0:(r.return&&r.return(),E.return&&E.return(),n.return&&n.return(),!1)}function vS(t,e,s,r){return(s&1<<r)!==0}function Mc(t,e,s,r){return(s&1<<r)>>r}function yn(t,e,s){const r=s.byteLength+7&-8;if(t>0||s.byteLength<r){const E=new Uint8Array(r);return E.set(t%8===0?s.subarray(t>>3):mn(new jT(s,t,e,null,vS)).subarray(0,r)),E}return s}function mn(t){const e=[];let s=0,r=0,E=0;for(const i of t)i&&(E|=1<<r),++r===8&&(e[s++]=E,E=r=0);(s===0||r>0)&&(e[s++]=E);const n=new Uint8Array(e.length+7&-8);return n.set(e),n}class jT{constructor(e,s,r,E,n){this.bytes=e,this.length=r,this.context=E,this.get=n,this.bit=s%8,this.byteIndex=s>>3,this.byte=e[this.byteIndex++],this.index=0}next(){return this.index<this.length?(this.bit===8&&(this.bit=0,this.byte=this.bytes[this.byteIndex++]),{value:this.get(this.context,this.index++,this.byte,this.bit++)}):{done:!0,value:null}}[Symbol.iterator](){return this}}function cT(t,e,s){if(s-e<=0)return 0;if(s-e<8){let n=0;for(const i of new jT(t,e,s-e,t,Mc))n+=i;return n}const r=s>>3<<3,E=e+(e%8===0?0:8-e%8);return cT(t,e,E)+cT(t,r,s)+Uc(t,E>>3,r-E>>3)}function Uc(t,e,s){let r=0,E=Math.trunc(e);const n=new DataView(t.buffer,t.byteOffset,t.byteLength),i=s===void 0?t.byteLength:E+s;for(;i-E>=4;)r+=fi(n.getUint32(E)),E+=4;for(;i-E>=2;)r+=fi(n.getUint16(E)),E+=2;for(;i-E>=1;)r+=fi(n.getUint8(E)),E+=1;return r}function fi(t){let e=Math.trunc(t);return e=e-(e>>>1&1431655765),e=(e&858993459)+(e>>>2&858993459),(e+(e>>>4)&252645135)*16843009>>>24}const yc=-1;class Ae{get typeId(){return this.type.typeId}get ArrayType(){return this.type.ArrayType}get buffers(){return[this.valueOffsets,this.values,this.nullBitmap,this.typeIds]}get nullable(){if(this._nullCount!==0){const{type:e}=this;return y.isSparseUnion(e)?this.children.some(s=>s.nullable):y.isDenseUnion(e)?this.children.some(s=>s.nullable):this.nullBitmap&&this.nullBitmap.byteLength>0}return!0}get byteLength(){let e=0;const{valueOffsets:s,values:r,nullBitmap:E,typeIds:n}=this;return s&&(e+=s.byteLength),r&&(e+=r.byteLength),E&&(e+=E.byteLength),n&&(e+=n.byteLength),this.children.reduce((i,T)=>i+T.byteLength,e)}get nullCount(){if(y.isUnion(this.type))return this.children.reduce((r,E)=>r+E.nullCount,0);let e=this._nullCount,s;return e<=yc&&(s=this.nullBitmap)&&(this._nullCount=e=s.length===0?0:this.length-cT(s,this.offset,this.offset+this.length)),e}constructor(e,s,r,E,n,i=[],T){this.type=e,this.children=i,this.dictionary=T,this.offset=Math.floor(Math.max(s||0,0)),this.length=Math.floor(Math.max(r||0,0)),this._nullCount=Math.floor(Math.max(E||0,-1));let o;n instanceof Ae?(this.stride=n.stride,this.values=n.values,this.typeIds=n.typeIds,this.nullBitmap=n.nullBitmap,this.valueOffsets=n.valueOffsets):(this.stride=rs(e),n&&((o=n[0])&&(this.valueOffsets=o),(o=n[1])&&(this.values=o),(o=n[2])&&(this.nullBitmap=o),(o=n[3])&&(this.typeIds=o)))}getValid(e){const{type:s}=this;if(y.isUnion(s)){const r=s,E=this.children[r.typeIdToChildIndex[this.typeIds[e]]],n=r.mode===we.Dense?this.valueOffsets[e]:e;return E.getValid(n)}if(this.nullable&&this.nullCount>0){const r=this.offset+e;return(this.nullBitmap[r>>3]&1<<r%8)!==0}return!0}setValid(e,s){let r;const{type:E}=this;if(y.isUnion(E)){const n=E,i=this.children[n.typeIdToChildIndex[this.typeIds[e]]],T=n.mode===we.Dense?this.valueOffsets[e]:e;r=i.getValid(T),i.setValid(T,s)}else{let{nullBitmap:n}=this;const{offset:i,length:T}=this,o=i+e,a=1<<o%8,R=o>>3;(!n||n.byteLength<=R)&&(n=new Uint8Array((i+T+63&-64)>>3).fill(255),this.nullCount>0?(n.set(yn(i,T,this.nullBitmap),0),Object.assign(this,{nullBitmap:n})):Object.assign(this,{nullBitmap:n,_nullCount:0}));const A=n[R];r=(A&a)!==0,n[R]=s?A|a:A&~a}return r!==!!s&&(this._nullCount=this.nullCount+(s?-1:1)),s}clone(e=this.type,s=this.offset,r=this.length,E=this._nullCount,n=this,i=this.children){return new Ae(e,s,r,E,n,i,this.dictionary)}slice(e,s){const{stride:r,typeId:E,children:n}=this,i=+(this._nullCount===0)-1,T=E===16?r:1,o=this._sliceBuffers(e,s,r,E);return this.clone(this.type,this.offset+e,s,i,o,n.length===0||this.valueOffsets?n:this._sliceChildren(n,T*e,T*s))}_changeLengthAndBackfillNullBitmap(e){if(this.typeId===S.Null)return this.clone(this.type,0,e,0);const{length:s,nullCount:r}=this,E=new Uint8Array((e+63&-64)>>3).fill(255,0,s>>3);E[s>>3]=(1<<s-(s&-8))-1,r>0&&E.set(yn(this.offset,s,this.nullBitmap),0);const n=this.buffers;return n[ss.VALIDITY]=E,this.clone(this.type,0,e,r+(e-s),n)}_sliceBuffers(e,s,r,E){let n;const{buffers:i}=this;return(n=i[ss.TYPE])&&(i[ss.TYPE]=n.subarray(e,e+s)),(n=i[ss.OFFSET])&&(i[ss.OFFSET]=n.subarray(e,e+s+1))||(n=i[ss.DATA])&&(i[ss.DATA]=E===6?n:n.subarray(r*e,r*(e+s))),i}_sliceChildren(e,s,r){return e.map(E=>E.slice(s,r))}}Ae.prototype.children=Object.freeze([]);class iE extends z{visit(e){return this.getVisitFn(e.type).call(this,e)}visitNull(e){const{["type"]:s,["offset"]:r=0,["length"]:E=0}=e;return new Ae(s,r,E,E)}visitBool(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.nullBitmap),n=Ie(s.ArrayType,e.data),{["length"]:i=n.length>>3,["nullCount"]:T=e.nullBitmap?-1:0}=e;return new Ae(s,r,i,T,[void 0,n,E])}visitInt(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.nullBitmap),n=Ie(s.ArrayType,e.data),{["length"]:i=n.length,["nullCount"]:T=e.nullBitmap?-1:0}=e;return new Ae(s,r,i,T,[void 0,n,E])}visitFloat(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.nullBitmap),n=Ie(s.ArrayType,e.data),{["length"]:i=n.length,["nullCount"]:T=e.nullBitmap?-1:0}=e;return new Ae(s,r,i,T,[void 0,n,E])}visitUtf8(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.data),n=te(e.nullBitmap),i=xr(e.valueOffsets),{["length"]:T=i.length-1,["nullCount"]:o=e.nullBitmap?-1:0}=e;return new Ae(s,r,T,o,[i,E,n])}visitLargeUtf8(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.data),n=te(e.nullBitmap),i=sa(e.valueOffsets),{["length"]:T=i.length-1,["nullCount"]:o=e.nullBitmap?-1:0}=e;return new Ae(s,r,T,o,[i,E,n])}visitBinary(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.data),n=te(e.nullBitmap),i=xr(e.valueOffsets),{["length"]:T=i.length-1,["nullCount"]:o=e.nullBitmap?-1:0}=e;return new Ae(s,r,T,o,[i,E,n])}visitLargeBinary(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.data),n=te(e.nullBitmap),i=sa(e.valueOffsets),{["length"]:T=i.length-1,["nullCount"]:o=e.nullBitmap?-1:0}=e;return new Ae(s,r,T,o,[i,E,n])}visitFixedSizeBinary(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.nullBitmap),n=Ie(s.ArrayType,e.data),{["length"]:i=n.length/rs(s),["nullCount"]:T=e.nullBitmap?-1:0}=e;return new Ae(s,r,i,T,[void 0,n,E])}visitDate(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.nullBitmap),n=Ie(s.ArrayType,e.data),{["length"]:i=n.length/rs(s),["nullCount"]:T=e.nullBitmap?-1:0}=e;return new Ae(s,r,i,T,[void 0,n,E])}visitTimestamp(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.nullBitmap),n=Ie(s.ArrayType,e.data),{["length"]:i=n.length/rs(s),["nullCount"]:T=e.nullBitmap?-1:0}=e;return new Ae(s,r,i,T,[void 0,n,E])}visitTime(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.nullBitmap),n=Ie(s.ArrayType,e.data),{["length"]:i=n.length/rs(s),["nullCount"]:T=e.nullBitmap?-1:0}=e;return new Ae(s,r,i,T,[void 0,n,E])}visitDecimal(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.nullBitmap),n=Ie(s.ArrayType,e.data),{["length"]:i=n.length/rs(s),["nullCount"]:T=e.nullBitmap?-1:0}=e;return new Ae(s,r,i,T,[void 0,n,E])}visitList(e){const{["type"]:s,["offset"]:r=0,["child"]:E}=e,n=te(e.nullBitmap),i=xr(e.valueOffsets),{["length"]:T=i.length-1,["nullCount"]:o=e.nullBitmap?-1:0}=e;return new Ae(s,r,T,o,[i,void 0,n],[E])}visitStruct(e){const{["type"]:s,["offset"]:r=0,["children"]:E=[]}=e,n=te(e.nullBitmap),{length:i=E.reduce((o,{length:a})=>Math.max(o,a),0),nullCount:T=e.nullBitmap?-1:0}=e;return new Ae(s,r,i,T,[void 0,void 0,n],E)}visitUnion(e){const{["type"]:s,["offset"]:r=0,["children"]:E=[]}=e,n=Ie(s.ArrayType,e.typeIds),{["length"]:i=n.length,["nullCount"]:T=-1}=e;if(y.isSparseUnion(s))return new Ae(s,r,i,T,[void 0,void 0,void 0,n],E);const o=xr(e.valueOffsets);return new Ae(s,r,i,T,[o,void 0,void 0,n],E)}visitDictionary(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.nullBitmap),n=Ie(s.indices.ArrayType,e.data),{["dictionary"]:i=new Te([new iE().visit({type:s.dictionary})])}=e,{["length"]:T=n.length,["nullCount"]:o=e.nullBitmap?-1:0}=e;return new Ae(s,r,T,o,[void 0,n,E],[],i)}visitInterval(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.nullBitmap),n=Ie(s.ArrayType,e.data),{["length"]:i=n.length/rs(s),["nullCount"]:T=e.nullBitmap?-1:0}=e;return new Ae(s,r,i,T,[void 0,n,E])}visitDuration(e){const{["type"]:s,["offset"]:r=0}=e,E=te(e.nullBitmap),n=Ie(s.ArrayType,e.data),{["length"]:i=n.length,["nullCount"]:T=e.nullBitmap?-1:0}=e;return new Ae(s,r,i,T,[void 0,n,E])}visitFixedSizeList(e){const{["type"]:s,["offset"]:r=0,["child"]:E=new iE().visit({type:s.valueType})}=e,n=te(e.nullBitmap),{["length"]:i=E.length/rs(s),["nullCount"]:T=e.nullBitmap?-1:0}=e;return new Ae(s,r,i,T,[void 0,void 0,n],[E])}visitMap(e){const{["type"]:s,["offset"]:r=0,["child"]:E=new iE().visit({type:s.childType})}=e,n=te(e.nullBitmap),i=xr(e.valueOffsets),{["length"]:T=i.length-1,["nullCount"]:o=e.nullBitmap?-1:0}=e;return new Ae(s,r,T,o,[i,void 0,n],[E])}}const mc=new iE;function ee(t){return mc.visit(t)}class Na{constructor(e=0,s){this.numChunks=e,this.getChunkIterator=s,this.chunkIndex=0,this.chunkIterator=this.getChunkIterator(0)}next(){for(;this.chunkIndex<this.numChunks;){const e=this.chunkIterator.next();if(!e.done)return e;++this.chunkIndex<this.numChunks&&(this.chunkIterator=this.getChunkIterator(this.chunkIndex))}return{done:!0,value:null}}[Symbol.iterator](){return this}}function Bc(t){return t.some(e=>e.nullable)}function wS(t){return t.reduce((e,s)=>e+s.nullCount,0)}function VS(t){return t.reduce((e,s,r)=>(e[r+1]=e[r]+s.length,e),new Uint32Array(t.length+1))}function WS(t,e,s,r){const E=[];for(let n=-1,i=t.length;++n<i;){const T=t[n],o=e[n],{length:a}=T;if(o>=r)break;if(s>=o+a)continue;if(o>=s&&o+a<=r){E.push(T);continue}const R=Math.max(0,s-o),A=Math.min(r-o,a);E.push(T.slice(R,A-R))}return E.length===0&&E.push(t[0].slice(0,0)),E}function ZT(t,e,s,r){let E=0,n=0,i=e.length-1;do{if(E>=i-1)return s<e[i]?r(t,E,s-e[E]):null;n=E+Math.trunc((i-E)*.5),s<e[n]?i=n:E=n}while(E<i)}function zT(t,e){return t.getValid(e)}function Bn(t){function e(s,r,E){return t(s[r],E)}return function(s){const r=this.data;return ZT(r,this._offsets,s,e)}}function xS(t){let e;function s(r,E,n){return t(r[E],n,e)}return function(r,E){const n=this.data;e=E;const i=ZT(n,this._offsets,r,s);return e=void 0,i}}function XS(t){let e;function s(r,E,n){let i=n,T=0,o=0;for(let a=E-1,R=r.length;++a<R;){const A=r[a];if(~(T=t(A,e,i)))return o+T;i=0,o+=A.length}return-1}return function(r,E){e=r;const n=this.data,i=typeof E!="number"?s(n,0,0):ZT(n,this._offsets,E,s);return e=void 0,i}}class b extends z{}function Fc(t,e){return e===null&&t.length>0?0:-1}function Gc(t,e){const{nullBitmap:s}=t;if(!s||t.nullCount<=0)return-1;let r=0;for(const E of new jT(s,t.offset+(e||0),t.length,s,vS)){if(!E)return r;++r}return-1}function K(t,e,s){if(e===void 0)return-1;if(e===null)switch(t.typeId){case S.Union:break;case S.Dictionary:break;default:return Gc(t,s)}const r=Et.getVisitFn(t),E=br(e);for(let n=(s||0)-1,i=t.length;++n<i;)if(E(r(t,n)))return n;return-1}function KS(t,e,s){const r=Et.getVisitFn(t),E=br(e);for(let n=(s||0)-1,i=t.length;++n<i;)if(E(r(t,n)))return n;return-1}b.prototype.visitNull=Fc;b.prototype.visitBool=K;b.prototype.visitInt=K;b.prototype.visitInt8=K;b.prototype.visitInt16=K;b.prototype.visitInt32=K;b.prototype.visitInt64=K;b.prototype.visitUint8=K;b.prototype.visitUint16=K;b.prototype.visitUint32=K;b.prototype.visitUint64=K;b.prototype.visitFloat=K;b.prototype.visitFloat16=K;b.prototype.visitFloat32=K;b.prototype.visitFloat64=K;b.prototype.visitUtf8=K;b.prototype.visitLargeUtf8=K;b.prototype.visitBinary=K;b.prototype.visitLargeBinary=K;b.prototype.visitFixedSizeBinary=K;b.prototype.visitDate=K;b.prototype.visitDateDay=K;b.prototype.visitDateMillisecond=K;b.prototype.visitTimestamp=K;b.prototype.visitTimestampSecond=K;b.prototype.visitTimestampMillisecond=K;b.prototype.visitTimestampMicrosecond=K;b.prototype.visitTimestampNanosecond=K;b.prototype.visitTime=K;b.prototype.visitTimeSecond=K;b.prototype.visitTimeMillisecond=K;b.prototype.visitTimeMicrosecond=K;b.prototype.visitTimeNanosecond=K;b.prototype.visitDecimal=K;b.prototype.visitList=K;b.prototype.visitStruct=K;b.prototype.visitUnion=K;b.prototype.visitDenseUnion=KS;b.prototype.visitSparseUnion=KS;b.prototype.visitDictionary=K;b.prototype.visitInterval=K;b.prototype.visitIntervalDayTime=K;b.prototype.visitIntervalYearMonth=K;b.prototype.visitDuration=K;b.prototype.visitDurationSecond=K;b.prototype.visitDurationMillisecond=K;b.prototype.visitDurationMicrosecond=K;b.prototype.visitDurationNanosecond=K;b.prototype.visitFixedSizeList=K;b.prototype.visitMap=K;const Fn=new b;class g extends z{}function V(t){const{type:e}=t;if(t.nullCount===0&&t.stride===1&&(y.isInt(e)&&e.bitWidth!==64||y.isTime(e)&&e.bitWidth!==64||y.isFloat(e)&&e.precision!==ve.HALF))return new Na(t.data.length,r=>{const E=t.data[r];return E.values.subarray(0,E.length)[Symbol.iterator]()});let s=0;return new Na(t.data.length,r=>{const n=t.data[r].length,i=t.slice(s,s+n);return s+=n,new bc(i)})}class bc{constructor(e){this.vector=e,this.index=0}next(){return this.index<this.vector.length?{value:this.vector.get(this.index++)}:{done:!0,value:null}}[Symbol.iterator](){return this}}g.prototype.visitNull=V;g.prototype.visitBool=V;g.prototype.visitInt=V;g.prototype.visitInt8=V;g.prototype.visitInt16=V;g.prototype.visitInt32=V;g.prototype.visitInt64=V;g.prototype.visitUint8=V;g.prototype.visitUint16=V;g.prototype.visitUint32=V;g.prototype.visitUint64=V;g.prototype.visitFloat=V;g.prototype.visitFloat16=V;g.prototype.visitFloat32=V;g.prototype.visitFloat64=V;g.prototype.visitUtf8=V;g.prototype.visitLargeUtf8=V;g.prototype.visitBinary=V;g.prototype.visitLargeBinary=V;g.prototype.visitFixedSizeBinary=V;g.prototype.visitDate=V;g.prototype.visitDateDay=V;g.prototype.visitDateMillisecond=V;g.prototype.visitTimestamp=V;g.prototype.visitTimestampSecond=V;g.prototype.visitTimestampMillisecond=V;g.prototype.visitTimestampMicrosecond=V;g.prototype.visitTimestampNanosecond=V;g.prototype.visitTime=V;g.prototype.visitTimeSecond=V;g.prototype.visitTimeMillisecond=V;g.prototype.visitTimeMicrosecond=V;g.prototype.visitTimeNanosecond=V;g.prototype.visitDecimal=V;g.prototype.visitList=V;g.prototype.visitStruct=V;g.prototype.visitUnion=V;g.prototype.visitDenseUnion=V;g.prototype.visitSparseUnion=V;g.prototype.visitDictionary=V;g.prototype.visitInterval=V;g.prototype.visitIntervalDayTime=V;g.prototype.visitIntervalYearMonth=V;g.prototype.visitDuration=V;g.prototype.visitDurationSecond=V;g.prototype.visitDurationMillisecond=V;g.prototype.visitDurationMicrosecond=V;g.prototype.visitDurationNanosecond=V;g.prototype.visitFixedSizeList=V;g.prototype.visitMap=V;const eo=new g;var $S;const JS={},kS={};class Te{constructor(e){var s,r,E;const n=e[0]instanceof Te?e.flatMap(T=>T.data):e;if(n.length===0||n.some(T=>!(T instanceof Ae)))throw new TypeError("Vector constructor expects an Array of Data instances.");const i=(s=n[0])===null||s===void 0?void 0:s.type;switch(n.length){case 0:this._offsets=[0];break;case 1:{const{get:T,set:o,indexOf:a}=JS[i.typeId],R=n[0];this.isValid=A=>zT(R,A),this.get=A=>T(R,A),this.set=(A,l)=>o(R,A,l),this.indexOf=A=>a(R,A),this._offsets=[0,R.length];break}default:Object.setPrototypeOf(this,kS[i.typeId]),this._offsets=VS(n);break}this.data=n,this.type=i,this.stride=rs(i),this.numChildren=(E=(r=i.children)===null||r===void 0?void 0:r.length)!==null&&E!==void 0?E:0,this.length=this._offsets.at(-1)}get byteLength(){return this.data.reduce((e,s)=>e+s.byteLength,0)}get nullable(){return Bc(this.data)}get nullCount(){return wS(this.data)}get ArrayType(){return this.type.ArrayType}get[Symbol.toStringTag](){return`${this.VectorName}<${this.type[Symbol.toStringTag]}>`}get VectorName(){return`${S[this.type.typeId]}Vector`}isValid(e){return!1}get(e){return null}at(e){return this.get(QT(e,this.length))}set(e,s){}indexOf(e,s){return-1}includes(e,s){return this.indexOf(e,s)>-1}[Symbol.iterator](){return eo.visit(this)}concat(...e){return new Te(this.data.concat(e.flatMap(s=>s.data).flat(Number.POSITIVE_INFINITY)))}slice(e,s){return new Te(YS(this,e,s,({data:r,_offsets:E},n,i)=>WS(r,E,n,i)))}toJSON(){return[...this]}toArray(){const{type:e,data:s,length:r,stride:E,ArrayType:n}=this;switch(e.typeId){case S.Int:case S.Float:case S.Decimal:case S.Time:case S.Timestamp:switch(s.length){case 0:return new n;case 1:return s[0].values.subarray(0,r*E);default:return s.reduce((i,{values:T,length:o})=>(i.array.set(T.subarray(0,o*E),i.offset),i.offset+=o*E,i),{array:new n(r*E),offset:0}).array}}return[...this]}toString(){return`[${[...this].join(",")}]`}getChild(e){var s;return this.getChildAt((s=this.type.children)===null||s===void 0?void 0:s.findIndex(r=>r.name===e))}getChildAt(e){return e>-1&&e<this.numChildren?new Te(this.data.map(({children:s})=>s[e])):null}get isMemoized(){return y.isDictionary(this.type)?this.data[0].dictionary.isMemoized:!1}memoize(){if(y.isDictionary(this.type)){const e=new Gn(this.data[0].dictionary),s=this.data.map(r=>{const E=r.clone();return E.dictionary=e,E});return new Te(s)}return new Gn(this)}unmemoize(){if(y.isDictionary(this.type)&&this.isMemoized){const e=this.data[0].dictionary.unmemoize(),s=this.data.map(r=>{const E=r.clone();return E.dictionary=e,E});return new Te(s)}return this}}$S=Symbol.toStringTag;Te[$S]=(t=>{t.type=y.prototype,t.data=[],t.length=0,t.stride=1,t.numChildren=0,t._offsets=new Uint32Array([0]),t[Symbol.isConcatSpreadable]=!0;const e=Object.keys(S).map(s=>S[s]).filter(s=>typeof s=="number"&&s!==S.NONE);for(const s of e){const r=Et.getVisitFnByTypeId(s),E=ht.getVisitFnByTypeId(s),n=Fn.getVisitFnByTypeId(s);JS[s]={get:r,set:E,indexOf:n},kS[s]=Object.create(t,{isValid:{value:Bn(zT)},get:{value:Bn(Et.getVisitFnByTypeId(s))},set:{value:xS(ht.getVisitFnByTypeId(s))},indexOf:{value:XS(Fn.getVisitFnByTypeId(s))}})}return"Vector"})(Te.prototype);class Gn extends Te{constructor(e){super(e.data);const s=this.get,r=this.set,E=this.slice,n=new Array(this.length);Object.defineProperty(this,"get",{value(i){const T=n[i];if(T!==void 0)return T;const o=s.call(this,i);return n[i]=o,o}}),Object.defineProperty(this,"set",{value(i,T){r.call(this,i,T),n[i]=T}}),Object.defineProperty(this,"slice",{value:(i,T)=>new Gn(E.call(this,i,T))}),Object.defineProperty(this,"isMemoized",{value:!0}),Object.defineProperty(this,"unmemoize",{value:()=>new Te(this.data)}),Object.defineProperty(this,"memoize",{value:()=>this})}}class uT{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}offset(){return this.bb.readInt64(this.bb_pos)}metaDataLength(){return this.bb.readInt32(this.bb_pos+8)}bodyLength(){return this.bb.readInt64(this.bb_pos+16)}static sizeOf(){return 24}static createBlock(e,s,r,E){return e.prep(8,24),e.writeInt64(BigInt(E??0)),e.pad(4),e.writeInt32(r),e.writeInt64(BigInt(s??0)),e.offset()}}class at{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsFooter(e,s){return(s||new at).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsFooter(e,s){return e.setPosition(e.position()+ae),(s||new at).__init(e.readInt32(e.position())+e.position(),e)}version(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):Ue.V1}schema(e){const s=this.bb.__offset(this.bb_pos,6);return s?(e||new vt).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}dictionaries(e,s){const r=this.bb.__offset(this.bb_pos,8);return r?(s||new uT).__init(this.bb.__vector(this.bb_pos+r)+e*24,this.bb):null}dictionariesLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}recordBatches(e,s){const r=this.bb.__offset(this.bb_pos,10);return r?(s||new uT).__init(this.bb.__vector(this.bb_pos+r)+e*24,this.bb):null}recordBatchesLength(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0}customMetadata(e,s){const r=this.bb.__offset(this.bb_pos,12);return r?(s||new Be).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+e*4),this.bb):null}customMetadataLength(){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}static startFooter(e){e.startObject(5)}static addVersion(e,s){e.addFieldInt16(0,s,Ue.V1)}static addSchema(e,s){e.addFieldOffset(1,s,0)}static addDictionaries(e,s){e.addFieldOffset(2,s,0)}static startDictionariesVector(e,s){e.startVector(24,s,8)}static addRecordBatches(e,s){e.addFieldOffset(3,s,0)}static startRecordBatchesVector(e,s){e.startVector(24,s,8)}static addCustomMetadata(e,s){e.addFieldOffset(4,s,0)}static createCustomMetadataVector(e,s){e.startVector(4,s.length,4);for(let r=s.length-1;r>=0;r--)e.addOffset(s[r]);return e.endVector()}static startCustomMetadataVector(e,s){e.startVector(4,s,4)}static endFooter(e){return e.endObject()}static finishFooterBuffer(e,s){e.finish(s)}static finishSizePrefixedFooterBuffer(e,s){e.finish(s,void 0,!0)}}class oe{constructor(e=[],s,r,E=Ue.V5){this.fields=e||[],this.metadata=s||new Map,r||(r=_T(this.fields)),this.dictionaries=r,this.metadataVersion=E}get[Symbol.toStringTag](){return"Schema"}get names(){return this.fields.map(e=>e.name)}toString(){return`Schema<{ ${this.fields.map((e,s)=>`${s}: ${e}`).join(", ")} }>`}select(e){const s=new Set(e),r=this.fields.filter(E=>s.has(E.name));return new oe(r,this.metadata)}selectAt(e){const s=e.map(r=>this.fields[r]).filter(Boolean);return new oe(s,this.metadata)}assign(...e){const s=e[0]instanceof oe?e[0]:Array.isArray(e[0])?new oe(e[0]):new oe(e),r=[...this.fields],E=gE(gE(new Map,this.metadata),s.metadata),n=s.fields.filter(T=>{const o=r.findIndex(a=>a.name===T.name);return~o?(r[o]=T.clone({metadata:gE(gE(new Map,r[o].metadata),T.metadata)}))&&!1:!0}),i=_T(n,new Map);return new oe([...r,...n],E,new Map([...this.dictionaries,...i]))}}oe.prototype.fields=null;oe.prototype.metadata=null;oe.prototype.dictionaries=null;class he{static new(...e){let[s,r,E,n]=e;return e[0]&&typeof e[0]=="object"&&({name:s}=e[0],r===void 0&&(r=e[0].type),E===void 0&&(E=e[0].nullable),n===void 0&&(n=e[0].metadata)),new he(`${s}`,r,E,n)}constructor(e,s,r=!1,E){this.name=e,this.type=s,this.nullable=r,this.metadata=E||new Map}get typeId(){return this.type.typeId}get[Symbol.toStringTag](){return"Field"}toString(){return`${this.name}: ${this.type}`}clone(...e){let[s,r,E,n]=e;return!e[0]||typeof e[0]!="object"?[s=this.name,r=this.type,E=this.nullable,n=this.metadata]=e:{name:s=this.name,type:r=this.type,nullable:E=this.nullable,metadata:n=this.metadata}=e[0],he.new(s,r,E,n)}}he.prototype.type=null;he.prototype.name=null;he.prototype.nullable=null;he.prototype.metadata=null;function gE(t,e){return new Map([...t||new Map,...e||new Map])}function _T(t,e=new Map){for(let s=-1,r=t.length;++s<r;){const n=t[s].type;if(y.isDictionary(n)){if(!e.has(n.id))e.set(n.id,n.dictionary);else if(e.get(n.id)!==n.dictionary)throw new Error("Cannot create Schema containing two different dictionaries with the same Id")}n.children&&n.children.length>0&&_T(n.children,e)}return e}var gc=uA,Hc=Mr;class cE{static decode(e){e=new Hc(te(e));const s=at.getRootAsFooter(e),r=oe.decode(s.schema(),new Map,s.version());return new Yc(r,s)}static encode(e){const s=new gc,r=oe.encode(s,e.schema);at.startRecordBatchesVector(s,e.numRecordBatches);for(const i of[...e.recordBatches()].slice().reverse())Cs.encode(s,i);const E=s.endVector();at.startDictionariesVector(s,e.numDictionaries);for(const i of[...e.dictionaryBatches()].slice().reverse())Cs.encode(s,i);const n=s.endVector();return at.startFooter(s),at.addSchema(s,r),at.addVersion(s,Ue.V5),at.addRecordBatches(s,E),at.addDictionaries(s,n),at.finishFooterBuffer(s,at.endFooter(s)),s.asUint8Array()}get numRecordBatches(){return this._recordBatches.length}get numDictionaries(){return this._dictionaryBatches.length}constructor(e,s=Ue.V5,r,E){this.schema=e,this.version=s,r&&(this._recordBatches=r),E&&(this._dictionaryBatches=E)}*recordBatches(){for(let e,s=-1,r=this.numRecordBatches;++s<r;)(e=this.getRecordBatch(s))&&(yield e)}*dictionaryBatches(){for(let e,s=-1,r=this.numDictionaries;++s<r;)(e=this.getDictionaryBatch(s))&&(yield e)}getRecordBatch(e){return e>=0&&e<this.numRecordBatches&&this._recordBatches[e]||null}getDictionaryBatch(e){return e>=0&&e<this.numDictionaries&&this._dictionaryBatches[e]||null}}class Yc extends cE{get numRecordBatches(){return this._footer.recordBatchesLength()}get numDictionaries(){return this._footer.dictionariesLength()}constructor(e,s){super(e,s.version()),this._footer=s}getRecordBatch(e){if(e>=0&&e<this.numRecordBatches){const s=this._footer.recordBatches(e);if(s)return Cs.decode(s)}return null}getDictionaryBatch(e){if(e>=0&&e<this.numDictionaries){const s=this._footer.dictionaries(e);if(s)return Cs.decode(s)}return null}}class Cs{static decode(e){return new Cs(e.metaDataLength(),e.bodyLength(),e.offset())}static encode(e,s){const{metaDataLength:r}=s,E=BigInt(s.offset),n=BigInt(s.bodyLength);return uT.createBlock(e,E,r,n)}constructor(e,s,r){this.metaDataLength=e,this.offset=ce(r),this.bodyLength=ce(s)}}const pe=Object.freeze({done:!0,value:void 0});class ca{constructor(e){this._json=e}get schema(){return this._json.schema}get batches(){return this._json.batches||[]}get dictionaries(){return this._json.dictionaries||[]}}class to{tee(){return this._getDOMStream().tee()}pipe(e,s){return this._getNodeStream().pipe(e,s)}pipeTo(e,s){return this._getDOMStream().pipeTo(e,s)}pipeThrough(e,s){return this._getDOMStream().pipeThrough(e,s)}_getDOMStream(){return this._DOMStream||(this._DOMStream=this.toDOMStream())}_getNodeStream(){return this._nodeStream||(this._nodeStream=this.toNodeStream())}}class vc extends to{constructor(){super(),this._values=[],this.resolvers=[],this._closedPromise=new Promise(e=>this._closedPromiseResolve=e)}get closed(){return this._closedPromise}cancel(e){return $(this,void 0,void 0,function*(){yield this.return(e)})}write(e){this._ensureOpen()&&(this.resolvers.length<=0?this._values.push(e):this.resolvers.shift().resolve({done:!1,value:e}))}abort(e){this._closedPromiseResolve&&(this.resolvers.length<=0?this._error={error:e}:this.resolvers.shift().reject({done:!0,value:e}))}close(){if(this._closedPromiseResolve){const{resolvers:e}=this;for(;e.length>0;)e.shift().resolve(pe);this._closedPromiseResolve(),this._closedPromiseResolve=void 0}}[Symbol.asyncIterator](){return this}toDOMStream(e){return Nt.toDOMStream(this._closedPromiseResolve||this._error?this:this._values,e)}toNodeStream(e){return Nt.toNodeStream(this._closedPromiseResolve||this._error?this:this._values,e)}throw(e){return $(this,void 0,void 0,function*(){return yield this.abort(e),pe})}return(e){return $(this,void 0,void 0,function*(){return yield this.close(),pe})}read(e){return $(this,void 0,void 0,function*(){return(yield this.next(e,"read")).value})}peek(e){return $(this,void 0,void 0,function*(){return(yield this.next(e,"peek")).value})}next(...e){return this._values.length>0?Promise.resolve({done:!1,value:this._values.shift()}):this._error?Promise.reject({done:!0,value:this._error.error}):this._closedPromiseResolve?new Promise((s,r)=>{this.resolvers.push({resolve:s,reject:r})}):Promise.resolve(pe)}_ensureOpen(){if(this._closedPromiseResolve)return!0;throw new Error("AsyncQueue is closed")}}class kE extends vc{write(e){if((e=te(e)).byteLength>0)return super.write(e)}toString(e=!1){return e?RT(this.toUint8Array(!0)):this.toUint8Array(!1).then(RT)}toUint8Array(e=!1){return e?qt(this._values)[0]:$(this,void 0,void 0,function*(){var s,r,E,n;const i=[];let T=0;try{for(var o=!0,a=Vs(this),R;R=yield a.next(),s=R.done,!s;o=!0){n=R.value,o=!1;const A=n;i.push(A),T+=A.byteLength}}catch(A){r={error:A}}finally{try{!o&&!s&&(E=a.return)&&(yield E.call(a))}finally{if(r)throw r.error}}return qt(i,T)[0]})}}class bn{constructor(e){e&&(this.source=new wc(Nt.fromIterable(e)))}[Symbol.iterator](){return this}next(e){return this.source.next(e)}throw(e){return this.source.throw(e)}return(e){return this.source.return(e)}peek(e){return this.source.peek(e)}read(e){return this.source.read(e)}}class mr{constructor(e){e instanceof mr?this.source=e.source:e instanceof kE?this.source=new bs(Nt.fromAsyncIterable(e)):OA(e)?this.source=new bs(Nt.fromNodeStream(e)):XT(e)?this.source=new bs(Nt.fromDOMStream(e)):IA(e)?this.source=new bs(Nt.fromDOMStream(e.body)):dE(e)?this.source=new bs(Nt.fromIterable(e)):xs(e)?this.source=new bs(Nt.fromAsyncIterable(e)):Gr(e)&&(this.source=new bs(Nt.fromAsyncIterable(e)))}[Symbol.asyncIterator](){return this}next(e){return this.source.next(e)}throw(e){return this.source.throw(e)}return(e){return this.source.return(e)}get closed(){return this.source.closed}cancel(e){return this.source.cancel(e)}peek(e){return this.source.peek(e)}read(e){return this.source.read(e)}}class wc{constructor(e){this.source=e}cancel(e){this.return(e)}peek(e){return this.next(e,"peek").value}read(e){return this.next(e,"read").value}next(e,s="read"){return this.source.next({cmd:s,size:e})}throw(e){return Object.create(this.source.throw&&this.source.throw(e)||pe)}return(e){return Object.create(this.source.return&&this.source.return(e)||pe)}}class bs{constructor(e){this.source=e,this._closedPromise=new Promise(s=>this._closedPromiseResolve=s)}cancel(e){return $(this,void 0,void 0,function*(){yield this.return(e)})}get closed(){return this._closedPromise}read(e){return $(this,void 0,void 0,function*(){return(yield this.next(e,"read")).value})}peek(e){return $(this,void 0,void 0,function*(){return(yield this.next(e,"peek")).value})}next(e){return $(this,arguments,void 0,function*(s,r="read"){return yield this.source.next({cmd:r,size:s})})}throw(e){return $(this,void 0,void 0,function*(){const s=this.source.throw&&(yield this.source.throw(e))||pe;return this._closedPromiseResolve&&this._closedPromiseResolve(),this._closedPromiseResolve=void 0,Object.create(s)})}return(e){return $(this,void 0,void 0,function*(){const s=this.source.return&&(yield this.source.return(e))||pe;return this._closedPromiseResolve&&this._closedPromiseResolve(),this._closedPromiseResolve=void 0,Object.create(s)})}}class ua extends bn{constructor(e,s){super(),this.position=0,this.buffer=te(e),this.size=s===void 0?this.buffer.byteLength:s}readInt32(e){const{buffer:s,byteOffset:r}=this.readAt(e,4);return new DataView(s,r).getInt32(0,!0)}seek(e){return this.position=Math.min(e,this.size),e<this.size}read(e){const{buffer:s,size:r,position:E}=this;return s&&E<r?(typeof e!="number"&&(e=Number.POSITIVE_INFINITY),this.position=Math.min(r,E+Math.min(r-E,e)),s.subarray(E,this.position)):null}readAt(e,s){const r=this.buffer,E=Math.min(this.size,e+s);return r?r.subarray(e,E):new Uint8Array(s)}close(){this.buffer&&(this.buffer=null)}throw(e){return this.close(),{done:!0,value:e}}return(e){return this.close(),{done:!0,value:e}}}class gn extends mr{constructor(e,s){super(),this.position=0,this._handle=e,typeof s=="number"?this.size=s:this._pending=$(this,void 0,void 0,function*(){this.size=(yield e.stat()).size,delete this._pending})}readInt32(e){return $(this,void 0,void 0,function*(){const{buffer:s,byteOffset:r}=yield this.readAt(e,4);return new DataView(s,r).getInt32(0,!0)})}seek(e){return $(this,void 0,void 0,function*(){return this._pending&&(yield this._pending),this.position=Math.min(e,this.size),e<this.size})}read(e){return $(this,void 0,void 0,function*(){this._pending&&(yield this._pending);const{_handle:s,size:r,position:E}=this;if(s&&E<r){typeof e!="number"&&(e=Number.POSITIVE_INFINITY);let n=E,i=0,T=0;const o=Math.min(r,n+Math.min(r-n,e)),a=new Uint8Array(Math.max(0,(this.position=o)-n));for(;(n+=T)<o&&(i+=T)<a.byteLength;)({bytesRead:T}=yield s.read(a,i,a.byteLength-i,n));return a}return null})}readAt(e,s){return $(this,void 0,void 0,function*(){this._pending&&(yield this._pending);const{_handle:r,size:E}=this;if(r&&e+s<E){const n=Math.min(E,e+s),i=new Uint8Array(n-e);return(yield r.read(i,0,s,e)).buffer}return new Uint8Array(s)})}close(){return $(this,void 0,void 0,function*(){const e=this._handle;this._handle=null,e&&(yield e.close())})}throw(e){return $(this,void 0,void 0,function*(){return yield this.close(),{done:!0,value:e}})}return(e){return $(this,void 0,void 0,function*(){return yield this.close(),{done:!0,value:e}})}}const Vc=65536;function Or(t){return t<0&&(t=4294967295+t+1),`0x${t.toString(16)}`}const Br=8,so=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8];class qS{constructor(e){this.buffer=e}high(){return this.buffer[1]}low(){return this.buffer[0]}_times(e){const s=new Uint32Array([this.buffer[1]>>>16,this.buffer[1]&65535,this.buffer[0]>>>16,this.buffer[0]&65535]),r=new Uint32Array([e.buffer[1]>>>16,e.buffer[1]&65535,e.buffer[0]>>>16,e.buffer[0]&65535]);let E=s[3]*r[3];this.buffer[0]=E&65535;let n=E>>>16;return E=s[2]*r[3],n+=E,E=s[3]*r[2]>>>0,n+=E,this.buffer[0]+=n<<16,this.buffer[1]=n>>>0<E?Vc:0,this.buffer[1]+=n>>>16,this.buffer[1]+=s[1]*r[3]+s[2]*r[2]+s[3]*r[1],this.buffer[1]+=s[0]*r[3]+s[1]*r[2]+s[2]*r[1]+s[3]*r[0]<<16,this}_plus(e){const s=this.buffer[0]+e.buffer[0]>>>0;this.buffer[1]+=e.buffer[1],s<this.buffer[0]>>>0&&++this.buffer[1],this.buffer[0]=s}lessThan(e){return this.buffer[1]<e.buffer[1]||this.buffer[1]===e.buffer[1]&&this.buffer[0]<e.buffer[0]}equals(e){return this.buffer[1]===e.buffer[1]&&this.buffer[0]==e.buffer[0]}greaterThan(e){return e.lessThan(this)}hex(){return`${Or(this.buffer[1])} ${Or(this.buffer[0])}`}}class Se extends qS{times(e){return this._times(e),this}plus(e){return this._plus(e),this}static from(e,s=new Uint32Array(2)){return Se.fromString(typeof e=="string"?e:e.toString(),s)}static fromNumber(e,s=new Uint32Array(2)){return Se.fromString(e.toString(),s)}static fromString(e,s=new Uint32Array(2)){const r=e.length,E=new Se(s);for(let n=0;n<r;){const i=Br<r-n?Br:r-n,T=new Se(new Uint32Array([Number.parseInt(e.slice(n,n+i),10),0])),o=new Se(new Uint32Array([so[i],0]));E.times(o),E.plus(T),n+=i}return E}static convertArray(e){const s=new Uint32Array(e.length*2);for(let r=-1,E=e.length;++r<E;)Se.from(e[r],new Uint32Array(s.buffer,s.byteOffset+2*r*4,2));return s}static multiply(e,s){return new Se(new Uint32Array(e.buffer)).times(s)}static add(e,s){return new Se(new Uint32Array(e.buffer)).plus(s)}}class ze extends qS{negate(){return this.buffer[0]=~this.buffer[0]+1,this.buffer[1]=~this.buffer[1],this.buffer[0]==0&&++this.buffer[1],this}times(e){return this._times(e),this}plus(e){return this._plus(e),this}lessThan(e){const s=this.buffer[1]<<0,r=e.buffer[1]<<0;return s<r||s===r&&this.buffer[0]<e.buffer[0]}static from(e,s=new Uint32Array(2)){return ze.fromString(typeof e=="string"?e:e.toString(),s)}static fromNumber(e,s=new Uint32Array(2)){return ze.fromString(e.toString(),s)}static fromString(e,s=new Uint32Array(2)){const r=e.startsWith("-"),E=e.length,n=new ze(s);for(let i=r?1:0;i<E;){const T=Br<E-i?Br:E-i,o=new ze(new Uint32Array([Number.parseInt(e.slice(i,i+T),10),0])),a=new ze(new Uint32Array([so[T],0]));n.times(a),n.plus(o),i+=T}return r?n.negate():n}static convertArray(e){const s=new Uint32Array(e.length*2);for(let r=-1,E=e.length;++r<E;)ze.from(e[r],new Uint32Array(s.buffer,s.byteOffset+2*r*4,2));return s}static multiply(e,s){return new ze(new Uint32Array(e.buffer)).times(s)}static add(e,s){return new ze(new Uint32Array(e.buffer)).plus(s)}}class wt{constructor(e){this.buffer=e}high(){return new ze(new Uint32Array(this.buffer.buffer,this.buffer.byteOffset+8,2))}low(){return new ze(new Uint32Array(this.buffer.buffer,this.buffer.byteOffset,2))}negate(){return this.buffer[0]=~this.buffer[0]+1,this.buffer[1]=~this.buffer[1],this.buffer[2]=~this.buffer[2],this.buffer[3]=~this.buffer[3],this.buffer[0]==0&&++this.buffer[1],this.buffer[1]==0&&++this.buffer[2],this.buffer[2]==0&&++this.buffer[3],this}times(e){const s=new Se(new Uint32Array([this.buffer[3],0])),r=new Se(new Uint32Array([this.buffer[2],0])),E=new Se(new Uint32Array([this.buffer[1],0])),n=new Se(new Uint32Array([this.buffer[0],0])),i=new Se(new Uint32Array([e.buffer[3],0])),T=new Se(new Uint32Array([e.buffer[2],0])),o=new Se(new Uint32Array([e.buffer[1],0])),a=new Se(new Uint32Array([e.buffer[0],0]));let R=Se.multiply(n,a);this.buffer[0]=R.low();const A=new Se(new Uint32Array([R.high(),0]));return R=Se.multiply(E,a),A.plus(R),R=Se.multiply(n,o),A.plus(R),this.buffer[1]=A.low(),this.buffer[3]=A.lessThan(R)?1:0,this.buffer[2]=A.high(),new Se(new Uint32Array(this.buffer.buffer,this.buffer.byteOffset+8,2)).plus(Se.multiply(r,a)).plus(Se.multiply(E,o)).plus(Se.multiply(n,T)),this.buffer[3]+=Se.multiply(s,a).plus(Se.multiply(r,o)).plus(Se.multiply(E,T)).plus(Se.multiply(n,i)).low(),this}plus(e){const s=new Uint32Array(4);return s[3]=this.buffer[3]+e.buffer[3]>>>0,s[2]=this.buffer[2]+e.buffer[2]>>>0,s[1]=this.buffer[1]+e.buffer[1]>>>0,s[0]=this.buffer[0]+e.buffer[0]>>>0,s[0]<this.buffer[0]>>>0&&++s[1],s[1]<this.buffer[1]>>>0&&++s[2],s[2]<this.buffer[2]>>>0&&++s[3],this.buffer[3]=s[3],this.buffer[2]=s[2],this.buffer[1]=s[1],this.buffer[0]=s[0],this}hex(){return`${Or(this.buffer[3])} ${Or(this.buffer[2])} ${Or(this.buffer[1])} ${Or(this.buffer[0])}`}static multiply(e,s){return new wt(new Uint32Array(e.buffer)).times(s)}static add(e,s){return new wt(new Uint32Array(e.buffer)).plus(s)}static from(e,s=new Uint32Array(4)){return wt.fromString(typeof e=="string"?e:e.toString(),s)}static fromNumber(e,s=new Uint32Array(4)){return wt.fromString(e.toString(),s)}static fromString(e,s=new Uint32Array(4)){const r=e.startsWith("-"),E=e.length,n=new wt(s);for(let i=r?1:0;i<E;){const T=Br<E-i?Br:E-i,o=new wt(new Uint32Array([Number.parseInt(e.slice(i,i+T),10),0,0,0])),a=new wt(new Uint32Array([so[T],0,0,0]));n.times(a),n.plus(o),i+=T}return r?n.negate():n}static convertArray(e){const s=new Uint32Array(e.length*4);for(let r=-1,E=e.length;++r<E;)wt.from(e[r],new Uint32Array(s.buffer,s.byteOffset+4*4*r,4));return s}}class QS extends z{constructor(e,s,r,E,n=Ue.V5){super(),this.nodesIndex=-1,this.buffersIndex=-1,this.bytes=e,this.nodes=s,this.buffers=r,this.dictionaries=E,this.metadataVersion=n}visit(e){return super.visit(e instanceof he?e.type:e)}visitNull(e,{length:s}=this.nextFieldNode()){return ee({type:e,length:s})}visitBool(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),data:this.readData(e)})}visitInt(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),data:this.readData(e)})}visitFloat(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),data:this.readData(e)})}visitUtf8(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),valueOffsets:this.readOffsets(e),data:this.readData(e)})}visitLargeUtf8(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),valueOffsets:this.readOffsets(e),data:this.readData(e)})}visitBinary(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),valueOffsets:this.readOffsets(e),data:this.readData(e)})}visitLargeBinary(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),valueOffsets:this.readOffsets(e),data:this.readData(e)})}visitFixedSizeBinary(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),data:this.readData(e)})}visitDate(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),data:this.readData(e)})}visitTimestamp(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),data:this.readData(e)})}visitTime(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),data:this.readData(e)})}visitDecimal(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),data:this.readData(e)})}visitList(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),valueOffsets:this.readOffsets(e),child:this.visit(e.children[0])})}visitStruct(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),children:this.visitMany(e.children)})}visitUnion(e,{length:s,nullCount:r}=this.nextFieldNode()){return this.metadataVersion<Ue.V5&&this.readNullBitmap(e,r),e.mode===we.Sparse?this.visitSparseUnion(e,{length:s,nullCount:r}):this.visitDenseUnion(e,{length:s,nullCount:r})}visitDenseUnion(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,typeIds:this.readTypeIds(e),valueOffsets:this.readOffsets(e),children:this.visitMany(e.children)})}visitSparseUnion(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,typeIds:this.readTypeIds(e),children:this.visitMany(e.children)})}visitDictionary(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),data:this.readData(e.indices),dictionary:this.readDictionary(e)})}visitInterval(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),data:this.readData(e)})}visitDuration(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),data:this.readData(e)})}visitFixedSizeList(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),child:this.visit(e.children[0])})}visitMap(e,{length:s,nullCount:r}=this.nextFieldNode()){return ee({type:e,length:s,nullCount:r,nullBitmap:this.readNullBitmap(e,r),valueOffsets:this.readOffsets(e),child:this.visit(e.children[0])})}nextFieldNode(){return this.nodes[++this.nodesIndex]}nextBufferRange(){return this.buffers[++this.buffersIndex]}readNullBitmap(e,s,r=this.nextBufferRange()){return s>0&&this.readData(e,r)||new Uint8Array(0)}readOffsets(e,s){return this.readData(e,s)}readTypeIds(e,s){return this.readData(e,s)}readData(e,{length:s,offset:r}=this.nextBufferRange()){return this.bytes.subarray(r,r+s)}readDictionary(e){return this.dictionaries.get(e.id)}}class Wc extends QS{constructor(e,s,r,E,n){super(new Uint8Array(0),s,r,E,n),this.sources=e}readNullBitmap(e,s,{offset:r}=this.nextBufferRange()){return s<=0?new Uint8Array(0):mn(this.sources[r])}readOffsets(e,{offset:s}=this.nextBufferRange()){return Ie(Uint8Array,Ie(e.OffsetArrayType,this.sources[s]))}readTypeIds(e,{offset:s}=this.nextBufferRange()){return Ie(Uint8Array,Ie(e.ArrayType,this.sources[s]))}readData(e,{offset:s}=this.nextBufferRange()){const{sources:r}=this;return y.isTimestamp(e)||(y.isInt(e)||y.isTime(e))&&e.bitWidth===64||y.isDuration(e)||y.isDate(e)&&e.unit===ft.MILLISECOND?Ie(Uint8Array,ze.convertArray(r[s])):y.isDecimal(e)?Ie(Uint8Array,wt.convertArray(r[s])):y.isBinary(e)||y.isLargeBinary(e)||y.isFixedSizeBinary(e)?xc(r[s]):y.isBool(e)?mn(r[s]):y.isUtf8(e)||y.isLargeUtf8(e)?xT(r[s].join("")):Ie(Uint8Array,Ie(e.ArrayType,r[s].map(E=>+E)))}}function xc(t){const e=t.join(""),s=new Uint8Array(e.length/2);for(let r=0;r<e.length;r+=2)s[r>>1]=Number.parseInt(e.slice(r,r+2),16);return s}class H extends z{compareSchemas(e,s){return e===s||s instanceof e.constructor&&this.compareManyFields(e.fields,s.fields)}compareManyFields(e,s){return e===s||Array.isArray(e)&&Array.isArray(s)&&e.length===s.length&&e.every((r,E)=>this.compareFields(r,s[E]))}compareFields(e,s){return e===s||s instanceof e.constructor&&e.name===s.name&&e.nullable===s.nullable&&this.visit(e.type,s.type)}}function je(t,e){return e instanceof t.constructor}function $s(t,e){return t===e||je(t,e)}function As(t,e){return t===e||je(t,e)&&t.bitWidth===e.bitWidth&&t.isSigned===e.isSigned}function si(t,e){return t===e||je(t,e)&&t.precision===e.precision}function Xc(t,e){return t===e||je(t,e)&&t.byteWidth===e.byteWidth}function ro(t,e){return t===e||je(t,e)&&t.unit===e.unit}function CE(t,e){return t===e||je(t,e)&&t.unit===e.unit&&t.timezone===e.timezone}function fE(t,e){return t===e||je(t,e)&&t.unit===e.unit&&t.bitWidth===e.bitWidth}function Kc(t,e){return t===e||je(t,e)&&t.children.length===e.children.length&&fs.compareManyFields(t.children,e.children)}function $c(t,e){return t===e||je(t,e)&&t.children.length===e.children.length&&fs.compareManyFields(t.children,e.children)}function Eo(t,e){return t===e||je(t,e)&&t.mode===e.mode&&t.typeIds.every((s,r)=>s===e.typeIds[r])&&fs.compareManyFields(t.children,e.children)}function Jc(t,e){return t===e||je(t,e)&&t.id===e.id&&t.isOrdered===e.isOrdered&&fs.visit(t.indices,e.indices)&&fs.visit(t.dictionary,e.dictionary)}function no(t,e){return t===e||je(t,e)&&t.unit===e.unit}function hE(t,e){return t===e||je(t,e)&&t.unit===e.unit}function kc(t,e){return t===e||je(t,e)&&t.listSize===e.listSize&&t.children.length===e.children.length&&fs.compareManyFields(t.children,e.children)}function qc(t,e){return t===e||je(t,e)&&t.keysSorted===e.keysSorted&&t.children.length===e.children.length&&fs.compareManyFields(t.children,e.children)}H.prototype.visitNull=$s;H.prototype.visitBool=$s;H.prototype.visitInt=As;H.prototype.visitInt8=As;H.prototype.visitInt16=As;H.prototype.visitInt32=As;H.prototype.visitInt64=As;H.prototype.visitUint8=As;H.prototype.visitUint16=As;H.prototype.visitUint32=As;H.prototype.visitUint64=As;H.prototype.visitFloat=si;H.prototype.visitFloat16=si;H.prototype.visitFloat32=si;H.prototype.visitFloat64=si;H.prototype.visitUtf8=$s;H.prototype.visitLargeUtf8=$s;H.prototype.visitBinary=$s;H.prototype.visitLargeBinary=$s;H.prototype.visitFixedSizeBinary=Xc;H.prototype.visitDate=ro;H.prototype.visitDateDay=ro;H.prototype.visitDateMillisecond=ro;H.prototype.visitTimestamp=CE;H.prototype.visitTimestampSecond=CE;H.prototype.visitTimestampMillisecond=CE;H.prototype.visitTimestampMicrosecond=CE;H.prototype.visitTimestampNanosecond=CE;H.prototype.visitTime=fE;H.prototype.visitTimeSecond=fE;H.prototype.visitTimeMillisecond=fE;H.prototype.visitTimeMicrosecond=fE;H.prototype.visitTimeNanosecond=fE;H.prototype.visitDecimal=$s;H.prototype.visitList=Kc;H.prototype.visitStruct=$c;H.prototype.visitUnion=Eo;H.prototype.visitDenseUnion=Eo;H.prototype.visitSparseUnion=Eo;H.prototype.visitDictionary=Jc;H.prototype.visitInterval=no;H.prototype.visitIntervalDayTime=no;H.prototype.visitIntervalYearMonth=no;H.prototype.visitDuration=hE;H.prototype.visitDurationSecond=hE;H.prototype.visitDurationMillisecond=hE;H.prototype.visitDurationMicrosecond=hE;H.prototype.visitDurationNanosecond=hE;H.prototype.visitFixedSizeList=kc;H.prototype.visitMap=qc;const fs=new H;function LT(t,e){return fs.compareSchemas(t,e)}function hi(t,e){return Qc(t,e.map(s=>s.data.concat()))}function Qc(t,e){const s=[...t.fields],r=[],E={numBatches:e.reduce((A,l)=>Math.max(A,l.length),0)};let n=0,i=0,T=-1;const o=e.length;let a,R=[];for(;E.numBatches-- >0;){for(i=Number.POSITIVE_INFINITY,T=-1;++T<o;)R[T]=a=e[T].shift(),i=Math.min(i,a?a.length:i);Number.isFinite(i)&&(R=jc(s,i,R,e,E),i>0&&(r[n++]=ee({type:new Je(s),length:i,nullCount:0,children:R.slice()})))}return[t=t.assign(s),r.map(A=>new st(t,A))]}function jc(t,e,s,r,E){var n;const i=(e+63&-64)>>3;for(let T=-1,o=r.length;++T<o;){const a=s[T],R=a==null?void 0:a.length;if(R>=e)R===e?s[T]=a:(s[T]=a.slice(0,e),E.numBatches=Math.max(E.numBatches,r[T].unshift(a.slice(e,R-e))));else{const A=t[T];t[T]=A.clone({nullable:!0}),s[T]=(n=a==null?void 0:a._changeLengthAndBackfillNullBitmap(e))!==null&&n!==void 0?n:ee({type:A.type,length:e,nullCount:e,nullBitmap:new Uint8Array(i)})}}return s}var jS;class $e{constructor(...e){var s,r;if(e.length===0)return this.batches=[],this.schema=new oe([]),this._offsets=[0],this;let E,n;e[0]instanceof oe&&(E=e.shift()),e.at(-1)instanceof Uint32Array&&(n=e.pop());const i=o=>{if(o){if(o instanceof st)return[o];if(o instanceof $e)return o.batches;if(o instanceof Ae){if(o.type instanceof Je)return[new st(new oe(o.type.children),o)]}else{if(Array.isArray(o))return o.flatMap(a=>i(a));if(typeof o[Symbol.iterator]=="function")return[...o].flatMap(a=>i(a));if(typeof o=="object"){const a=Object.keys(o),R=a.map(u=>new Te([o[u]])),A=E??new oe(a.map((u,h)=>new he(String(u),R[h].type,R[h].nullable))),[,l]=hi(A,R);return l.length===0?[new st(o)]:l}}}return[]},T=e.flatMap(o=>i(o));if(E=(r=E??((s=T[0])===null||s===void 0?void 0:s.schema))!==null&&r!==void 0?r:new oe([]),!(E instanceof oe))throw new TypeError("Table constructor expects a [Schema, RecordBatch[]] pair.");for(const o of T){if(!(o instanceof st))throw new TypeError("Table constructor expects a [Schema, RecordBatch[]] pair.");if(!LT(E,o.schema))throw new TypeError("Table and inner RecordBatch schemas must be equivalent.")}this.schema=E,this.batches=T,this._offsets=n??VS(this.data)}get data(){return this.batches.map(({data:e})=>e)}get numCols(){return this.schema.fields.length}get numRows(){return this.data.reduce((e,s)=>e+s.length,0)}get nullCount(){return this._nullCount===-1&&(this._nullCount=wS(this.data)),this._nullCount}isValid(e){return!1}get(e){return null}at(e){return this.get(QT(e,this.numRows))}set(e,s){}indexOf(e,s){return-1}[Symbol.iterator](){return this.batches.length>0?eo.visit(new Te(this.data)):new Array(0)[Symbol.iterator]()}toArray(){return[...this]}toString(){return`[
  ${this.toArray().join(`,
  `)}
]`}concat(...e){const s=this.schema,r=this.data.concat(e.flatMap(({data:E})=>E));return new $e(s,r.map(E=>new st(s,E)))}slice(e,s){const r=this.schema;[e,s]=YS({length:this.numRows},e,s);const E=WS(this.data,this._offsets,e,s);return new $e(r,E.map(n=>new st(r,n)))}getChild(e){return this.getChildAt(this.schema.fields.findIndex(s=>s.name===e))}getChildAt(e){if(e>-1&&e<this.schema.fields.length){const s=this.data.map(r=>r.children[e]);if(s.length===0){const{type:r}=this.schema.fields[e],E=ee({type:r,length:0,nullCount:0});s.push(E._changeLengthAndBackfillNullBitmap(this.numRows))}return new Te(s)}return null}setChild(e,s){var r;return this.setChildAt((r=this.schema.fields)===null||r===void 0?void 0:r.findIndex(E=>E.name===e),s)}setChildAt(e,s){let r=this.schema,E=[...this.batches];if(e>-1&&e<this.numCols){s||(s=new Te([ee({type:new ds,length:this.numRows})]));const n=r.fields.slice(),i=n[e].clone({type:s.type}),T=this.schema.fields.map((o,a)=>this.getChildAt(a));[n[e],T[e]]=[i,s],[r,E]=hi(r,T)}return new $e(r,E)}select(e){const s=this.schema.fields.reduce((r,E,n)=>r.set(E.name,n),new Map);return this.selectAt(e.map(r=>s.get(r)).filter(r=>r>-1))}selectAt(e){const s=this.schema.selectAt(e),r=this.batches.map(E=>E.selectAt(e));return new $e(s,r)}assign(e){const s=this.schema.fields,[r,E]=e.schema.fields.reduce((T,o,a)=>{const[R,A]=T,l=s.findIndex(u=>u.name===o.name);return~l?A[l]=a:R.push(a),T},[[],[]]),n=this.schema.assign(e.schema),i=[...s.map((T,o)=>[o,E[o]]).map(([T,o])=>o===void 0?this.getChildAt(T):e.getChildAt(o)),...r.map(T=>e.getChildAt(T))].filter(Boolean);return new $e(...hi(n,i))}}jS=Symbol.toStringTag;$e[jS]=(t=>(t.schema=null,t.batches=[],t._offsets=new Uint32Array([0]),t._nullCount=-1,t[Symbol.isConcatSpreadable]=!0,t.isValid=Bn(zT),t.get=Bn(Et.getVisitFn(S.Struct)),t.set=xS(ht.getVisitFn(S.Struct)),t.indexOf=XS(Fn.getVisitFn(S.Struct)),"Table"))($e.prototype);var ZS;let st=class zr{constructor(...e){switch(e.length){case 2:{if([this.schema]=e,!(this.schema instanceof oe))throw new TypeError("RecordBatch constructor expects a [Schema, Data] pair.");if([,this.data=ee({nullCount:0,type:new Je(this.schema.fields),children:this.schema.fields.map(s=>ee({type:s.type,nullCount:0}))})]=e,!(this.data instanceof Ae))throw new TypeError("RecordBatch constructor expects a [Schema, Data] pair.");[this.schema,this.data]=_a(this.schema,this.data.children);break}case 1:{const[s]=e,{fields:r,children:E,length:n}=Object.keys(s).reduce((o,a,R)=>(o.children[R]=s[a],o.length=Math.max(o.length,s[a].length),o.fields[R]=he.new({name:a,type:s[a].type,nullable:!0}),o),{length:0,fields:new Array,children:new Array}),i=new oe(r),T=ee({type:new Je(r),length:n,children:E,nullCount:0});[this.schema,this.data]=_a(i,T.children,n);break}default:throw new TypeError("RecordBatch constructor expects an Object mapping names to child Data, or a [Schema, Data] pair.")}}get dictionaries(){return this._dictionaries||(this._dictionaries=zS(this.schema.fields,this.data.children))}get numCols(){return this.schema.fields.length}get numRows(){return this.data.length}get nullCount(){return this.data.nullCount}isValid(e){return this.data.getValid(e)}get(e){return Et.visit(this.data,e)}at(e){return this.get(QT(e,this.numRows))}set(e,s){return ht.visit(this.data,e,s)}indexOf(e,s){return Fn.visit(this.data,e,s)}[Symbol.iterator](){return eo.visit(new Te([this.data]))}toArray(){return[...this]}concat(...e){return new $e(this.schema,[this,...e])}slice(e,s){const[r]=new Te([this.data]).slice(e,s).data;return new zr(this.schema,r)}getChild(e){var s;return this.getChildAt((s=this.schema.fields)===null||s===void 0?void 0:s.findIndex(r=>r.name===e))}getChildAt(e){return e>-1&&e<this.schema.fields.length?new Te([this.data.children[e]]):null}setChild(e,s){var r;return this.setChildAt((r=this.schema.fields)===null||r===void 0?void 0:r.findIndex(E=>E.name===e),s)}setChildAt(e,s){let r=this.schema,E=this.data;if(e>-1&&e<this.numCols){s||(s=new Te([ee({type:new ds,length:this.numRows})]));const n=r.fields.slice(),i=E.children.slice(),T=n[e].clone({type:s.type});[n[e],i[e]]=[T,s.data[0]],r=new oe(n,new Map(this.schema.metadata)),E=ee({type:new Je(n),children:i})}return new zr(r,E)}select(e){const s=this.schema.select(e),r=new Je(s.fields),E=[];for(const n of e){const i=this.schema.fields.findIndex(T=>T.name===n);~i&&(E[i]=this.data.children[i])}return new zr(s,ee({type:r,length:this.numRows,children:E}))}selectAt(e){const s=this.schema.selectAt(e),r=e.map(n=>this.data.children[n]).filter(Boolean),E=ee({type:new Je(s.fields),length:this.numRows,children:r});return new zr(s,E)}};ZS=Symbol.toStringTag;st[ZS]=(t=>(t._nullCount=-1,t[Symbol.isConcatSpreadable]=!0,"RecordBatch"))(st.prototype);function _a(t,e,s=e.reduce((r,E)=>Math.max(r,E.length),0)){var r;const E=[...t.fields],n=[...e],i=(s+63&-64)>>3;for(const[T,o]of t.fields.entries()){const a=e[T];(!a||a.length!==s)&&(E[T]=o.clone({nullable:!0}),n[T]=(r=a==null?void 0:a._changeLengthAndBackfillNullBitmap(s))!==null&&r!==void 0?r:ee({type:o.type,length:s,nullCount:s,nullBitmap:new Uint8Array(i)}))}return[t.assign(E),ee({type:new Je(E),length:s,children:n})]}function zS(t,e,s=new Map){var r,E;if(((r=t==null?void 0:t.length)!==null&&r!==void 0?r:0)>0&&(t==null?void 0:t.length)===(e==null?void 0:e.length))for(let n=-1,i=t.length;++n<i;){const{type:T}=t[n],o=e[n];for(const a of[o,...((E=o==null?void 0:o.dictionary)===null||E===void 0?void 0:E.data)||[]])zS(T.children,a==null?void 0:a.children,s);if(y.isDictionary(T)){const{id:a}=T;if(!s.has(a))o!=null&&o.dictionary&&s.set(a,o.dictionary);else if(s.get(a)!==o.dictionary)throw new Error("Cannot create Schema containing two different dictionaries with the same Id")}}return s}class io extends st{constructor(e){const s=e.fields.map(E=>ee({type:E.type})),r=ee({type:new Je(e.fields),nullCount:0,children:s});super(e,r)}}let Os=class Ht{constructor(){this.bb=null,this.bb_pos=0}__init(e,s){return this.bb_pos=e,this.bb=s,this}static getRootAsMessage(e,s){return(s||new Ht).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsMessage(e,s){return e.setPosition(e.position()+ae),(s||new Ht).__init(e.readInt32(e.position())+e.position(),e)}version(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt16(this.bb_pos+e):Ue.V1}headerType(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readUint8(this.bb_pos+e):ne.NONE}header(e){const s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__union(e,this.bb_pos+s):null}bodyLength(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readInt64(this.bb_pos+e):BigInt("0")}customMetadata(e,s){const r=this.bb.__offset(this.bb_pos,12);return r?(s||new Be).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+e*4),this.bb):null}customMetadataLength(){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}static startMessage(e){e.startObject(5)}static addVersion(e,s){e.addFieldInt16(0,s,Ue.V1)}static addHeaderType(e,s){e.addFieldInt8(1,s,ne.NONE)}static addHeader(e,s){e.addFieldOffset(2,s,0)}static addBodyLength(e,s){e.addFieldInt64(3,s,BigInt("0"))}static addCustomMetadata(e,s){e.addFieldOffset(4,s,0)}static createCustomMetadataVector(e,s){e.startVector(4,s.length,4);for(let r=s.length-1;r>=0;r--)e.addOffset(s[r]);return e.endVector()}static startCustomMetadataVector(e,s){e.startVector(4,s,4)}static endMessage(e){return e.endObject()}static finishMessageBuffer(e,s){e.finish(s)}static finishSizePrefixedMessageBuffer(e,s){e.finish(s,void 0,!0)}static createMessage(e,s,r,E,n,i){return Ht.startMessage(e),Ht.addVersion(e,s),Ht.addHeaderType(e,r),Ht.addHeader(e,E),Ht.addBodyLength(e,n),Ht.addCustomMetadata(e,i),Ht.endMessage(e)}};class Zc extends z{visit(e,s){return e==null||s==null?void 0:super.visit(e,s)}visitNull(e,s){return Ra.startNull(s),Ra.endNull(s)}visitInt(e,s){return At.startInt(s),At.addBitWidth(s,e.bitWidth),At.addIsSigned(s,e.isSigned),At.endInt(s)}visitFloat(e,s){return xt.startFloatingPoint(s),xt.addPrecision(s,e.precision),xt.endFloatingPoint(s)}visitBinary(e,s){return na.startBinary(s),na.endBinary(s)}visitLargeBinary(e,s){return Ta.startLargeBinary(s),Ta.endLargeBinary(s)}visitBool(e,s){return ia.startBool(s),ia.endBool(s)}visitUtf8(e,s){return Aa.startUtf8(s),Aa.endUtf8(s)}visitLargeUtf8(e,s){return oa.startLargeUtf8(s),oa.endLargeUtf8(s)}visitDecimal(e,s){return Er.startDecimal(s),Er.addScale(s,e.scale),Er.addPrecision(s,e.precision),Er.addBitWidth(s,e.bitWidth),Er.endDecimal(s)}visitDate(e,s){return WE.startDate(s),WE.addUnit(s,e.unit),WE.endDate(s)}visitTime(e,s){return ut.startTime(s),ut.addUnit(s,e.unit),ut.addBitWidth(s,e.bitWidth),ut.endTime(s)}visitTimestamp(e,s){const r=e.timezone&&s.createString(e.timezone)||void 0;return _t.startTimestamp(s),_t.addUnit(s,e.unit),r!==void 0&&_t.addTimezone(s,r),_t.endTimestamp(s)}visitInterval(e,s){return Xt.startInterval(s),Xt.addUnit(s,e.unit),Xt.endInterval(s)}visitDuration(e,s){return xE.startDuration(s),xE.addUnit(s,e.unit),xE.endDuration(s)}visitList(e,s){return aa.startList(s),aa.endList(s)}visitStruct(e,s){return Ys.startStruct_(s),Ys.endStruct_(s)}visitUnion(e,s){tt.startTypeIdsVector(s,e.typeIds.length);const r=tt.createTypeIdsVector(s,e.typeIds);return tt.startUnion(s),tt.addMode(s,e.mode),tt.addTypeIds(s,r),tt.endUnion(s)}visitDictionary(e,s){const r=this.visit(e.indices,s);return Ts.startDictionaryEncoding(s),Ts.addId(s,BigInt(e.id)),Ts.addIsOrdered(s,e.isOrdered),r!==void 0&&Ts.addIndexType(s,r),Ts.endDictionaryEncoding(s)}visitFixedSizeBinary(e,s){return XE.startFixedSizeBinary(s),XE.addByteWidth(s,e.byteWidth),XE.endFixedSizeBinary(s)}visitFixedSizeList(e,s){return KE.startFixedSizeList(s),KE.addListSize(s,e.listSize),KE.endFixedSizeList(s)}visitMap(e,s){return $E.startMap(s),$E.addKeysSorted(s,e.keysSorted),$E.endMap(s)}}const Di=new Zc;function zc(t,e=new Map){return new oe(tu(t,e),qE(t.metadata),e)}function eI(t){return new Ot(t.count,tI(t.columns),sI(t.columns))}function eu(t){return new jt(eI(t.data),t.id,t.isDelta)}function tu(t,e){return(t.fields||[]).filter(Boolean).map(s=>he.fromJSON(s,e))}function La(t,e){return(t.children||[]).filter(Boolean).map(s=>he.fromJSON(s,e))}function tI(t){return(t||[]).reduce((e,s)=>[...e,new hs(s.count,su(s.VALIDITY)),...tI(s.children)],[])}function sI(t,e=[]){for(let s=-1,r=(t||[]).length;++s<r;){const E=t[s];E.VALIDITY&&e.push(new $t(e.length,E.VALIDITY.length)),E.TYPE_ID&&e.push(new $t(e.length,E.TYPE_ID.length)),E.OFFSET&&e.push(new $t(e.length,E.OFFSET.length)),E.DATA&&e.push(new $t(e.length,E.DATA.length)),e=sI(E.children,e)}return e}function su(t){return(t||[]).reduce((e,s)=>e+ +(s===0),0)}function ru(t,e){let s,r,E,n,i,T;return!e||!(n=t.dictionary)?(i=Ca(t,La(t,e)),E=new he(t.name,i,t.nullable,qE(t.metadata))):e.has(s=n.id)?(r=(r=n.indexType)?da(r):new NE,T=new yr(e.get(s),r,s,n.isOrdered),E=new he(t.name,T,t.nullable,qE(t.metadata))):(r=(r=n.indexType)?da(r):new NE,e.set(s,i=Ca(t,La(t,e))),T=new yr(i,r,s,n.isOrdered),E=new he(t.name,T,t.nullable,qE(t.metadata))),E||null}function qE(t=[]){return new Map(t.map(({key:e,value:s})=>[e,s]))}function da(t){return new Xs(t.isSigned,t.bitWidth)}function Ca(t,e){const s=t.type.name;switch(s){case"NONE":return new ds;case"null":return new ds;case"binary":return new On;case"largebinary":return new ln;case"utf8":return new Nn;case"largeutf8":return new cn;case"bool":return new un;case"list":return new Dn((e||[])[0]);case"struct":return new Je(e||[]);case"struct_":return new Je(e||[])}switch(s){case"int":{const r=t.type;return new Xs(r.isSigned,r.bitWidth)}case"floatingpoint":{const r=t.type;return new In(ve[r.precision])}case"decimal":{const r=t.type;return new _n(r.scale,r.precision,r.bitWidth)}case"date":{const r=t.type;return new Ln(ft[r.unit])}case"time":{const r=t.type;return new dn(Y[r.unit],r.bitWidth)}case"timestamp":{const r=t.type;return new Cn(Y[r.unit],r.timezone)}case"interval":{const r=t.type;return new fn(Qt[r.unit])}case"duration":{const r=t.type;return new hn(Y[r.unit])}case"union":{const r=t.type,[E,...n]=(r.mode+"").toLowerCase(),i=E.toUpperCase()+n.join("");return new pn(we[i],r.typeIds||[],e||[])}case"fixedsizebinary":{const r=t.type;return new Pn(r.byteWidth)}case"fixedsizelist":{const r=t.type;return new Mn(r.listSize,(e||[])[0])}case"map":{const r=t.type;return new Un((e||[])[0],r.keysSorted)}}throw new Error(`Unrecognized type: "${s}"`)}var Eu=uA,nu=Mr;class ke{static fromJSON(e,s){const r=new ke(0,Ue.V5,s);return r._createHeader=iu(e,s),r}static decode(e){e=new nu(te(e));const s=Os.getRootAsMessage(e),r=s.bodyLength(),E=s.version(),n=s.headerType(),i=new ke(r,E,n);return i._createHeader=Tu(s,n),i}static encode(e){const s=new Eu;let r=-1;return e.isSchema()?r=oe.encode(s,e.header()):e.isRecordBatch()?r=Ot.encode(s,e.header()):e.isDictionaryBatch()&&(r=jt.encode(s,e.header())),Os.startMessage(s),Os.addVersion(s,Ue.V5),Os.addHeader(s,r),Os.addHeaderType(s,e.headerType),Os.addBodyLength(s,BigInt(e.bodyLength)),Os.finishMessageBuffer(s,Os.endMessage(s)),s.asUint8Array()}static from(e,s=0){if(e instanceof oe)return new ke(0,Ue.V5,ne.Schema,e);if(e instanceof Ot)return new ke(s,Ue.V5,ne.RecordBatch,e);if(e instanceof jt)return new ke(s,Ue.V5,ne.DictionaryBatch,e);throw new Error(`Unrecognized Message header: ${e}`)}get type(){return this.headerType}get version(){return this._version}get headerType(){return this._headerType}get bodyLength(){return this._bodyLength}header(){return this._createHeader()}isSchema(){return this.headerType===ne.Schema}isRecordBatch(){return this.headerType===ne.RecordBatch}isDictionaryBatch(){return this.headerType===ne.DictionaryBatch}constructor(e,s,r,E){this._version=s,this._headerType=r,this.body=new Uint8Array(0),E&&(this._createHeader=()=>E),this._bodyLength=ce(e)}}class Ot{get nodes(){return this._nodes}get length(){return this._length}get buffers(){return this._buffers}constructor(e,s,r){this._nodes=s,this._buffers=r,this._length=ce(e)}}class jt{get id(){return this._id}get data(){return this._data}get isDelta(){return this._isDelta}get length(){return this.data.length}get nodes(){return this.data.nodes}get buffers(){return this.data.buffers}constructor(e,s,r=!1){this._data=e,this._isDelta=r,this._id=ce(s)}}class $t{constructor(e,s){this.offset=ce(e),this.length=ce(s)}}class hs{constructor(e,s){this.length=ce(e),this.nullCount=ce(s)}}function iu(t,e){return()=>{switch(e){case ne.Schema:return oe.fromJSON(t);case ne.RecordBatch:return Ot.fromJSON(t);case ne.DictionaryBatch:return jt.fromJSON(t)}throw new Error(`Unrecognized Message type: { name: ${ne[e]}, type: ${e} }`)}}function Tu(t,e){return()=>{switch(e){case ne.Schema:return oe.decode(t.header(new vt),new Map,t.version());case ne.RecordBatch:return Ot.decode(t.header(new ts),t.version());case ne.DictionaryBatch:return jt.decode(t.header(new sr),t.version())}throw new Error(`Unrecognized Message type: { name: ${ne[e]}, type: ${e} }`)}}he.encode=uu;he.decode=Nu;he.fromJSON=ru;oe.encode=cu;oe.decode=ou;oe.fromJSON=zc;Ot.encode=_u;Ot.decode=au;Ot.fromJSON=eI;jt.encode=Lu;jt.decode=Ru;jt.fromJSON=eu;hs.encode=du;hs.decode=Su;$t.encode=Cu;$t.decode=Au;function ou(t,e=new Map,s=Ue.V5){const r=lu(t,e);return new oe(r,QE(t),e,s)}function au(t,e=Ue.V5){if(t.compression()!==null)throw new Error("Record batch compression not implemented");return new Ot(t.length(),Iu(t),Ou(t,e))}function Ru(t,e=Ue.V5){return new jt(Ot.decode(t.data(),e),t.id(),t.isDelta())}function Au(t){return new $t(t.offset(),t.length())}function Su(t){return new hs(t.length(),t.nullCount())}function Iu(t){const e=[];for(let s,r=-1,E=-1,n=t.nodesLength();++r<n;)(s=t.nodes(r))&&(e[++E]=hs.decode(s));return e}function Ou(t,e){const s=[];for(let r,E=-1,n=-1,i=t.buffersLength();++E<i;)(r=t.buffers(E))&&(e<Ue.V4&&(r.bb_pos+=8*(E+1)),s[++n]=$t.decode(r));return s}function lu(t,e){const s=[];for(let r,E=-1,n=-1,i=t.fieldsLength();++E<i;)(r=t.fields(E))&&(s[++n]=he.decode(r,e));return s}function fa(t,e){const s=[];for(let r,E=-1,n=-1,i=t.childrenLength();++E<i;)(r=t.children(E))&&(s[++n]=he.decode(r,e));return s}function Nu(t,e){let s,r,E,n,i,T;return!e||!(T=t.dictionary())?(E=Da(t,fa(t,e)),r=new he(t.name(),E,t.nullable(),QE(t))):e.has(s=ce(T.id()))?(n=(n=T.indexType())?ha(n):new NE,i=new yr(e.get(s),n,s,T.isOrdered()),r=new he(t.name(),i,t.nullable(),QE(t))):(n=(n=T.indexType())?ha(n):new NE,e.set(s,E=Da(t,fa(t,e))),i=new yr(E,n,s,T.isOrdered()),r=new he(t.name(),i,t.nullable(),QE(t))),r||null}function QE(t){const e=new Map;if(t)for(let s,r,E=-1,n=Math.trunc(t.customMetadataLength());++E<n;)(s=t.customMetadata(E))&&(r=s.key())!=null&&e.set(r,s.value());return e}function ha(t){return new Xs(t.isSigned(),t.bitWidth())}function Da(t,e){const s=t.typeType();switch(s){case Le.NONE:return new ds;case Le.Null:return new ds;case Le.Binary:return new On;case Le.LargeBinary:return new ln;case Le.Utf8:return new Nn;case Le.LargeUtf8:return new cn;case Le.Bool:return new un;case Le.List:return new Dn((e||[])[0]);case Le.Struct_:return new Je(e||[])}switch(s){case Le.Int:{const r=t.type(new At);return new Xs(r.isSigned(),r.bitWidth())}case Le.FloatingPoint:{const r=t.type(new xt);return new In(r.precision())}case Le.Decimal:{const r=t.type(new Er);return new _n(r.scale(),r.precision(),r.bitWidth())}case Le.Date:{const r=t.type(new WE);return new Ln(r.unit())}case Le.Time:{const r=t.type(new ut);return new dn(r.unit(),r.bitWidth())}case Le.Timestamp:{const r=t.type(new _t);return new Cn(r.unit(),r.timezone())}case Le.Interval:{const r=t.type(new Xt);return new fn(r.unit())}case Le.Duration:{const r=t.type(new xE);return new hn(r.unit())}case Le.Union:{const r=t.type(new tt);return new pn(r.mode(),r.typeIdsArray()||[],e||[])}case Le.FixedSizeBinary:{const r=t.type(new XE);return new Pn(r.byteWidth())}case Le.FixedSizeList:{const r=t.type(new KE);return new Mn(r.listSize(),(e||[])[0])}case Le.Map:{const r=t.type(new $E);return new Un((e||[])[0],r.keysSorted())}}throw new Error(`Unrecognized type: "${Le[s]}" (${s})`)}function cu(t,e){const s=e.fields.map(n=>he.encode(t,n));vt.startFieldsVector(t,s.length);const r=vt.createFieldsVector(t,s),E=e.metadata&&e.metadata.size>0?vt.createCustomMetadataVector(t,[...e.metadata].map(([n,i])=>{const T=t.createString(`${n}`),o=t.createString(`${i}`);return Be.startKeyValue(t),Be.addKey(t,T),Be.addValue(t,o),Be.endKeyValue(t)})):-1;return vt.startSchema(t),vt.addFields(t,r),vt.addEndianness(t,fu?Ur.Little:Ur.Big),E!==-1&&vt.addCustomMetadata(t,E),vt.endSchema(t)}function uu(t,e){let s=-1,r=-1,E=-1;const n=e.type;let i=e.typeId;y.isDictionary(n)?(i=n.dictionary.typeId,E=Di.visit(n,t),r=Di.visit(n.dictionary,t)):r=Di.visit(n,t);const T=(n.children||[]).map(R=>he.encode(t,R)),o=lt.createChildrenVector(t,T),a=e.metadata&&e.metadata.size>0?lt.createCustomMetadataVector(t,[...e.metadata].map(([R,A])=>{const l=t.createString(`${R}`),u=t.createString(`${A}`);return Be.startKeyValue(t),Be.addKey(t,l),Be.addValue(t,u),Be.endKeyValue(t)})):-1;return e.name&&(s=t.createString(e.name)),lt.startField(t),lt.addType(t,r),lt.addTypeType(t,i),lt.addChildren(t,o),lt.addNullable(t,!!e.nullable),s!==-1&&lt.addName(t,s),E!==-1&&lt.addDictionary(t,E),a!==-1&&lt.addCustomMetadata(t,a),lt.endField(t)}function _u(t,e){const s=e.nodes||[],r=e.buffers||[];ts.startNodesVector(t,s.length);for(const i of s.slice().reverse())hs.encode(t,i);const E=t.endVector();ts.startBuffersVector(t,r.length);for(const i of r.slice().reverse())$t.encode(t,i);const n=t.endVector();return ts.startRecordBatch(t),ts.addLength(t,BigInt(e.length)),ts.addNodes(t,E),ts.addBuffers(t,n),ts.endRecordBatch(t)}function Lu(t,e){const s=Ot.encode(t,e.data);return sr.startDictionaryBatch(t),sr.addId(t,BigInt(e.id)),sr.addIsDelta(t,e.isDelta),sr.addData(t,s),sr.endDictionaryBatch(t)}function du(t,e){return dA.createFieldNode(t,BigInt(e.length),BigInt(e.nullCount))}function Cu(t,e){return LA.createBuffer(t,BigInt(e.offset),BigInt(e.length))}const fu=(()=>{const t=new ArrayBuffer(2);return new DataView(t).setInt16(0,256,!0),new Int16Array(t)[0]===256})(),To=t=>`Expected ${ne[t]} Message in stream, but was null or length 0.`,oo=t=>`Header pointer of flatbuffer-encoded ${ne[t]} Message is null or length 0.`,rI=(t,e)=>`Expected to read ${t} metadata bytes, but only read ${e}.`,EI=(t,e)=>`Expected to read ${t} bytes for message body, but only read ${e}.`;class nI{constructor(e){this.source=e instanceof bn?e:new bn(e)}[Symbol.iterator](){return this}next(){let e;return(e=this.readMetadataLength()).done||e.value===-1&&(e=this.readMetadataLength()).done||(e=this.readMetadata(e.value)).done?pe:e}throw(e){return this.source.throw(e)}return(e){return this.source.return(e)}readMessage(e){let s;if((s=this.next()).done)return null;if(e!=null&&s.value.headerType!==e)throw new Error(To(e));return s.value}readMessageBody(e){if(e<=0)return new Uint8Array(0);const s=te(this.source.read(e));if(s.byteLength<e)throw new Error(EI(e,s.byteLength));return s.byteOffset%8===0&&s.byteOffset+s.byteLength<=s.buffer.byteLength?s:s.slice()}readSchema(e=!1){const s=ne.Schema,r=this.readMessage(s),E=r==null?void 0:r.header();if(e&&!E)throw new Error(oo(s));return E}readMetadataLength(){const e=this.source.read(ri),s=e&&new Mr(e),r=(s==null?void 0:s.readInt32(0))||0;return{done:r===0,value:r}}readMetadata(e){const s=this.source.read(e);if(!s)return pe;if(s.byteLength<e)throw new Error(rI(e,s.byteLength));return{done:!1,value:ke.decode(s)}}}class hu{constructor(e,s){this.source=e instanceof mr?e:SA(e)?new gn(e,s):new mr(e)}[Symbol.asyncIterator](){return this}next(){return $(this,void 0,void 0,function*(){let e;return(e=yield this.readMetadataLength()).done||e.value===-1&&(e=yield this.readMetadataLength()).done||(e=yield this.readMetadata(e.value)).done?pe:e})}throw(e){return $(this,void 0,void 0,function*(){return yield this.source.throw(e)})}return(e){return $(this,void 0,void 0,function*(){return yield this.source.return(e)})}readMessage(e){return $(this,void 0,void 0,function*(){let s;if((s=yield this.next()).done)return null;if(e!=null&&s.value.headerType!==e)throw new Error(To(e));return s.value})}readMessageBody(e){return $(this,void 0,void 0,function*(){if(e<=0)return new Uint8Array(0);const s=te(yield this.source.read(e));if(s.byteLength<e)throw new Error(EI(e,s.byteLength));return s.byteOffset%8===0&&s.byteOffset+s.byteLength<=s.buffer.byteLength?s:s.slice()})}readSchema(){return $(this,arguments,void 0,function*(e=!1){const s=ne.Schema,r=yield this.readMessage(s),E=r==null?void 0:r.header();if(e&&!E)throw new Error(oo(s));return E})}readMetadataLength(){return $(this,void 0,void 0,function*(){const e=yield this.source.read(ri),s=e&&new Mr(e),r=(s==null?void 0:s.readInt32(0))||0;return{done:r===0,value:r}})}readMetadata(e){return $(this,void 0,void 0,function*(){const s=yield this.source.read(e);if(!s)return pe;if(s.byteLength<e)throw new Error(rI(e,s.byteLength));return{done:!1,value:ke.decode(s)}})}}class Du extends nI{constructor(e){super(new Uint8Array(0)),this._schema=!1,this._body=[],this._batchIndex=0,this._dictionaryIndex=0,this._json=e instanceof ca?e:new ca(e)}next(){const{_json:e}=this;if(!this._schema)return this._schema=!0,{done:!1,value:ke.fromJSON(e.schema,ne.Schema)};if(this._dictionaryIndex<e.dictionaries.length){const s=e.dictionaries[this._dictionaryIndex++];return this._body=s.data.columns,{done:!1,value:ke.fromJSON(s,ne.DictionaryBatch)}}if(this._batchIndex<e.batches.length){const s=e.batches[this._batchIndex++];return this._body=s.columns,{done:!1,value:ke.fromJSON(s,ne.RecordBatch)}}return this._body=[],pe}readMessageBody(e){return s(this._body);function s(r){return(r||[]).reduce((E,n)=>[...E,...n.VALIDITY&&[n.VALIDITY]||[],...n.TYPE_ID&&[n.TYPE_ID]||[],...n.OFFSET&&[n.OFFSET]||[],...n.DATA&&[n.DATA]||[],...s(n.children)],[])}}readMessage(e){let s;if((s=this.next()).done)return null;if(e!=null&&s.value.headerType!==e)throw new Error(To(e));return s.value}readSchema(){const e=ne.Schema,s=this.readMessage(e),r=s==null?void 0:s.header();if(!s||!r)throw new Error(oo(e));return r}}const ri=4,dT="ARROW1",uE=new Uint8Array(dT.length);for(let t=0;t<dT.length;t+=1)uE[t]=dT.codePointAt(t);function ao(t,e=0){for(let s=-1,r=uE.length;++s<r;)if(uE[s]!==t[e+s])return!1;return!0}const DE=uE.length,iI=DE+ri,pu=DE*2+ri;class dt extends to{constructor(e){super(),this._impl=e}get closed(){return this._impl.closed}get schema(){return this._impl.schema}get autoDestroy(){return this._impl.autoDestroy}get dictionaries(){return this._impl.dictionaries}get numDictionaries(){return this._impl.numDictionaries}get numRecordBatches(){return this._impl.numRecordBatches}get footer(){return this._impl.isFile()?this._impl.footer:null}isSync(){return this._impl.isSync()}isAsync(){return this._impl.isAsync()}isFile(){return this._impl.isFile()}isStream(){return this._impl.isStream()}next(){return this._impl.next()}throw(e){return this._impl.throw(e)}return(e){return this._impl.return(e)}cancel(){return this._impl.cancel()}reset(e){return this._impl.reset(e),this._DOMStream=void 0,this._nodeStream=void 0,this}open(e){const s=this._impl.open(e);return xs(s)?s.then(()=>this):this}readRecordBatch(e){return this._impl.isFile()?this._impl.readRecordBatch(e):null}[Symbol.iterator](){return this._impl[Symbol.iterator]()}[Symbol.asyncIterator](){return this._impl[Symbol.asyncIterator]()}toDOMStream(){return Nt.toDOMStream(this.isSync()?{[Symbol.iterator]:()=>this}:{[Symbol.asyncIterator]:()=>this})}toNodeStream(){return Nt.toNodeStream(this.isSync()?{[Symbol.iterator]:()=>this}:{[Symbol.asyncIterator]:()=>this},{objectMode:!0})}static throughNode(e){throw new Error('"throughNode" not available in this environment')}static throughDOM(e,s){throw new Error('"throughDOM" not available in this environment')}static from(e){return e instanceof dt?e:AT(e)?yu(e):SA(e)?Fu(e):xs(e)?$(this,void 0,void 0,function*(){return yield dt.from(yield e)}):IA(e)||XT(e)||OA(e)||Gr(e)?Bu(new mr(e)):mu(new bn(e))}static readAll(e){return e instanceof dt?e.isSync()?pa(e):Pa(e):AT(e)||ArrayBuffer.isView(e)||dE(e)||AA(e)?pa(e):Pa(e)}}class Hn extends dt{constructor(e){super(e),this._impl=e}readAll(){return[...this]}[Symbol.iterator](){return this._impl[Symbol.iterator]()}[Symbol.asyncIterator](){return Kt(this,arguments,function*(){yield Z(yield*VE(Vs(this[Symbol.iterator]())))})}}class Yn extends dt{constructor(e){super(e),this._impl=e}readAll(){return $(this,void 0,void 0,function*(){var e,s,r,E;const n=new Array;try{for(var i=!0,T=Vs(this),o;o=yield T.next(),e=o.done,!e;i=!0){E=o.value,i=!1;const a=E;n.push(a)}}catch(a){s={error:a}}finally{try{!i&&!e&&(r=T.return)&&(yield r.call(T))}finally{if(s)throw s.error}}return n})}[Symbol.iterator](){throw new Error("AsyncRecordBatchStreamReader is not Iterable")}[Symbol.asyncIterator](){return this._impl[Symbol.asyncIterator]()}}class TI extends Hn{constructor(e){super(e),this._impl=e}}class Pu extends Yn{constructor(e){super(e),this._impl=e}}class oI{get numDictionaries(){return this._dictionaryIndex}get numRecordBatches(){return this._recordBatchIndex}constructor(e=new Map){this.closed=!1,this.autoDestroy=!0,this._dictionaryIndex=0,this._recordBatchIndex=0,this.dictionaries=e}isSync(){return!1}isAsync(){return!1}isFile(){return!1}isStream(){return!1}reset(e){return this._dictionaryIndex=0,this._recordBatchIndex=0,this.schema=e,this.dictionaries=new Map,this}_loadRecordBatch(e,s){const r=this._loadVectors(e,s,this.schema.fields),E=ee({type:new Je(this.schema.fields),length:e.length,children:r});return new st(this.schema,E)}_loadDictionaryBatch(e,s){const{id:r,isDelta:E}=e,{dictionaries:n,schema:i}=this,T=n.get(r),o=i.dictionaries.get(r),a=this._loadVectors(e.data,s,[o]);return(T&&E?T.concat(new Te(a)):new Te(a)).memoize()}_loadVectors(e,s,r){return new QS(s,e.nodes,e.buffers,this.dictionaries,this.schema.metadataVersion).visitMany(r)}}class vn extends oI{constructor(e,s){super(s),this._reader=AT(e)?new Du(this._handle=e):new nI(this._handle=e)}isSync(){return!0}isStream(){return!0}[Symbol.iterator](){return this}cancel(){!this.closed&&(this.closed=!0)&&(this.reset()._reader.return(),this._reader=null,this.dictionaries=null)}open(e){return this.closed||(this.autoDestroy=RI(this,e),this.schema||(this.schema=this._reader.readSchema())||this.cancel()),this}throw(e){return!this.closed&&this.autoDestroy&&(this.closed=!0)?this.reset()._reader.throw(e):pe}return(e){return!this.closed&&this.autoDestroy&&(this.closed=!0)?this.reset()._reader.return(e):pe}next(){if(this.closed)return pe;let e;const{_reader:s}=this;for(;e=this._readNextMessageAndValidate();)if(e.isSchema())this.reset(e.header());else if(e.isRecordBatch()){this._recordBatchIndex++;const r=e.header(),E=s.readMessageBody(e.bodyLength);return{done:!1,value:this._loadRecordBatch(r,E)}}else if(e.isDictionaryBatch()){this._dictionaryIndex++;const r=e.header(),E=s.readMessageBody(e.bodyLength),n=this._loadDictionaryBatch(r,E);this.dictionaries.set(r.id,n)}return this.schema&&this._recordBatchIndex===0?(this._recordBatchIndex++,{done:!1,value:new io(this.schema)}):this.return()}_readNextMessageAndValidate(e){return this._reader.readMessage(e)}}class wn extends oI{constructor(e,s){super(s),this._reader=new hu(this._handle=e)}isAsync(){return!0}isStream(){return!0}[Symbol.asyncIterator](){return this}cancel(){return $(this,void 0,void 0,function*(){!this.closed&&(this.closed=!0)&&(yield this.reset()._reader.return(),this._reader=null,this.dictionaries=null)})}open(e){return $(this,void 0,void 0,function*(){return this.closed||(this.autoDestroy=RI(this,e),this.schema||(this.schema=yield this._reader.readSchema())||(yield this.cancel())),this})}throw(e){return $(this,void 0,void 0,function*(){return!this.closed&&this.autoDestroy&&(this.closed=!0)?yield this.reset()._reader.throw(e):pe})}return(e){return $(this,void 0,void 0,function*(){return!this.closed&&this.autoDestroy&&(this.closed=!0)?yield this.reset()._reader.return(e):pe})}next(){return $(this,void 0,void 0,function*(){if(this.closed)return pe;let e;const{_reader:s}=this;for(;e=yield this._readNextMessageAndValidate();)if(e.isSchema())yield this.reset(e.header());else if(e.isRecordBatch()){this._recordBatchIndex++;const r=e.header(),E=yield s.readMessageBody(e.bodyLength);return{done:!1,value:this._loadRecordBatch(r,E)}}else if(e.isDictionaryBatch()){this._dictionaryIndex++;const r=e.header(),E=yield s.readMessageBody(e.bodyLength),n=this._loadDictionaryBatch(r,E);this.dictionaries.set(r.id,n)}return this.schema&&this._recordBatchIndex===0?(this._recordBatchIndex++,{done:!1,value:new io(this.schema)}):yield this.return()})}_readNextMessageAndValidate(e){return $(this,void 0,void 0,function*(){return yield this._reader.readMessage(e)})}}class aI extends vn{get footer(){return this._footer}get numDictionaries(){return this._footer?this._footer.numDictionaries:0}get numRecordBatches(){return this._footer?this._footer.numRecordBatches:0}constructor(e,s){super(e instanceof ua?e:new ua(e),s)}isSync(){return!0}isFile(){return!0}open(e){if(!this.closed&&!this._footer){this.schema=(this._footer=this._readFooter()).schema;for(const s of this._footer.dictionaryBatches())s&&this._readDictionaryBatch(this._dictionaryIndex++)}return super.open(e)}readRecordBatch(e){var s;if(this.closed)return null;this._footer||this.open();const r=(s=this._footer)===null||s===void 0?void 0:s.getRecordBatch(e);if(r&&this._handle.seek(r.offset)){const E=this._reader.readMessage(ne.RecordBatch);if(E!=null&&E.isRecordBatch()){const n=E.header(),i=this._reader.readMessageBody(E.bodyLength);return this._loadRecordBatch(n,i)}}return null}_readDictionaryBatch(e){var s;const r=(s=this._footer)===null||s===void 0?void 0:s.getDictionaryBatch(e);if(r&&this._handle.seek(r.offset)){const E=this._reader.readMessage(ne.DictionaryBatch);if(E!=null&&E.isDictionaryBatch()){const n=E.header(),i=this._reader.readMessageBody(E.bodyLength),T=this._loadDictionaryBatch(n,i);this.dictionaries.set(n.id,T)}}}_readFooter(){const{_handle:e}=this,s=e.size-iI,r=e.readInt32(s),E=e.readAt(s-r,r);return cE.decode(E)}_readNextMessageAndValidate(e){var s;if(this._footer||this.open(),this._footer&&this._recordBatchIndex<this.numRecordBatches){const r=(s=this._footer)===null||s===void 0?void 0:s.getRecordBatch(this._recordBatchIndex);if(r&&this._handle.seek(r.offset))return this._reader.readMessage(e)}return null}}class Mu extends wn{get footer(){return this._footer}get numDictionaries(){return this._footer?this._footer.numDictionaries:0}get numRecordBatches(){return this._footer?this._footer.numRecordBatches:0}constructor(e,...s){const r=typeof s[0]!="number"?s.shift():void 0,E=s[0]instanceof Map?s.shift():void 0;super(e instanceof gn?e:new gn(e,r),E)}isFile(){return!0}isAsync(){return!0}open(e){const s=Object.create(null,{open:{get:()=>super.open}});return $(this,void 0,void 0,function*(){if(!this.closed&&!this._footer){this.schema=(this._footer=yield this._readFooter()).schema;for(const r of this._footer.dictionaryBatches())r&&(yield this._readDictionaryBatch(this._dictionaryIndex++))}return yield s.open.call(this,e)})}readRecordBatch(e){return $(this,void 0,void 0,function*(){var s;if(this.closed)return null;this._footer||(yield this.open());const r=(s=this._footer)===null||s===void 0?void 0:s.getRecordBatch(e);if(r&&(yield this._handle.seek(r.offset))){const E=yield this._reader.readMessage(ne.RecordBatch);if(E!=null&&E.isRecordBatch()){const n=E.header(),i=yield this._reader.readMessageBody(E.bodyLength);return this._loadRecordBatch(n,i)}}return null})}_readDictionaryBatch(e){return $(this,void 0,void 0,function*(){var s;const r=(s=this._footer)===null||s===void 0?void 0:s.getDictionaryBatch(e);if(r&&(yield this._handle.seek(r.offset))){const E=yield this._reader.readMessage(ne.DictionaryBatch);if(E!=null&&E.isDictionaryBatch()){const n=E.header(),i=yield this._reader.readMessageBody(E.bodyLength),T=this._loadDictionaryBatch(n,i);this.dictionaries.set(n.id,T)}}})}_readFooter(){return $(this,void 0,void 0,function*(){const{_handle:e}=this;e._pending&&(yield e._pending);const s=e.size-iI,r=yield e.readInt32(s),E=yield e.readAt(s-r,r);return cE.decode(E)})}_readNextMessageAndValidate(e){return $(this,void 0,void 0,function*(){if(this._footer||(yield this.open()),this._footer&&this._recordBatchIndex<this.numRecordBatches){const s=this._footer.getRecordBatch(this._recordBatchIndex);if(s&&(yield this._handle.seek(s.offset)))return yield this._reader.readMessage(e)}return null})}}class Uu extends vn{constructor(e,s){super(e,s)}_loadVectors(e,s,r){return new Wc(s,e.nodes,e.buffers,this.dictionaries,this.schema.metadataVersion).visitMany(r)}}function RI(t,e){return e&&typeof e.autoDestroy=="boolean"?e.autoDestroy:t.autoDestroy}function*pa(t){const e=dt.from(t);try{if(!e.open({autoDestroy:!1}).closed)do yield e;while(!e.reset().open().closed)}finally{e.cancel()}}function Pa(t){return Kt(this,arguments,function*(){const s=yield Z(dt.from(t));try{if(!(yield Z(s.open({autoDestroy:!1}))).closed)do yield yield Z(s);while(!(yield Z(s.reset().open())).closed)}finally{yield Z(s.cancel())}})}function yu(t){return new Hn(new Uu(t))}function mu(t){const e=t.peek(DE+7&-8);return e&&e.byteLength>=4?ao(e)?new TI(new aI(t.read())):new Hn(new vn(t)):new Hn(new vn(function*(){}()))}function Bu(t){return $(this,void 0,void 0,function*(){const e=yield t.peek(DE+7&-8);return e&&e.byteLength>=4?ao(e)?new TI(new aI(yield t.read())):new Yn(new wn(t)):new Yn(new wn(function(){return Kt(this,arguments,function*(){})}()))})}function Fu(t){return $(this,void 0,void 0,function*(){const{size:e}=yield t.stat(),s=new gn(t,e);return e>=pu&&ao(yield s.readAt(0,DE+7&-8))?new Pu(new Mu(s)):new Yn(new wn(s))})}class Me extends z{static assemble(...e){const s=E=>E.flatMap(n=>Array.isArray(n)?s(n):n instanceof st?n.data.children:n.data),r=new Me;return r.visitMany(s(e)),r}constructor(){super(),this._byteLength=0,this._nodes=[],this._buffers=[],this._bufferRegions=[]}visit(e){if(e instanceof Te)return this.visitMany(e.data),this;const{type:s}=e;if(!y.isDictionary(s)){const{length:r}=e;if(r>2147483647)throw new RangeError("Cannot write arrays larger than 2^31 - 1 in length");if(y.isUnion(s))this.nodes.push(new hs(r,0));else{const{nullCount:E}=e;y.isNull(s)||Mt.call(this,E<=0?new Uint8Array(0):yn(e.offset,r,e.nullBitmap)),this.nodes.push(new hs(r,E))}}return super.visit(e)}visitNull(e){return this}visitDictionary(e){return this.visit(e.clone(e.type.indices))}get nodes(){return this._nodes}get buffers(){return this._buffers}get byteLength(){return this._byteLength}get bufferRegions(){return this._bufferRegions}}function Mt(t){const e=t.byteLength+7&-8;return this.buffers.push(t),this.bufferRegions.push(new $t(this._byteLength,e)),this._byteLength+=e,this}function Gu(t){var e;const{type:s,length:r,typeIds:E,valueOffsets:n}=t;if(Mt.call(this,E),s.mode===we.Sparse)return CT.call(this,t);if(s.mode===we.Dense){if(t.offset<=0)return Mt.call(this,n),CT.call(this,t);{const i=new Int32Array(r),T=Object.create(null),o=Object.create(null);for(let a,R,A=-1;++A<r;)(a=E[A])!==void 0&&((R=T[a])===void 0&&(R=T[a]=n[A]),i[A]=n[A]-R,o[a]=((e=o[a])!==null&&e!==void 0?e:0)+1);Mt.call(this,i),this.visitMany(t.children.map((a,R)=>{const A=s.typeIds[R],l=T[A],u=o[A];return a.slice(l,Math.min(r,u))}))}}return this}function bu(t){let e;return t.nullCount>=t.length?Mt.call(this,new Uint8Array(0)):(e=t.values)instanceof Uint8Array?Mt.call(this,yn(t.offset,t.length,e)):Mt.call(this,mn(t.values))}function Ss(t){return Mt.call(this,t.values.subarray(0,t.length*t.stride))}function Ei(t){const{length:e,values:s,valueOffsets:r}=t,E=ce(r[0]),n=ce(r[e]),i=Math.min(n-E,s.byteLength-E);return Mt.call(this,NA(-E,e+1,r)),Mt.call(this,s.subarray(E,E+i)),this}function Ro(t){const{length:e,valueOffsets:s}=t;if(s){const{[0]:r,[e]:E}=s;return Mt.call(this,NA(-r,e+1,s)),this.visit(t.children[0].slice(r,E-r))}return this.visit(t.children[0])}function CT(t){return this.visitMany(t.type.children.map((e,s)=>t.children[s]).filter(Boolean))[0]}Me.prototype.visitBool=bu;Me.prototype.visitInt=Ss;Me.prototype.visitFloat=Ss;Me.prototype.visitUtf8=Ei;Me.prototype.visitLargeUtf8=Ei;Me.prototype.visitBinary=Ei;Me.prototype.visitLargeBinary=Ei;Me.prototype.visitFixedSizeBinary=Ss;Me.prototype.visitDate=Ss;Me.prototype.visitTimestamp=Ss;Me.prototype.visitTime=Ss;Me.prototype.visitDecimal=Ss;Me.prototype.visitList=Ro;Me.prototype.visitStruct=CT;Me.prototype.visitUnion=Gu;Me.prototype.visitInterval=Ss;Me.prototype.visitDuration=Ss;Me.prototype.visitFixedSizeList=Ro;Me.prototype.visitMap=Ro;class AI extends to{static throughNode(e){throw new Error('"throughNode" not available in this environment')}static throughDOM(e,s){throw new Error('"throughDOM" not available in this environment')}constructor(e){super(),this._position=0,this._started=!1,this._sink=new kE,this._schema=null,this._dictionaryBlocks=[],this._recordBatchBlocks=[],this._seenDictionaries=new Map,this._dictionaryDeltaOffsets=new Map,rt(e)||(e={autoDestroy:!0,writeLegacyIpcFormat:!1}),this._autoDestroy=typeof e.autoDestroy=="boolean"?e.autoDestroy:!0,this._writeLegacyIpcFormat=typeof e.writeLegacyIpcFormat=="boolean"?e.writeLegacyIpcFormat:!1}toString(e=!1){return this._sink.toString(e)}toUint8Array(e=!1){return this._sink.toUint8Array(e)}writeAll(e){return xs(e)?e.then(s=>this.writeAll(s)):Gr(e)?Oo(this,e):Io(this,e)}get closed(){return this._sink.closed}[Symbol.asyncIterator](){return this._sink[Symbol.asyncIterator]()}toDOMStream(e){return this._sink.toDOMStream(e)}toNodeStream(e){return this._sink.toNodeStream(e)}close(){return this.reset()._sink.close()}abort(e){return this.reset()._sink.abort(e)}finish(){return this._autoDestroy?this.close():this.reset(this._sink,this._schema),this}reset(e=this._sink,s=null){return e===this._sink||e instanceof kE?this._sink=e:(this._sink=new kE,e&&SN(e)?this.toDOMStream({type:"bytes"}).pipeTo(e):e&&IN(e)&&this.toNodeStream({objectMode:!1}).pipe(e)),this._started&&this._schema&&this._writeFooter(this._schema),this._started=!1,this._dictionaryBlocks=[],this._recordBatchBlocks=[],this._seenDictionaries=new Map,this._dictionaryDeltaOffsets=new Map,(!s||!LT(s,this._schema))&&(s==null?(this._position=0,this._schema=null):(this._started=!0,this._schema=s,this._writeSchema(s))),this}write(e){let s=null;if(this._sink){if(e==null)return this.finish()&&void 0;if(e instanceof $e&&!(s=e.schema))return this.finish()&&void 0;if(e instanceof st&&!(s=e.schema))return this.finish()&&void 0}else throw new Error("RecordBatchWriter is closed");if(s&&!LT(s,this._schema)){if(this._started&&this._autoDestroy)return this.close();this.reset(this._sink,s)}e instanceof st?e instanceof io||this._writeRecordBatch(e):e instanceof $e?this.writeAll(e.batches):dE(e)&&this.writeAll(e)}_writeMessage(e,s=8){const r=s-1,E=ke.encode(e),n=E.byteLength,i=this._writeLegacyIpcFormat?4:8,T=n+i+r&~r,o=T-n-i;return e.headerType===ne.RecordBatch?this._recordBatchBlocks.push(new Cs(T,e.bodyLength,this._position)):e.headerType===ne.DictionaryBatch&&this._dictionaryBlocks.push(new Cs(T,e.bodyLength,this._position)),this._writeLegacyIpcFormat||this._write(Int32Array.of(-1)),this._write(Int32Array.of(T-i)),n>0&&this._write(E),this._writePadding(o)}_write(e){if(this._started){const s=te(e);s&&s.byteLength>0&&(this._sink.write(s),this._position+=s.byteLength)}return this}_writeSchema(e){return this._writeMessage(ke.from(e))}_writeFooter(e){return this._writeLegacyIpcFormat?this._write(Int32Array.of(0)):this._write(Int32Array.of(-1,0))}_writeMagic(){return this._write(uE)}_writePadding(e){return e>0?this._write(new Uint8Array(e)):this}_writeRecordBatch(e){const{byteLength:s,nodes:r,bufferRegions:E,buffers:n}=Me.assemble(e),i=new Ot(e.numRows,r,E),T=ke.from(i,s);return this._writeDictionaries(e)._writeMessage(T)._writeBodyBuffers(n)}_writeDictionaryBatch(e,s,r=!1){const{byteLength:E,nodes:n,bufferRegions:i,buffers:T}=Me.assemble(new Te([e])),o=new Ot(e.length,n,i),a=new jt(o,s,r),R=ke.from(a,E);return this._writeMessage(R)._writeBodyBuffers(T)}_writeBodyBuffers(e){let s,r,E;for(let n=-1,i=e.length;++n<i;)(s=e[n])&&(r=s.byteLength)>0&&(this._write(s),(E=(r+7&-8)-r)>0&&this._writePadding(E));return this}_writeDictionaries(e){var s,r;for(const[E,n]of e.dictionaries){const i=(s=n==null?void 0:n.data)!==null&&s!==void 0?s:[],T=this._seenDictionaries.get(E),o=(r=this._dictionaryDeltaOffsets.get(E))!==null&&r!==void 0?r:0;if(!T||T.data[0]!==i[0])for(const[a,R]of i.entries())this._writeDictionaryBatch(R,E,a>0);else if(o<i.length)for(const a of i.slice(o))this._writeDictionaryBatch(a,E,!0);this._seenDictionaries.set(E,n),this._dictionaryDeltaOffsets.set(E,i.length)}return this}}class Ao extends AI{static writeAll(e,s){const r=new Ao(s);return xs(e)?e.then(E=>r.writeAll(E)):Gr(e)?Oo(r,e):Io(r,e)}}class So extends AI{static writeAll(e){const s=new So;return xs(e)?e.then(r=>s.writeAll(r)):Gr(e)?Oo(s,e):Io(s,e)}constructor(){super(),this._autoDestroy=!0}_writeSchema(e){return this._writeMagic()._writePadding(2)}_writeDictionaryBatch(e,s,r=!1){if(!r&&this._seenDictionaries.has(s))throw new Error("The Arrow File format does not support replacement dictionaries. ");return super._writeDictionaryBatch(e,s,r)}_writeFooter(e){const s=cE.encode(new cE(e,Ue.V5,this._recordBatchBlocks,this._dictionaryBlocks));return super._writeFooter(e)._write(s)._write(Int32Array.of(s.byteLength))._writeMagic()}}function Io(t,e){let s=e;e instanceof $e&&(s=e.batches,t.reset(void 0,e.schema));for(const r of s)t.write(r);return t.finish()}function Oo(t,e){return $(this,void 0,void 0,function*(){var s,r,E,n,i,T,o;try{for(s=!0,r=Vs(e);E=yield r.next(),n=E.done,!n;s=!0){o=E.value,s=!1;const a=o;t.write(a)}}catch(a){i={error:a}}finally{try{!s&&!n&&(T=r.return)&&(yield T.call(r))}finally{if(i)throw i.error}}return t.finish()})}function gu(t,e="stream"){return(e==="stream"?Ao:So).writeAll(t).toUint8Array(!0)}var Hu=Object.create,SI=Object.defineProperty,Yu=Object.getOwnPropertyDescriptor,vu=Object.getOwnPropertyNames,wu=Object.getPrototypeOf,Vu=Object.prototype.hasOwnProperty,Wu=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),xu=(t,e,s,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let E of vu(e))!Vu.call(t,E)&&E!==s&&SI(t,E,{get:()=>e[E],enumerable:!(r=Yu(e,E))||r.enumerable});return t},Xu=(t,e,s)=>(s=t!=null?Hu(wu(t)):{},xu(!t||!t.__esModule?SI(s,"default",{value:t,enumerable:!0}):s,t)),Ku=Wu((t,e)=>{e.exports=Worker}),$u=(t=>(t[t.UNDEFINED=0]="UNDEFINED",t[t.AUTOMATIC=1]="AUTOMATIC",t[t.READ_ONLY=2]="READ_ONLY",t[t.READ_WRITE=3]="READ_WRITE",t))($u||{}),Ju=(t=>(t[t.IDENTIFIER=0]="IDENTIFIER",t[t.NUMERIC_CONSTANT=1]="NUMERIC_CONSTANT",t[t.STRING_CONSTANT=2]="STRING_CONSTANT",t[t.OPERATOR=3]="OPERATOR",t[t.KEYWORD=4]="KEYWORD",t[t.COMMENT=5]="COMMENT",t))(Ju||{}),ku=(t=>(t[t.NONE=0]="NONE",t[t.DEBUG=1]="DEBUG",t[t.INFO=2]="INFO",t[t.WARNING=3]="WARNING",t[t.ERROR=4]="ERROR",t))(ku||{}),qu=(t=>(t[t.NONE=0]="NONE",t[t.CONNECT=1]="CONNECT",t[t.DISCONNECT=2]="DISCONNECT",t[t.OPEN=3]="OPEN",t[t.QUERY=4]="QUERY",t[t.INSTANTIATE=5]="INSTANTIATE",t))(qu||{}),Qu=(t=>(t[t.NONE=0]="NONE",t[t.OK=1]="OK",t[t.ERROR=2]="ERROR",t[t.START=3]="START",t[t.RUN=4]="RUN",t[t.CAPTURE=5]="CAPTURE",t))(Qu||{}),ju=(t=>(t[t.NONE=0]="NONE",t[t.WEB_WORKER=1]="WEB_WORKER",t[t.NODE_WORKER=2]="NODE_WORKER",t[t.BINDINGS=3]="BINDINGS",t[t.ASYNC_DUCKDB=4]="ASYNC_DUCKDB",t))(ju||{}),Zu=class{constructor(t=2){this.level=t}log(t){t.level>=this.level&&console.log(t)}},zu=(t=>(t[t.SUCCESS=0]="SUCCESS",t))(zu||{}),e_=class{constructor(t,e){this._bindings=t,this._conn=e}get bindings(){return this._bindings}async close(){return this._bindings.disconnect(this._conn)}useUnsafe(t){return t(this._bindings,this._conn)}async query(t){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:t});let e=await this._bindings.runQuery(this._conn,t),s=dt.from(e);return console.assert(s.isSync(),"Reader is not sync"),console.assert(s.isFile(),"Reader is not file"),new $e(s)}async send(t){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:t});let e=await this._bindings.startPendingQuery(this._conn,t);for(;e==null;)e=await this._bindings.pollPendingQuery(this._conn);let s=new II(this._bindings,this._conn,e),r=await dt.from(s);return console.assert(r.isAsync()),console.assert(r.isStream()),r}async cancelSent(){return await this._bindings.cancelPendingQuery(this._conn)}async getTableNames(t){return await this._bindings.getTableNames(this._conn,t)}async prepare(t){let e=await this._bindings.createPrepared(this._conn,t);return new t_(this._bindings,this._conn,e)}async insertArrowTable(t,e){let s=gu(t,"stream");await this.insertArrowFromIPCStream(s,e)}async insertArrowFromIPCStream(t,e){await this._bindings.insertArrowFromIPCStream(this._conn,t,e)}async insertCSVFromPath(t,e){await this._bindings.insertCSVFromPath(this._conn,t,e)}async insertJSONFromPath(t,e){await this._bindings.insertJSONFromPath(this._conn,t,e)}},II=class{constructor(t,e,s){this.db=t,this.conn=e,this.header=s,this._first=!0,this._depleted=!1,this._inFlight=null}async next(){if(this._first)return this._first=!1,{done:!1,value:this.header};if(this._depleted)return{done:!0,value:null};let t;return this._inFlight!=null?(t=await this._inFlight,this._inFlight=null):t=await this.db.fetchQueryResults(this.conn),this._depleted=t.length==0,this._depleted||(this._inFlight=this.db.fetchQueryResults(this.conn)),{done:this._depleted,value:t}}[Symbol.asyncIterator](){return this}},t_=class{constructor(t,e,s){this.bindings=t,this.connectionId=e,this.statementId=s}async close(){await this.bindings.closePrepared(this.connectionId,this.statementId)}async query(...t){let e=await this.bindings.runPrepared(this.connectionId,this.statementId,t),s=dt.from(e);return console.assert(s.isSync()),console.assert(s.isFile()),new $e(s)}async send(...t){let e=await this.bindings.sendPrepared(this.connectionId,this.statementId,t),s=new II(this.bindings,this.connectionId,e),r=await dt.from(s);return console.assert(r.isAsync()),console.assert(r.isStream()),r}},s_=(t=>(t.CANCEL_PENDING_QUERY="CANCEL_PENDING_QUERY",t.CLOSE_PREPARED="CLOSE_PREPARED",t.COLLECT_FILE_STATISTICS="COLLECT_FILE_STATISTICS",t.CONNECT="CONNECT",t.COPY_FILE_TO_BUFFER="COPY_FILE_TO_BUFFER",t.COPY_FILE_TO_PATH="COPY_FILE_TO_PATH",t.CREATE_PREPARED="CREATE_PREPARED",t.DISCONNECT="DISCONNECT",t.DROP_FILE="DROP_FILE",t.DROP_FILES="DROP_FILES",t.EXPORT_FILE_STATISTICS="EXPORT_FILE_STATISTICS",t.FETCH_QUERY_RESULTS="FETCH_QUERY_RESULTS",t.FLUSH_FILES="FLUSH_FILES",t.GET_FEATURE_FLAGS="GET_FEATURE_FLAGS",t.GET_TABLE_NAMES="GET_TABLE_NAMES",t.GET_VERSION="GET_VERSION",t.GLOB_FILE_INFOS="GLOB_FILE_INFOS",t.INSERT_ARROW_FROM_IPC_STREAM="INSERT_ARROW_FROM_IPC_STREAM",t.INSERT_CSV_FROM_PATH="IMPORT_CSV_FROM_PATH",t.INSERT_JSON_FROM_PATH="IMPORT_JSON_FROM_PATH",t.INSTANTIATE="INSTANTIATE",t.OPEN="OPEN",t.PING="PING",t.POLL_PENDING_QUERY="POLL_PENDING_QUERY",t.REGISTER_FILE_BUFFER="REGISTER_FILE_BUFFER",t.REGISTER_FILE_HANDLE="REGISTER_FILE_HANDLE",t.REGISTER_FILE_URL="REGISTER_FILE_URL",t.RESET="RESET",t.RUN_PREPARED="RUN_PREPARED",t.RUN_QUERY="RUN_QUERY",t.SEND_PREPARED="SEND_PREPARED",t.START_PENDING_QUERY="START_PENDING_QUERY",t.TOKENIZE="TOKENIZE",t))(s_||{}),r_=(t=>(t.CONNECTION_INFO="CONNECTION_INFO",t.ERROR="ERROR",t.FEATURE_FLAGS="FEATURE_FLAGS",t.FILE_BUFFER="FILE_BUFFER",t.FILE_INFOS="FILE_INFOS",t.FILE_SIZE="FILE_SIZE",t.FILE_STATISTICS="FILE_STATISTICS",t.INSTANTIATE_PROGRESS="INSTANTIATE_PROGRESS",t.LOG="LOG",t.OK="OK",t.PREPARED_STATEMENT_ID="PREPARED_STATEMENT_ID",t.QUERY_PLAN="QUERY_PLAN",t.QUERY_RESULT="QUERY_RESULT",t.QUERY_RESULT_CHUNK="QUERY_RESULT_CHUNK",t.QUERY_RESULT_HEADER="QUERY_RESULT_HEADER",t.QUERY_RESULT_HEADER_OR_NULL="QUERY_RESULT_HEADER_OR_NULL",t.REGISTERED_FILE="REGISTERED_FILE",t.SCRIPT_TOKENS="SCRIPT_TOKENS",t.SUCCESS="SUCCESS",t.TABLE_NAMES="TABLE_NAMES",t.VERSION_STRING="VERSION_STRING",t))(r_||{}),Ee=class{constructor(t,e){this.promiseResolver=()=>{},this.promiseRejecter=()=>{},this.type=t,this.data=e,this.promise=new Promise((s,r)=>{this.promiseResolver=s,this.promiseRejecter=r})}};function jE(t){switch(t.typeId){case S.Binary:return{sqlType:"binary"};case S.Bool:return{sqlType:"bool"};case S.Date:return{sqlType:"date"};case S.DateDay:return{sqlType:"date32[d]"};case S.DateMillisecond:return{sqlType:"date64[ms]"};case S.Decimal:{let e=t;return{sqlType:"decimal",precision:e.precision,scale:e.scale}}case S.Float:return{sqlType:"float"};case S.Float16:return{sqlType:"float16"};case S.Float32:return{sqlType:"float32"};case S.Float64:return{sqlType:"float64"};case S.Int:return{sqlType:"int32"};case S.Int16:return{sqlType:"int16"};case S.Int32:return{sqlType:"int32"};case S.Int64:return{sqlType:"int64"};case S.Uint16:return{sqlType:"uint16"};case S.Uint32:return{sqlType:"uint32"};case S.Uint64:return{sqlType:"uint64"};case S.Uint8:return{sqlType:"uint8"};case S.IntervalDayTime:return{sqlType:"interval[dt]"};case S.IntervalYearMonth:return{sqlType:"interval[m]"};case S.List:return{sqlType:"list",valueType:jE(t.valueType)};case S.FixedSizeBinary:return{sqlType:"fixedsizebinary",byteWidth:t.byteWidth};case S.Null:return{sqlType:"null"};case S.Utf8:return{sqlType:"utf8"};case S.Struct:return{sqlType:"struct",fields:t.children.map(e=>fT(e.name,e.type))};case S.Map:{let e=t;return{sqlType:"map",keyType:jE(e.keyType),valueType:jE(e.valueType)}}case S.Time:return{sqlType:"time[s]"};case S.TimeMicrosecond:return{sqlType:"time[us]"};case S.TimeMillisecond:return{sqlType:"time[ms]"};case S.TimeNanosecond:return{sqlType:"time[ns]"};case S.TimeSecond:return{sqlType:"time[s]"};case S.Timestamp:return{sqlType:"timestamp",timezone:t.timezone||void 0};case S.TimestampSecond:return{sqlType:"timestamp[s]",timezone:t.timezone||void 0};case S.TimestampMicrosecond:return{sqlType:"timestamp[us]",timezone:t.timezone||void 0};case S.TimestampNanosecond:return{sqlType:"timestamp[ns]",timezone:t.timezone||void 0};case S.TimestampMillisecond:return{sqlType:"timestamp[ms]",timezone:t.timezone||void 0}}throw new Error("unsupported arrow type: ".concat(t.toString()))}function fT(t,e){let s=jE(e);return s.name=t,s}var E_=new TextEncoder,n_=class{constructor(t,e=null){this._onInstantiationProgress=[],this._worker=null,this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{},this._nextMessageId=0,this._pendingRequests=new Map,this._logger=t,this._onMessageHandler=this.onMessage.bind(this),this._onErrorHandler=this.onError.bind(this),this._onCloseHandler=this.onClose.bind(this),e!=null&&this.attach(e)}get logger(){return this._logger}attach(t){this._worker=t,this._worker.addEventListener("message",this._onMessageHandler),this._worker.addEventListener("error",this._onErrorHandler),this._worker.addEventListener("close",this._onCloseHandler),this._workerShutdownPromise=new Promise((e,s)=>{this._workerShutdownResolver=e})}detach(){this._worker&&(this._worker.removeEventListener("message",this._onMessageHandler),this._worker.removeEventListener("error",this._onErrorHandler),this._worker.removeEventListener("close",this._onCloseHandler),this._worker=null,this._workerShutdownResolver(null),this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async terminate(){this._worker&&(this._worker.terminate(),this._worker=null,this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async postTask(t,e=[]){if(!this._worker){console.error("cannot send a message since the worker is not set!");return}let s=this._nextMessageId++;return this._pendingRequests.set(s,t),this._worker.postMessage({messageId:s,type:t.type,data:t.data},e),await t.promise}onMessage(t){var e;let s=t.data;switch(s.type){case"LOG":{this._logger.log(s.data);return}case"INSTANTIATE_PROGRESS":{for(let E of this._onInstantiationProgress)E(s.data);return}}let r=this._pendingRequests.get(s.requestId);if(!r){console.warn("unassociated response: [".concat(s.requestId,", ").concat(s.type.toString(),"]"));return}if(this._pendingRequests.delete(s.requestId),s.type=="ERROR"){let E=new Error(s.data.message);E.name=s.data.name,(e=Object.getOwnPropertyDescriptor(E,"stack"))!=null&&e.writable&&(E.stack=s.data.stack),r.promiseRejecter(E);return}switch(r.type){case"CLOSE_PREPARED":case"COLLECT_FILE_STATISTICS":case"COPY_FILE_TO_PATH":case"DISCONNECT":case"DROP_FILE":case"DROP_FILES":case"FLUSH_FILES":case"INSERT_ARROW_FROM_IPC_STREAM":case"IMPORT_CSV_FROM_PATH":case"IMPORT_JSON_FROM_PATH":case"OPEN":case"PING":case"REGISTER_FILE_BUFFER":case"REGISTER_FILE_HANDLE":case"REGISTER_FILE_URL":case"RESET":if(s.type=="OK"){r.promiseResolver(s.data);return}break;case"INSTANTIATE":if(this._onInstantiationProgress=[],s.type=="OK"){r.promiseResolver(s.data);return}break;case"GLOB_FILE_INFOS":if(s.type=="FILE_INFOS"){r.promiseResolver(s.data);return}break;case"GET_VERSION":if(s.type=="VERSION_STRING"){r.promiseResolver(s.data);return}break;case"GET_FEATURE_FLAGS":if(s.type=="FEATURE_FLAGS"){r.promiseResolver(s.data);return}break;case"GET_TABLE_NAMES":if(s.type=="TABLE_NAMES"){r.promiseResolver(s.data);return}break;case"TOKENIZE":if(s.type=="SCRIPT_TOKENS"){r.promiseResolver(s.data);return}break;case"COPY_FILE_TO_BUFFER":if(s.type=="FILE_BUFFER"){r.promiseResolver(s.data);return}break;case"EXPORT_FILE_STATISTICS":if(s.type=="FILE_STATISTICS"){r.promiseResolver(s.data);return}break;case"CONNECT":if(s.type=="CONNECTION_INFO"){r.promiseResolver(s.data);return}break;case"RUN_PREPARED":case"RUN_QUERY":if(s.type=="QUERY_RESULT"){r.promiseResolver(s.data);return}break;case"SEND_PREPARED":if(s.type=="QUERY_RESULT_HEADER"){r.promiseResolver(s.data);return}break;case"START_PENDING_QUERY":if(s.type=="QUERY_RESULT_HEADER_OR_NULL"){r.promiseResolver(s.data);return}break;case"POLL_PENDING_QUERY":if(s.type=="QUERY_RESULT_HEADER_OR_NULL"){r.promiseResolver(s.data);return}break;case"CANCEL_PENDING_QUERY":if(this._onInstantiationProgress=[],s.type=="SUCCESS"){r.promiseResolver(s.data);return}break;case"FETCH_QUERY_RESULTS":if(s.type=="QUERY_RESULT_CHUNK"){r.promiseResolver(s.data);return}break;case"CREATE_PREPARED":if(s.type=="PREPARED_STATEMENT_ID"){r.promiseResolver(s.data);return}break}r.promiseRejecter(new Error("unexpected response type: ".concat(s.type.toString())))}onError(t){console.error(t),console.error("error in duckdb worker: ".concat(t.message)),this._pendingRequests.clear()}onClose(){if(this._workerShutdownResolver(null),this._pendingRequests.size!=0){console.warn("worker terminated with ".concat(this._pendingRequests.size," pending requests"));return}this._pendingRequests.clear()}async reset(){let t=new Ee("RESET",null);return await this.postTask(t)}async ping(){let t=new Ee("PING",null);await this.postTask(t)}async dropFile(t){let e=new Ee("DROP_FILE",t);return await this.postTask(e)}async dropFiles(){let t=new Ee("DROP_FILES",null);return await this.postTask(t)}async flushFiles(){let t=new Ee("FLUSH_FILES",null);return await this.postTask(t)}async instantiate(t,e=null,s=r=>{}){this._onInstantiationProgress.push(s);let r=new Ee("INSTANTIATE",[t,e]);return await this.postTask(r)}async getVersion(){let t=new Ee("GET_VERSION",null);return await this.postTask(t)}async getFeatureFlags(){let t=new Ee("GET_FEATURE_FLAGS",null);return await this.postTask(t)}async open(t){let e=new Ee("OPEN",t);await this.postTask(e)}async tokenize(t){let e=new Ee("TOKENIZE",t);return await this.postTask(e)}async connectInternal(){let t=new Ee("CONNECT",null);return await this.postTask(t)}async connect(){let t=await this.connectInternal();return new e_(this,t)}async disconnect(t){let e=new Ee("DISCONNECT",t);await this.postTask(e)}async runQuery(t,e){let s=new Ee("RUN_QUERY",[t,e]);return await this.postTask(s)}async startPendingQuery(t,e){let s=new Ee("START_PENDING_QUERY",[t,e]);return await this.postTask(s)}async pollPendingQuery(t){let e=new Ee("POLL_PENDING_QUERY",t);return await this.postTask(e)}async cancelPendingQuery(t){let e=new Ee("CANCEL_PENDING_QUERY",t);return await this.postTask(e)}async fetchQueryResults(t){let e=new Ee("FETCH_QUERY_RESULTS",t);return await this.postTask(e)}async getTableNames(t,e){let s=new Ee("GET_TABLE_NAMES",[t,e]);return await this.postTask(s)}async createPrepared(t,e){let s=new Ee("CREATE_PREPARED",[t,e]);return await this.postTask(s)}async closePrepared(t,e){let s=new Ee("CLOSE_PREPARED",[t,e]);await this.postTask(s)}async runPrepared(t,e,s){let r=new Ee("RUN_PREPARED",[t,e,s]);return await this.postTask(r)}async sendPrepared(t,e,s){let r=new Ee("SEND_PREPARED",[t,e,s]);return await this.postTask(r)}async globFiles(t){let e=new Ee("GLOB_FILE_INFOS",t);return await this.postTask(e)}async registerFileText(t,e){let s=E_.encode(e);await this.registerFileBuffer(t,s)}async registerFileURL(t,e,s,r){e===void 0&&(e=t);let E=new Ee("REGISTER_FILE_URL",[t,e,s,r]);await this.postTask(E)}async registerEmptyFileBuffer(t){}async registerFileBuffer(t,e){let s=new Ee("REGISTER_FILE_BUFFER",[t,e]);await this.postTask(s,[e.buffer])}async registerFileHandle(t,e,s,r){let E=new Ee("REGISTER_FILE_HANDLE",[t,e,s,r]);await this.postTask(E,[])}async collectFileStatistics(t,e){let s=new Ee("COLLECT_FILE_STATISTICS",[t,e]);await this.postTask(s,[])}async exportFileStatistics(t){let e=new Ee("EXPORT_FILE_STATISTICS",t);return await this.postTask(e,[])}async copyFileToBuffer(t){let e=new Ee("COPY_FILE_TO_BUFFER",t);return await this.postTask(e)}async copyFileToPath(t,e){let s=new Ee("COPY_FILE_TO_PATH",[t,e]);await this.postTask(s)}async insertArrowFromIPCStream(t,e,s){if(e.length==0)return;let r=new Ee("INSERT_ARROW_FROM_IPC_STREAM",[t,e,s]);await this.postTask(r,[e.buffer])}async insertCSVFromPath(t,e,s){if(s.columns!==void 0){let E=[];for(let n in s.columns){let i=s.columns[n];E.push(fT(n,i))}s.columnsFlat=E,delete s.columns}let r=new Ee("IMPORT_CSV_FROM_PATH",[t,e,s]);await this.postTask(r)}async insertJSONFromPath(t,e,s){if(s.columns!==void 0){let E=[];for(let n in s.columns){let i=s.columns[n];E.push(fT(n,i))}s.columnsFlat=E,delete s.columns}let r=new Ee("IMPORT_JSON_FROM_PATH",[t,e,s]);await this.postTask(r)}},i_=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),T_=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),o_=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),a_=()=>(async t=>{try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(t)}catch{return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])),lo={name:"@duckdb/duckdb-wasm",version:"1.29.0",description:"DuckDB powered by WebAssembly",license:"MIT",repository:{type:"git",url:"https://github.com/duckdb/duckdb-wasm.git"},keywords:["sql","duckdb","relational","database","data","query","wasm","analytics","olap","arrow","parquet","json","csv"],dependencies:{"apache-arrow":"^17.0.0"},devDependencies:{"@types/emscripten":"^1.39.10","@types/jasmine":"^5.1.4","@typescript-eslint/eslint-plugin":"^6.21.0","@typescript-eslint/parser":"^6.21.0",esbuild:"^0.20.2",eslint:"^8.57.0","eslint-plugin-jasmine":"^4.1.3","eslint-plugin-react":"^7.34.0","fast-glob":"^3.3.2",jasmine:"^5.1.0","jasmine-core":"^5.1.2","jasmine-spec-reporter":"^7.0.0","js-sha256":"^0.11.0",karma:"^6.4.2","karma-chrome-launcher":"^3.2.0","karma-coverage":"^2.2.1","karma-firefox-launcher":"^2.1.3","karma-jasmine":"^5.1.0","karma-jasmine-html-reporter":"^2.1.0","karma-sourcemap-loader":"^0.4.0","karma-spec-reporter":"^0.0.36","make-dir":"^4.0.0",nyc:"^15.1.0",prettier:"^3.2.5",puppeteer:"^22.8.0",rimraf:"^5.0.5",s3rver:"^3.7.1",typedoc:"^0.25.13",typescript:"^5.3.3","wasm-feature-detect":"^1.6.1","web-worker":"^1.2.0"},scripts:{"build:debug":"node bundle.mjs debug && tsc --emitDeclarationOnly","build:release":"node bundle.mjs release && tsc --emitDeclarationOnly",docs:"typedoc",report:"node ./coverage.mjs","test:node":"node --enable-source-maps ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs","test:node:debug":"node --inspect-brk --enable-source-maps ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs","test:node:coverage":"nyc -r json --report-dir ./coverage/node node ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs","test:firefox":"karma start ./karma/tests-firefox.cjs","test:chrome":"karma start ./karma/tests-chrome.cjs","test:chrome:eh":"karma start ./karma/tests-chrome-eh.cjs","test:chrome:coverage":"karma start ./karma/tests-chrome-coverage.cjs","test:browser":"karma start ./karma/tests-all.cjs","test:browser:debug":"karma start ./karma/tests-debug.cjs",test:"npm run test:chrome && npm run test:node","test:coverage":"npm run test:chrome:coverage && npm run test:node:coverage && npm run report",lint:"eslint src test"},files:["dist","!dist/tests-*","!dist/duckdb-browser-mvp.worker.js.map","!dist/types/test"],main:"dist/duckdb-browser.cjs",module:"dist/duckdb-browser.mjs",types:"dist/duckdb-browser.d.ts",jsdelivr:"dist/duckdb-browser.cjs",unpkg:"dist/duckdb-browser.mjs",sideEffects:!1,browser:{fs:!1,path:!1,perf_hooks:!1,os:!1,worker_threads:!1},exports:{"./dist/duckdb-mvp.wasm":"./dist/duckdb-mvp.wasm","./dist/duckdb-eh.wasm":"./dist/duckdb-eh.wasm","./dist/duckdb-coi.wasm":"./dist/duckdb-coi.wasm","./dist/duckdb-browser":"./dist/duckdb-browser.mjs","./dist/duckdb-browser.cjs":"./dist/duckdb-browser.cjs","./dist/duckdb-browser.mjs":"./dist/duckdb-browser.mjs","./dist/duckdb-browser-coi.pthread.worker.js":"./dist/duckdb-browser-coi.pthread.worker.js","./dist/duckdb-browser-coi.worker.js":"./dist/duckdb-browser-coi.worker.js","./dist/duckdb-browser-eh.worker.js":"./dist/duckdb-browser-eh.worker.js","./dist/duckdb-browser-mvp.worker.js":"./dist/duckdb-browser-mvp.worker.js","./dist/duckdb-node":"./dist/duckdb-node.cjs","./dist/duckdb-node.cjs":"./dist/duckdb-node.cjs","./dist/duckdb-node-blocking":"./dist/duckdb-node-blocking.cjs","./dist/duckdb-node-blocking.cjs":"./dist/duckdb-node-blocking.cjs","./dist/duckdb-node-eh.worker.cjs":"./dist/duckdb-node-eh.worker.cjs","./dist/duckdb-node-mvp.worker.cjs":"./dist/duckdb-node-mvp.worker.cjs","./blocking":{node:{types:"./dist/duckdb-node-blocking.d.ts",require:"./dist/duckdb-node-blocking.cjs",import:"./dist/duckdb-node-blocking.cjs"},types:"./dist/duckdb-node-blocking.d.ts",import:"./dist/duckdb-node-blocking.mjs",require:"./dist/duckdb-node-blocking.cjs"},".":{browser:{types:"./dist/duckdb-browser.d.ts",import:"./dist/duckdb-browser.mjs",require:"./dist/duckdb-browser.cjs"},node:{types:"./dist/duckdb-node.d.ts",import:"./dist/duckdb-node.cjs",require:"./dist/duckdb-node.cjs"},types:"./dist/duckdb-browser.d.ts",import:"./dist/duckdb-browser.mjs",require:"./dist/duckdb-browser.cjs"}}},R_=lo.name,A_=lo.version,No=lo.version.split(".");No[0];No[1];No[2];var S_=()=>typeof navigator>"u";function I_(){let t="https://cdn.jsdelivr.net/npm/".concat(R_,"@").concat(A_,"/dist/");return{mvp:{mainModule:"".concat(t,"duckdb-mvp.wasm"),mainWorker:"".concat(t,"duckdb-browser-mvp.worker.js")},eh:{mainModule:"".concat(t,"duckdb-eh.wasm"),mainWorker:"".concat(t,"duckdb-browser-eh.worker.js")}}}var pi=null,Pi=null,Mi=null,Ui=null,yi=null;async function O_(){return pi==null&&(pi=typeof BigInt64Array<"u"),Pi==null&&(Pi=await T_()),Mi==null&&(Mi=await a_()),Ui==null&&(Ui=await o_()),yi==null&&(yi=await i_()),{bigInt64Array:pi,crossOriginIsolated:S_()||globalThis.crossOriginIsolated||!1,wasmExceptions:Pi,wasmSIMD:Ui,wasmThreads:Mi,wasmBulkMemory:yi}}async function l_(t){let e=await O_();if(e.wasmExceptions){if(e.wasmSIMD&&e.wasmThreads&&e.crossOriginIsolated&&t.coi)return{mainModule:t.coi.mainModule,mainWorker:t.coi.mainWorker,pthreadWorker:t.coi.pthreadWorker};if(t.eh)return{mainModule:t.eh.mainModule,mainWorker:t.eh.mainWorker,pthreadWorker:null}}return{mainModule:t.mvp.mainModule,mainWorker:t.mvp.mainWorker,pthreadWorker:null}}Xu(Ku());function N_(){let t=new TextDecoder;return e=>(typeof SharedArrayBuffer<"u"&&e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode(e))}N_();var c_=(t=>(t[t.BUFFER=0]="BUFFER",t[t.NODE_FS=1]="NODE_FS",t[t.BROWSER_FILEREADER=2]="BROWSER_FILEREADER",t[t.BROWSER_FSACCESS=3]="BROWSER_FSACCESS",t[t.HTTP=4]="HTTP",t[t.S3=5]="S3",t))(c_||{});const u_=I_();let js=null,lr=null;function __(t){return t.eh_parallel?t.eh_parallel:t.eh?t.eh:l_(t)}function L_(t){return t.toArray().map(s=>s.toJSON())}async function OI(){if(js&&lr)return{db:js,connection:lr};const t=__(u_),e=URL.createObjectURL(new Blob([`importScripts("${t.mainWorker}");`],{type:"text/javascript"})),s=new Worker(e);URL.revokeObjectURL(e);const r=new Zu;return js=new n_(r,s),await js.instantiate(t.mainModule,t.pthreadWorker),lr=await js.connect(),{db:js,connection:lr}}async function Xr(t){lr||await OI();const e=await lr.query(t);return L_(e)}function d_(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var ZE={exports:{}},C_=ZE.exports,Ma;function f_(){return Ma||(Ma=1,function(t){(function(e,s){t.exports?t.exports=s():e.nearley=s()})(C_,function(){function e(a,R,A){return this.id=++e.highestId,this.name=a,this.symbols=R,this.postprocess=A,this}e.highestId=0,e.prototype.toString=function(a){var R=typeof a>"u"?this.symbols.map(o).join(" "):this.symbols.slice(0,a).map(o).join(" ")+" ● "+this.symbols.slice(a).map(o).join(" ");return this.name+" → "+R};function s(a,R,A,l){this.rule=a,this.dot=R,this.reference=A,this.data=[],this.wantedBy=l,this.isComplete=this.dot===a.symbols.length}s.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},s.prototype.nextState=function(a){var R=new s(this.rule,this.dot+1,this.reference,this.wantedBy);return R.left=this,R.right=a,R.isComplete&&(R.data=R.build(),R.right=void 0),R},s.prototype.build=function(){var a=[],R=this;do a.push(R.right.data),R=R.left;while(R.left);return a.reverse(),a},s.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,i.fail))};function r(a,R){this.grammar=a,this.index=R,this.states=[],this.wants={},this.scannable=[],this.completed={}}r.prototype.process=function(a){for(var R=this.states,A=this.wants,l=this.completed,u=0;u<R.length;u++){var h=R[u];if(h.isComplete){if(h.finish(),h.data!==i.fail){for(var U=h.wantedBy,j=U.length;j--;){var B=U[j];this.complete(B,h)}if(h.reference===this.index){var k=h.rule.name;(this.completed[k]=this.completed[k]||[]).push(h)}}}else{var k=h.rule.symbols[h.dot];if(typeof k!="string"){this.scannable.push(h);continue}if(A[k]){if(A[k].push(h),l.hasOwnProperty(k))for(var re=l[k],j=0;j<re.length;j++){var F=re[j];this.complete(h,F)}}else A[k]=[h],this.predict(k)}}},r.prototype.predict=function(a){for(var R=this.grammar.byName[a]||[],A=0;A<R.length;A++){var l=R[A],u=this.wants[a],h=new s(l,0,this.index,u);this.states.push(h)}},r.prototype.complete=function(a,R){var A=a.nextState(R);this.states.push(A)};function E(a,R){this.rules=a,this.start=R||this.rules[0].name;var A=this.byName={};this.rules.forEach(function(l){A.hasOwnProperty(l.name)||(A[l.name]=[]),A[l.name].push(l)})}E.fromCompiled=function(l,R){var A=l.Lexer;l.ParserStart&&(R=l.ParserStart,l=l.ParserRules);var l=l.map(function(h){return new e(h.name,h.symbols,h.postprocess)}),u=new E(l,R);return u.lexer=A,u};function n(){this.reset("")}n.prototype.reset=function(a,R){this.buffer=a,this.index=0,this.line=R?R.line:1,this.lastLineBreak=R?-R.col:0},n.prototype.next=function(){if(this.index<this.buffer.length){var a=this.buffer[this.index++];return a===`
`&&(this.line+=1,this.lastLineBreak=this.index),{value:a}}},n.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},n.prototype.formatError=function(a,R){var A=this.buffer;if(typeof A=="string"){var l=A.split(`
`).slice(Math.max(0,this.line-5),this.line),u=A.indexOf(`
`,this.index);u===-1&&(u=A.length);var h=this.index-this.lastLineBreak,U=String(this.line).length;return R+=" at line "+this.line+" col "+h+`:

`,R+=l.map(function(B,k){return j(this.line-l.length+k+1,U)+" "+B},this).join(`
`),R+=`
`+j("",U+h)+`^
`,R}else return R+" at index "+(this.index-1);function j(B,k){var re=String(B);return Array(k-re.length+1).join(" ")+re}};function i(a,R,A){if(a instanceof E)var l=a,A=R;else var l=E.fromCompiled(a,R);this.grammar=l,this.options={keepHistory:!1,lexer:l.lexer||new n};for(var u in A||{})this.options[u]=A[u];this.lexer=this.options.lexer,this.lexerState=void 0;var h=new r(l,0);this.table=[h],h.wants[l.start]=[],h.predict(l.start),h.process(),this.current=0}i.fail={},i.prototype.feed=function(a){var R=this.lexer;R.reset(a,this.lexerState);for(var A;;){try{if(A=R.next(),!A)break}catch(nt){var U=new r(this.grammar,this.current+1);this.table.push(U);var l=new Error(this.reportLexerError(nt));throw l.offset=this.current,l.token=nt.token,l}var u=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var h=this.current+1,U=new r(this.grammar,h);this.table.push(U);for(var j=A.text!==void 0?A.text:A.value,B=R.constructor===n?A.value:A,k=u.scannable,re=k.length;re--;){var F=k[re],Ce=F.rule.symbols[F.dot];if(Ce.test?Ce.test(B):Ce.type?Ce.type===A.type:Ce.literal===j){var mt=F.nextState({data:B,token:A,isToken:!0,reference:h-1});U.states.push(mt)}}if(U.process(),U.states.length===0){var l=new Error(this.reportError(A));throw l.offset=this.current,l.token=A,l}this.options.keepHistory&&(u.lexerState=R.save()),this.current++}return u&&(this.lexerState=R.save()),this.results=this.finish(),this},i.prototype.reportLexerError=function(a){var R,A,l=a.token;return l?(R="input "+JSON.stringify(l.text[0])+" (lexer error)",A=this.lexer.formatError(l,"Syntax error")):(R="input (lexer error)",A=a.message),this.reportErrorCommon(A,R)},i.prototype.reportError=function(a){var R=(a.type?a.type+" token: ":"")+JSON.stringify(a.value!==void 0?a.value:a),A=this.lexer.formatError(a,"Syntax error");return this.reportErrorCommon(A,R)},i.prototype.reportErrorCommon=function(a,R){var A=[];A.push(a);var l=this.table.length-2,u=this.table[l],h=u.states.filter(function(j){var B=j.rule.symbols[j.dot];return B&&typeof B!="string"});if(h.length===0)A.push("Unexpected "+R+`. I did not expect any more input. Here is the state of my parse table:
`),this.displayStateStack(u.states,A);else{A.push("Unexpected "+R+`. Instead, I was expecting to see one of the following:
`);var U=h.map(function(j){return this.buildFirstStateStack(j,[])||[j]},this);U.forEach(function(j){var B=j[0],k=B.rule.symbols[B.dot],re=this.getSymbolDisplay(k);A.push("A "+re+" based on:"),this.displayStateStack(j,A)},this)}return A.push(""),A.join(`
`)},i.prototype.displayStateStack=function(a,R){for(var A,l=0,u=0;u<a.length;u++){var h=a[u],U=h.rule.toString(h.dot);U===A?l++:(l>0&&R.push("    ^ "+l+" more lines identical to this"),l=0,R.push("    "+U)),A=U}},i.prototype.getSymbolDisplay=function(a){return T(a)},i.prototype.buildFirstStateStack=function(a,R){if(R.indexOf(a)!==-1)return null;if(a.wantedBy.length===0)return[a];var A=a.wantedBy[0],l=[a].concat(R),u=this.buildFirstStateStack(A,l);return u===null?null:[a].concat(u)},i.prototype.save=function(){var a=this.table[this.current];return a.lexerState=this.lexerState,a},i.prototype.restore=function(a){var R=a.index;this.current=R,this.table[R]=a,this.table.splice(R+1),this.lexerState=a.lexerState,this.results=this.finish()},i.prototype.rewind=function(a){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[a])},i.prototype.finish=function(){var a=[],R=this.grammar.start,A=this.table[this.table.length-1];return A.states.forEach(function(l){l.rule.name===R&&l.dot===l.rule.symbols.length&&l.reference===0&&l.data!==i.fail&&a.push(l)}),a.map(function(l){return l.data})};function T(a){var R=typeof a;if(R==="string")return a;if(R==="object"){if(a.literal)return JSON.stringify(a.literal);if(a instanceof RegExp)return"character matching "+a;if(a.type)return a.type+" token";if(a.test)return"token matching "+String(a.test);throw new Error("Unknown symbol type: "+a)}}function o(a){var R=typeof a;if(R==="string")return a;if(R==="object"){if(a.literal)return JSON.stringify(a.literal);if(a instanceof RegExp)return a.toString();if(a.type)return"%"+a.type;if(a.test)return"<"+String(a.test)+">";throw new Error("Unknown symbol type: "+a)}}return{Parser:i,Grammar:E,Rule:e}})}(ZE)),ZE.exports}var h_=f_();const D_=d_(h_);var lI=Object.defineProperty,p_=Object.defineProperties,P_=Object.getOwnPropertyDescriptors,Vn=Object.getOwnPropertySymbols,NI=Object.prototype.hasOwnProperty,cI=Object.prototype.propertyIsEnumerable,Ua=(t,e,s)=>e in t?lI(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s,ge=(t,e)=>{for(var s in e||(e={}))NI.call(e,s)&&Ua(t,s,e[s]);if(Vn)for(var s of Vn(e))cI.call(e,s)&&Ua(t,s,e[s]);return t},Ve=(t,e)=>p_(t,P_(e)),M_=(t,e)=>{var s={};for(var r in t)NI.call(t,r)&&e.indexOf(r)<0&&(s[r]=t[r]);if(t!=null&&Vn)for(var r of Vn(t))e.indexOf(r)<0&&cI.call(t,r)&&(s[r]=t[r]);return s},U_=(t,e)=>{for(var s in e)lI(t,s,{get:e[s],enumerable:!0})},uI={};U_(uI,{bigquery:()=>J_,db2:()=>iL,db2i:()=>lL,hive:()=>hL,mariadb:()=>FL,mysql:()=>WL,n1ql:()=>id,plsql:()=>ld,postgresql:()=>Dd,redshift:()=>Gd,singlestoredb:()=>bC,snowflake:()=>XC,spark:()=>xd,sql:()=>oC,sqlite:()=>zd,tidb:()=>jL,transactsql:()=>pC,trino:()=>cC});var c=t=>t.flatMap(y_),y_=t=>zE(B_(t)).map(m_),m_=t=>t.replace(/ +/g," ").trim(),B_=t=>({type:"mandatory_block",items:co(t,0)[0]}),co=(t,e,s)=>{const r=[];for(;t[e];){const[E,n]=F_(t,e);if(r.push(E),e=n,t[e]==="|")e++;else if(t[e]==="}"||t[e]==="]"){if(s!==t[e])throw new Error(`Unbalanced parenthesis in: ${t}`);return e++,[r,e]}else if(e===t.length){if(s)throw new Error(`Unbalanced parenthesis in: ${t}`);return[r,e]}else throw new Error(`Unexpected "${t[e]}"`)}return[r,e]},F_=(t,e)=>{const s=[];for(;;){const[r,E]=G_(t,e);if(r)s.push(r),e=E;else break}return s.length===1?[s[0],e]:[{type:"concatenation",items:s},e]},G_=(t,e)=>{if(t[e]==="{")return b_(t,e+1);if(t[e]==="[")return g_(t,e+1);{let s="";for(;t[e]&&/[A-Za-z0-9_ ]/.test(t[e]);)s+=t[e],e++;return[s,e]}},b_=(t,e)=>{const[s,r]=co(t,e,"}");return[{type:"mandatory_block",items:s},r]},g_=(t,e)=>{const[s,r]=co(t,e,"]");return[{type:"optional_block",items:s},r]},zE=t=>{if(typeof t=="string")return[t];if(t.type==="concatenation")return t.items.map(zE).reduce(H_,[""]);if(t.type==="mandatory_block")return t.items.flatMap(zE);if(t.type==="optional_block")return["",...t.items.flatMap(zE)];throw new Error(`Unknown node type: ${t}`)},H_=(t,e)=>{const s=[];for(const r of t)for(const E of e)s.push(r+E);return s},_I=(t=>(t.QUOTED_IDENTIFIER="QUOTED_IDENTIFIER",t.IDENTIFIER="IDENTIFIER",t.STRING="STRING",t.VARIABLE="VARIABLE",t.RESERVED_DATA_TYPE="RESERVED_DATA_TYPE",t.RESERVED_PARAMETERIZED_DATA_TYPE="RESERVED_PARAMETERIZED_DATA_TYPE",t.RESERVED_KEYWORD="RESERVED_KEYWORD",t.RESERVED_FUNCTION_NAME="RESERVED_FUNCTION_NAME",t.RESERVED_PHRASE="RESERVED_PHRASE",t.RESERVED_SET_OPERATION="RESERVED_SET_OPERATION",t.RESERVED_CLAUSE="RESERVED_CLAUSE",t.RESERVED_SELECT="RESERVED_SELECT",t.RESERVED_JOIN="RESERVED_JOIN",t.ARRAY_IDENTIFIER="ARRAY_IDENTIFIER",t.ARRAY_KEYWORD="ARRAY_KEYWORD",t.CASE="CASE",t.END="END",t.WHEN="WHEN",t.ELSE="ELSE",t.THEN="THEN",t.LIMIT="LIMIT",t.BETWEEN="BETWEEN",t.AND="AND",t.OR="OR",t.XOR="XOR",t.OPERATOR="OPERATOR",t.COMMA="COMMA",t.ASTERISK="ASTERISK",t.PROPERTY_ACCESS_OPERATOR="PROPERTY_ACCESS_OPERATOR",t.OPEN_PAREN="OPEN_PAREN",t.CLOSE_PAREN="CLOSE_PAREN",t.LINE_COMMENT="LINE_COMMENT",t.BLOCK_COMMENT="BLOCK_COMMENT",t.DISABLE_COMMENT="DISABLE_COMMENT",t.NUMBER="NUMBER",t.NAMED_PARAMETER="NAMED_PARAMETER",t.QUOTED_PARAMETER="QUOTED_PARAMETER",t.NUMBERED_PARAMETER="NUMBERED_PARAMETER",t.POSITIONAL_PARAMETER="POSITIONAL_PARAMETER",t.CUSTOM_PARAMETER="CUSTOM_PARAMETER",t.DELIMITER="DELIMITER",t.EOF="EOF",t))(_I||{}),LI=t=>({type:"EOF",raw:"«EOF»",text:"«EOF»",start:t}),Fr=LI(1/0),Zs=t=>e=>e.type===t.type&&e.text===t.text,Ks={ARRAY:Zs({text:"ARRAY",type:"RESERVED_DATA_TYPE"}),BY:Zs({text:"BY",type:"RESERVED_KEYWORD"}),SET:Zs({text:"SET",type:"RESERVED_CLAUSE"}),STRUCT:Zs({text:"STRUCT",type:"RESERVED_DATA_TYPE"}),WINDOW:Zs({text:"WINDOW",type:"RESERVED_CLAUSE"}),VALUES:Zs({text:"VALUES",type:"RESERVED_CLAUSE"})},dI=t=>t==="RESERVED_DATA_TYPE"||t==="RESERVED_KEYWORD"||t==="RESERVED_FUNCTION_NAME"||t==="RESERVED_PHRASE"||t==="RESERVED_CLAUSE"||t==="RESERVED_SELECT"||t==="RESERVED_SET_OPERATION"||t==="RESERVED_JOIN"||t==="ARRAY_KEYWORD"||t==="CASE"||t==="END"||t==="WHEN"||t==="ELSE"||t==="THEN"||t==="LIMIT"||t==="BETWEEN"||t==="AND"||t==="OR"||t==="XOR",Y_=t=>t==="AND"||t==="OR"||t==="XOR",v_=["KEYS.NEW_KEYSET","KEYS.ADD_KEY_FROM_RAW_BYTES","AEAD.DECRYPT_BYTES","AEAD.DECRYPT_STRING","AEAD.ENCRYPT","KEYS.KEYSET_CHAIN","KEYS.KEYSET_FROM_JSON","KEYS.KEYSET_TO_JSON","KEYS.ROTATE_KEYSET","KEYS.KEYSET_LENGTH","ANY_VALUE","ARRAY_AGG","AVG","CORR","COUNT","COUNTIF","COVAR_POP","COVAR_SAMP","MAX","MIN","ST_CLUSTERDBSCAN","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","VAR_POP","VAR_SAMP","ANY_VALUE","ARRAY_AGG","ARRAY_CONCAT_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","COUNT","COUNTIF","LOGICAL_AND","LOGICAL_OR","MAX","MIN","STRING_AGG","SUM","APPROX_COUNT_DISTINCT","APPROX_QUANTILES","APPROX_TOP_COUNT","APPROX_TOP_SUM","ARRAY_CONCAT","ARRAY_LENGTH","ARRAY_TO_STRING","GENERATE_ARRAY","GENERATE_DATE_ARRAY","GENERATE_TIMESTAMP_ARRAY","ARRAY_REVERSE","OFFSET","SAFE_OFFSET","ORDINAL","SAFE_ORDINAL","BIT_COUNT","PARSE_BIGNUMERIC","PARSE_NUMERIC","SAFE_CAST","CURRENT_DATE","EXTRACT","DATE","DATE_ADD","DATE_SUB","DATE_DIFF","DATE_TRUNC","DATE_FROM_UNIX_DATE","FORMAT_DATE","LAST_DAY","PARSE_DATE","UNIX_DATE","CURRENT_DATETIME","DATETIME","EXTRACT","DATETIME_ADD","DATETIME_SUB","DATETIME_DIFF","DATETIME_TRUNC","FORMAT_DATETIME","LAST_DAY","PARSE_DATETIME","ERROR","EXTERNAL_QUERY","S2_CELLIDFROMPOINT","S2_COVERINGCELLIDS","ST_ANGLE","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_AZIMUTH","ST_BOUNDARY","ST_BOUNDINGBOX","ST_BUFFER","ST_BUFFERWITHTOLERANCE","ST_CENTROID","ST_CENTROID_AGG","ST_CLOSESTPOINT","ST_CLUSTERDBSCAN","ST_CONTAINS","ST_CONVEXHULL","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DUMP","ST_DWITHIN","ST_ENDPOINT","ST_EQUALS","ST_EXTENT","ST_EXTERIORRING","ST_GEOGFROM","ST_GEOGFROMGEOJSON","ST_GEOGFROMTEXT","ST_GEOGFROMWKB","ST_GEOGPOINT","ST_GEOGPOINTFROMGEOHASH","ST_GEOHASH","ST_GEOMETRYTYPE","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_INTERSECTSBOX","ST_ISCOLLECTION","ST_ISEMPTY","ST_LENGTH","ST_MAKELINE","ST_MAKEPOLYGON","ST_MAKEPOLYGONORIENTED","ST_MAXDISTANCE","ST_NPOINTS","ST_NUMGEOMETRIES","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SIMPLIFY","ST_SNAPTOGRID","ST_STARTPOINT","ST_TOUCHES","ST_UNION","ST_UNION_AGG","ST_WITHIN","ST_X","ST_Y","FARM_FINGERPRINT","MD5","SHA1","SHA256","SHA512","HLL_COUNT.INIT","HLL_COUNT.MERGE","HLL_COUNT.MERGE_PARTIAL","HLL_COUNT.EXTRACT","MAKE_INTERVAL","EXTRACT","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","JSON_EXTRACT","JSON_QUERY","JSON_EXTRACT_SCALAR","JSON_VALUE","JSON_EXTRACT_ARRAY","JSON_QUERY_ARRAY","JSON_EXTRACT_STRING_ARRAY","JSON_VALUE_ARRAY","TO_JSON_STRING","ABS","SIGN","IS_INF","IS_NAN","IEEE_DIVIDE","RAND","SQRT","POW","POWER","EXP","LN","LOG","LOG10","GREATEST","LEAST","DIV","SAFE_DIVIDE","SAFE_MULTIPLY","SAFE_NEGATE","SAFE_ADD","SAFE_SUBTRACT","MOD","ROUND","TRUNC","CEIL","CEILING","FLOOR","COS","COSH","ACOS","ACOSH","SIN","SINH","ASIN","ASINH","TAN","TANH","ATAN","ATANH","ATAN2","RANGE_BUCKET","FIRST_VALUE","LAST_VALUE","NTH_VALUE","LEAD","LAG","PERCENTILE_CONT","PERCENTILE_DISC","NET.IP_FROM_STRING","NET.SAFE_IP_FROM_STRING","NET.IP_TO_STRING","NET.IP_NET_MASK","NET.IP_TRUNC","NET.IPV4_FROM_INT64","NET.IPV4_TO_INT64","NET.HOST","NET.PUBLIC_SUFFIX","NET.REG_DOMAIN","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","NTILE","ROW_NUMBER","SESSION_USER","CORR","COVAR_POP","COVAR_SAMP","STDDEV_POP","STDDEV_SAMP","STDDEV","VAR_POP","VAR_SAMP","VARIANCE","ASCII","BYTE_LENGTH","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CODE_POINTS_TO_BYTES","CODE_POINTS_TO_STRING","CONCAT","CONTAINS_SUBSTR","ENDS_WITH","FORMAT","FROM_BASE32","FROM_BASE64","FROM_HEX","INITCAP","INSTR","LEFT","LENGTH","LPAD","LOWER","LTRIM","NORMALIZE","NORMALIZE_AND_CASEFOLD","OCTET_LENGTH","REGEXP_CONTAINS","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","REPEAT","REVERSE","RIGHT","RPAD","RTRIM","SAFE_CONVERT_BYTES_TO_STRING","SOUNDEX","SPLIT","STARTS_WITH","STRPOS","SUBSTR","SUBSTRING","TO_BASE32","TO_BASE64","TO_CODE_POINTS","TO_HEX","TRANSLATE","TRIM","UNICODE","UPPER","CURRENT_TIME","TIME","EXTRACT","TIME_ADD","TIME_SUB","TIME_DIFF","TIME_TRUNC","FORMAT_TIME","PARSE_TIME","CURRENT_TIMESTAMP","EXTRACT","STRING","TIMESTAMP","TIMESTAMP_ADD","TIMESTAMP_SUB","TIMESTAMP_DIFF","TIMESTAMP_TRUNC","FORMAT_TIMESTAMP","PARSE_TIMESTAMP","TIMESTAMP_SECONDS","TIMESTAMP_MILLIS","TIMESTAMP_MICROS","UNIX_SECONDS","UNIX_MILLIS","UNIX_MICROS","GENERATE_UUID","COALESCE","IF","IFNULL","NULLIF","AVG","BIT_AND","BIT_OR","BIT_XOR","CORR","COUNT","COVAR_POP","COVAR_SAMP","EXACT_COUNT_DISTINCT","FIRST","GROUP_CONCAT","GROUP_CONCAT_UNQUOTED","LAST","MAX","MIN","NEST","NTH","QUANTILES","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","TOP","UNIQUE","VARIANCE","VAR_POP","VAR_SAMP","BIT_COUNT","BOOLEAN","BYTES","CAST","FLOAT","HEX_STRING","INTEGER","STRING","COALESCE","GREATEST","IFNULL","IS_INF","IS_NAN","IS_EXPLICITLY_DEFINED","LEAST","NVL","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE","DATE_ADD","DATEDIFF","DAY","DAYOFWEEK","DAYOFYEAR","FORMAT_UTC_USEC","HOUR","MINUTE","MONTH","MSEC_TO_TIMESTAMP","NOW","PARSE_UTC_USEC","QUARTER","SEC_TO_TIMESTAMP","SECOND","STRFTIME_UTC_USEC","TIME","TIMESTAMP","TIMESTAMP_TO_MSEC","TIMESTAMP_TO_SEC","TIMESTAMP_TO_USEC","USEC_TO_TIMESTAMP","UTC_USEC_TO_DAY","UTC_USEC_TO_HOUR","UTC_USEC_TO_MONTH","UTC_USEC_TO_WEEK","UTC_USEC_TO_YEAR","WEEK","YEAR","FORMAT_IP","PARSE_IP","FORMAT_PACKED_IP","PARSE_PACKED_IP","JSON_EXTRACT","JSON_EXTRACT_SCALAR","ABS","ACOS","ACOSH","ASIN","ASINH","ATAN","ATANH","ATAN2","CEIL","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG2","LOG10","PI","POW","RADIANS","RAND","ROUND","SIN","SINH","SQRT","TAN","TANH","REGEXP_MATCH","REGEXP_EXTRACT","REGEXP_REPLACE","CONCAT","INSTR","LEFT","LENGTH","LOWER","LPAD","LTRIM","REPLACE","RIGHT","RPAD","RTRIM","SPLIT","SUBSTR","UPPER","TABLE_DATE_RANGE","TABLE_DATE_RANGE_STRICT","TABLE_QUERY","HOST","DOMAIN","TLD","AVG","COUNT","MAX","MIN","STDDEV","SUM","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","CURRENT_USER","EVERY","FROM_BASE64","HASH","FARM_FINGERPRINT","IF","POSITION","SHA1","SOME","TO_BASE64","BQ.JOBS.CANCEL","BQ.REFRESH_MATERIALIZED_VIEW","OPTIONS","PIVOT","UNPIVOT"],w_=["ALL","AND","ANY","AS","ASC","ASSERT_ROWS_MODIFIED","AT","BETWEEN","BY","CASE","CAST","COLLATE","CONTAINS","CREATE","CROSS","CUBE","CURRENT","DEFAULT","DEFINE","DESC","DISTINCT","ELSE","END","ENUM","ESCAPE","EXCEPT","EXCLUDE","EXISTS","EXTRACT","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","GROUP","GROUPING","GROUPS","HASH","HAVING","IF","IGNORE","IN","INNER","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LIMIT","LOOKUP","MERGE","NATURAL","NEW","NO","NOT","NULL","NULLS","OF","ON","OR","ORDER","OUTER","OVER","PARTITION","PRECEDING","PROTO","RANGE","RECURSIVE","RESPECT","RIGHT","ROLLUP","ROWS","SELECT","SET","SOME","TABLE","TABLESAMPLE","THEN","TO","TREAT","TRUE","UNBOUNDED","UNION","UNNEST","USING","WHEN","WHERE","WINDOW","WITH","WITHIN","SAFE","LIKE","COPY","CLONE","IN","OUT","INOUT","RETURNS","LANGUAGE","CASCADE","RESTRICT","DETERMINISTIC"],V_=["ARRAY","BOOL","BYTES","DATE","DATETIME","GEOGRAPHY","INTERVAL","INT64","INT","SMALLINT","INTEGER","BIGINT","TINYINT","BYTEINT","NUMERIC","DECIMAL","BIGNUMERIC","BIGDECIMAL","FLOAT64","STRING","STRUCT","TIME","TIMEZONE"],W_=c(["SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]"]),x_=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","QUALIFY","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","OMIT RECORD IF","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]","UPDATE SET","CLUSTER BY","FOR SYSTEM_TIME AS OF","WITH CONNECTION","WITH PARTITION COLUMNS","REMOTE WITH CONNECTION"]),ya=c(["CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]"]),mi=c(["CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE [FROM]","DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME TO","ALTER COLUMN [IF EXISTS]","SET DEFAULT COLLATE","SET OPTIONS","DROP NOT NULL","SET DATA TYPE","ALTER SCHEMA [IF EXISTS]","ALTER [MATERIALIZED] VIEW [IF EXISTS]","ALTER BI_CAPACITY","TRUNCATE TABLE","CREATE SCHEMA [IF NOT EXISTS]","DEFAULT COLLATE","CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]","CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]","GRANT TO","FILTER USING","CREATE CAPACITY","AS JSON","CREATE RESERVATION","CREATE ASSIGNMENT","CREATE SEARCH INDEX [IF NOT EXISTS]","DROP SCHEMA [IF EXISTS]","DROP [MATERIALIZED] VIEW [IF EXISTS]","DROP [TABLE] FUNCTION [IF EXISTS]","DROP PROCEDURE [IF EXISTS]","DROP ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","DROP CAPACITY [IF EXISTS]","DROP RESERVATION [IF EXISTS]","DROP ASSIGNMENT [IF EXISTS]","DROP SEARCH INDEX [IF EXISTS]","DROP [IF EXISTS]","GRANT","REVOKE","DECLARE","EXECUTE IMMEDIATE","LOOP","END LOOP","REPEAT","END REPEAT","WHILE","END WHILE","BREAK","LEAVE","CONTINUE","ITERATE","FOR","END FOR","BEGIN","BEGIN TRANSACTION","COMMIT TRANSACTION","ROLLBACK TRANSACTION","RAISE","RETURN","CALL","ASSERT","EXPORT DATA"]),X_=c(["UNION {ALL | DISTINCT}","EXCEPT DISTINCT","INTERSECT DISTINCT"]),K_=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),$_=c(["TABLESAMPLE SYSTEM","ANY TYPE","ALL COLUMNS","NOT DETERMINISTIC","{ROWS | RANGE} BETWEEN","IS [NOT] DISTINCT FROM"]),J_={name:"bigquery",tokenizerOptions:{reservedSelect:W_,reservedClauses:[...x_,...mi,...ya],reservedSetOperations:X_,reservedJoins:K_,reservedPhrases:$_,reservedKeywords:w_,reservedDataTypes:V_,reservedFunctionNames:v_,extraParens:["[]"],stringTypes:[{quote:'""".."""',prefixes:["R","B","RB","BR"]},{quote:"'''..'''",prefixes:["R","B","RB","BR"]},'""-bs',"''-bs",{quote:'""-raw',prefixes:["R","B","RB","BR"],requirePrefix:!0},{quote:"''-raw",prefixes:["R","B","RB","BR"],requirePrefix:!0}],identTypes:["``"],identChars:{dashes:!0},paramTypes:{positional:!0,named:["@"],quoted:["@"]},variableTypes:[{regex:String.raw`@@\w+`}],lineCommentTypes:["--","#"],operators:["&","|","^","~",">>","<<","||","=>"],postProcess:k_},formatOptions:{onelineClauses:[...ya,...mi],tabularOnelineClauses:mi}};function k_(t){return q_(Q_(t))}function q_(t){let e=Fr;return t.map(s=>s.text==="OFFSET"&&e.text==="["?(e=s,Ve(ge({},s),{type:"RESERVED_FUNCTION_NAME"})):(e=s,s))}function Q_(t){var e;const s=[];for(let r=0;r<t.length;r++){const E=t[r];if((Ks.ARRAY(E)||Ks.STRUCT(E))&&((e=t[r+1])==null?void 0:e.text)==="<"){const n=j_(t,r+1),i=t.slice(r,n+1);s.push({type:"IDENTIFIER",raw:i.map(ma("raw")).join(""),text:i.map(ma("text")).join(""),start:E.start}),r=n}else s.push(E)}return s}var ma=t=>e=>e.type==="IDENTIFIER"||e.type==="COMMA"?e[t]+" ":e[t];function j_(t,e){let s=0;for(let r=e;r<t.length;r++){const E=t[r];if(E.text==="<"?s++:E.text===">"?s--:E.text===">>"&&(s-=2),s===0)return r}return t.length-1}var Z_=["ARRAY_AGG","AVG","CORRELATION","COUNT","COUNT_BIG","COVARIANCE","COVARIANCE_SAMP","CUME_DIST","GROUPING","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_ICPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_SAMP","SUM","VARIANCE","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","AGE","ARRAY_DELETE","ARRAY_FIRST","ARRAY_LAST","ARRAY_NEXT","ARRAY_PRIOR","ASCII","ASCII_STR","ASIN","ATAN","ATAN2","ATANH","BITAND","BITANDNOT","BITOR","BITXOR","BITNOT","BPCHAR","BSON_TO_JSON","BTRIM","CARDINALITY","CEILING","CEIL","CHARACTER_LENGTH","CHR","COALESCE","COLLATION_KEY","COLLATION_KEY_BIT","COMPARE_DECFLOAT","CONCAT","COS","COSH","COT","CURSOR_ROWCOUNT","DATAPARTITIONNUM","DATE_PART","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFWEEK_ISO","DAYOFYEAR","DAYS","DAYS_BETWEEN","DAYS_TO_END_OF_MONTH","DBPARTITIONNUM","DECFLOAT","DECFLOAT_FORMAT","DECODE","DECRYPT_BIN","DECRYPT_CHAR","DEGREES","DEREF","DIFFERENCE","DIGITS","DOUBLE_PRECISION","EMPTY_BLOB","EMPTY_CLOB","EMPTY_DBCLOB","EMPTY_NCLOB","ENCRYPT","EVENT_MON_STATE","EXP","EXTRACT","FIRST_DAY","FLOOR","FROM_UTC_TIMESTAMP","GENERATE_UNIQUE","GETHINT","GREATEST","HASH","HASH4","HASH8","HASHEDVALUE","HEX","HEXTORAW","HOUR","HOURS_BETWEEN","IDENTITY_VAL_LOCAL","IFNULL","INITCAP","INSERT","INSTR","INSTR2","INSTR4","INSTRB","INTNAND","INTNOR","INTNXOR","INTNNOT","ISNULL","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_VALUE","JULIAN_DAY","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LENGTH2","LENGTH4","LENGTHB","LN","LOCATE","LOCATE_IN_STRING","LOG10","LONG_VARCHAR","LONG_VARGRAPHIC","LOWER","LPAD","LTRIM","MAX","MAX_CARDINALITY","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MINUTES_BETWEEN","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MULTIPLY_ALT","NEXT_DAY","NEXT_MONTH","NEXT_QUARTER","NEXT_WEEK","NEXT_YEAR","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARAMETER","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","QUOTE_IDENT","QUOTE_LITERAL","RADIANS","RAISE_ERROR","RAND","RANDOM","RAWTOHEX","REC2XML","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_MATCH_COUNT","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RID_BIT","RIGHT","ROUND","ROUND_TIMESTAMP","RPAD","RTRIM","SECLABEL","SECLABEL_BY_NAME","SECLABEL_TO_CHAR","SECOND","SECONDS_BETWEEN","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTR2","SUBSTR4","SUBSTRB","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","THIS_MONTH","THIS_QUARTER","THIS_WEEK","THIS_YEAR","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF","TIMEZONE","TO_CHAR","TO_CLOB","TO_DATE","TO_HEX","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_UTC_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM","TRIM_ARRAY","TRUNC_TIMESTAMP","TRUNCATE","TRUNC","TYPE_ID","TYPE_NAME","TYPE_SCHEMA","UCASE","UNICODE_STR","UPPER","VALUE","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT","VARCHAR_FORMAT_BIT","VERIFY_GROUP_FOR_USER","VERIFY_ROLE_FOR_USER","VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER","WEEK","WEEK_ISO","WEEKS_BETWEEN","WIDTH_BUCKET","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLQUERY","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XMLXSROBJECTID","XSLTRANSFORM","YEAR","YEARS_BETWEEN","YMD_BETWEEN","BASE_TABLE","JSON_TABLE","UNNEST","XMLTABLE","RANK","DENSE_RANK","NTILE","LAG","LEAD","ROW_NUMBER","FIRST_VALUE","LAST_VALUE","NTH_VALUE","RATIO_TO_REPORT","CAST"],z_=["ACTIVATE","ADD","AFTER","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","AS","ASENSITIVE","ASSOCIATE","ASUTIME","AT","ATTRIBUTES","AUDIT","AUTHORIZATION","AUX","AUXILIARY","BEFORE","BEGIN","BETWEEN","BINARY","BUFFERPOOL","BY","CACHE","CALL","CALLED","CAPTURE","CARDINALITY","CASCADED","CASE","CAST","CHECK","CLONE","CLOSE","CLUSTER","COLLECTION","COLLID","COLUMN","COMMENT","COMMIT","CONCAT","CONDITION","CONNECT","CONNECTION","CONSTRAINT","CONTAINS","CONTINUE","COUNT","COUNT_BIG","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_LC_CTYPE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFINITION","DELETE","DENSERANK","DENSE_RANK","DESCRIBE","DESCRIPTOR","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DSSIZE","DYNAMIC","EACH","EDITPROC","ELSE","ELSEIF","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ERASE","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXPLAIN","EXTENDED","EXTERNAL","EXTRACT","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST1","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GRAPHIC","GROUP","HANDLER","HASH","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IMMEDIATE","IMPORT","IN","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDICATOR","INDICATORS","INF","INFINITY","INHERIT","INNER","INOUT","INSENSITIVE","INSERT","INTEGRITY","INTERSECT","INTO","IS","ISNULL","ISOBID","ISOLATION","ITERATE","JAR","JAVA","JOIN","KEEP","KEY","LABEL","LANGUAGE","LAST3","LATERAL","LC_CTYPE","LEAVE","LEFT","LIKE","LIMIT","LINKTYPE","LOCAL","LOCALDATE","LOCALE","LOCALTIME","LOCALTIMESTAMP","LOCATOR","LOCATORS","LOCK","LOCKMAX","LOCKSIZE","LOOP","MAINTAINED","MATERIALIZED","MAXVALUE","MICROSECOND","MICROSECONDS","MINUTE","MINUTES","MINVALUE","MODE","MODIFIES","MONTH","MONTHS","NAN","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT2","NOTNULL","NULL","NULLS","NUMPARTS","OBID","OF","OFF","OFFSET","OLD","OLD_TABLE","ON","OPEN","OPTIMIZATION","OPTIMIZE","OPTION","OR","ORDER","OUT","OUTER","OVER","OVERRIDING","PACKAGE","PADDED","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSWORD","PATH","PERCENT","PIECESIZE","PLAN","POSITION","PRECISION","PREPARE","PREVVAL","PRIMARY","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PSID","PUBLIC","QUERY","QUERYNO","RANGE","RANK","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESTRICT","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROUND_CEILING","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_UP","ROUND_UP","ROUTINE","ROW","ROWNUMBER","ROWS","ROWSET","ROW_NUMBER","RRN","RUN","SAVEPOINT","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURITY","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","STACKED","STANDARD","START","STARTING","STATEMENT","STATIC","STATMENT","STAY","STOGROUP","STORES","STYLE","SUBSTRING","SUMMARY","SYNONYM","SYSFUN","SYSIBM","SYSPROC","SYSTEM","SYSTEM_USER","TABLE","TABLESPACE","THEN","TO","TRANSACTION","TRIGGER","TRIM","TRUNCATE","TYPE","UNDO","UNION","UNIQUE","UNTIL","UPDATE","USAGE","USER","USING","VALIDPROC","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VIEW","VOLATILE","VOLUMES","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHOUT","WLM","WRITE","XMLELEMENT","XMLEXISTS","XMLNAMESPACES","YEAR","YEARS"],eL=["ARRAY","BIGINT","BINARY","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATE","DATETIME","DBCLOB","DEC","DECIMAL","DOUBLE","DOUBLE PRECISION","FLOAT","FLOAT4","FLOAT8","GRAPHIC","INT","INT2","INT4","INT8","INTEGER","INTERVAL","LONG VARCHAR","LONG VARGRAPHIC","NCHAR","NCHR","NCLOB","NVARCHAR","NUMERIC","SMALLINT","REAL","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC"],tL=c(["SELECT [ALL | DISTINCT]"]),sL=c(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH NEXT","FOR UPDATE [OF]","FOR {READ | FETCH} ONLY","FOR {RR | CS | UR | RS} [USE AND KEEP {SHARE | UPDATE | EXCLUSIVE} LOCKS]","WAIT FOR OUTCOME","SKIP LOCKED DATA","INTO","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT"]),Ba=c(["CREATE [GLOBAL TEMPORARY | EXTERNAL] TABLE [IF NOT EXISTS]"]),Bi=c(["CREATE [OR REPLACE] VIEW","UPDATE","WHERE CURRENT OF","WITH {RR | RS | CS | UR}","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME COLUMN","ALTER [COLUMN]","SET DATA TYPE","SET NOT NULL","DROP {DEFAULT | GENERATED | NOT NULL}","TRUNCATE [TABLE]","ALLOCATE","ALTER AUDIT POLICY","ALTER BUFFERPOOL","ALTER DATABASE PARTITION GROUP","ALTER DATABASE","ALTER EVENT MONITOR","ALTER FUNCTION","ALTER HISTOGRAM TEMPLATE","ALTER INDEX","ALTER MASK","ALTER METHOD","ALTER MODULE","ALTER NICKNAME","ALTER PACKAGE","ALTER PERMISSION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SECURITY LABEL COMPONENT","ALTER SECURITY POLICY","ALTER SEQUENCE","ALTER SERVER","ALTER SERVICE CLASS","ALTER STOGROUP","ALTER TABLESPACE","ALTER THRESHOLD","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER TYPE","ALTER USAGE LIST","ALTER USER MAPPING","ALTER VIEW","ALTER WORK ACTION SET","ALTER WORK CLASS SET","ALTER WORKLOAD","ALTER WRAPPER","ALTER XSROBJECT","ALTER STOGROUP","ALTER TABLESPACE","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER VIEW","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","AUDIT","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON","COMMIT [WORK]","CONNECT","CREATE [OR REPLACE] [PUBLIC] ALIAS","CREATE AUDIT POLICY","CREATE BUFFERPOOL","CREATE DATABASE PARTITION GROUP","CREATE EVENT MONITOR","CREATE [OR REPLACE] FUNCTION","CREATE FUNCTION MAPPING","CREATE HISTOGRAM TEMPLATE","CREATE [UNIQUE] INDEX","CREATE INDEX EXTENSION","CREATE [OR REPLACE] MASK","CREATE [SPECIFIC] METHOD","CREATE [OR REPLACE] MODULE","CREATE [OR REPLACE] NICKNAME","CREATE [OR REPLACE] PERMISSION","CREATE [OR REPLACE] PROCEDURE","CREATE ROLE","CREATE SCHEMA","CREATE SECURITY LABEL [COMPONENT]","CREATE SECURITY POLICY","CREATE [OR REPLACE] SEQUENCE","CREATE SERVICE CLASS","CREATE SERVER","CREATE STOGROUP","CREATE SYNONYM","CREATE [LARGE | REGULAR | {SYSTEM | USER} TEMPORARY] TABLESPACE","CREATE THRESHOLD","CREATE {TRANSFORM | TRANSFORMS} FOR","CREATE [OR REPLACE] TRIGGER","CREATE TRUSTED CONTEXT","CREATE [OR REPLACE] TYPE","CREATE TYPE MAPPING","CREATE USAGE LIST","CREATE USER MAPPING FOR","CREATE [OR REPLACE] VARIABLE","CREATE WORK ACTION SET","CREATE WORK CLASS SET","CREATE WORKLOAD","CREATE WRAPPER","DECLARE","DECLARE GLOBAL TEMPORARY TABLE","DESCRIBE [INPUT | OUTPUT]","DISCONNECT","DROP [PUBLIC] ALIAS","DROP AUDIT POLICY","DROP BUFFERPOOL","DROP DATABASE PARTITION GROUP","DROP EVENT MONITOR","DROP [SPECIFIC] FUNCTION","DROP FUNCTION MAPPING","DROP HISTOGRAM TEMPLATE","DROP INDEX [EXTENSION]","DROP MASK","DROP [SPECIFIC] METHOD","DROP MODULE","DROP NICKNAME","DROP PACKAGE","DROP PERMISSION","DROP [SPECIFIC] PROCEDURE","DROP ROLE","DROP SCHEMA","DROP SECURITY LABEL [COMPONENT]","DROP SECURITY POLICY","DROP SEQUENCE","DROP SERVER","DROP SERVICE CLASS","DROP STOGROUP","DROP TABLE HIERARCHY","DROP {TABLESPACE | TABLESPACES}","DROP {TRANSFORM | TRANSFORMS}","DROP THRESHOLD","DROP TRIGGER","DROP TRUSTED CONTEXT","DROP TYPE [MAPPING]","DROP USAGE LIST","DROP USER MAPPING FOR","DROP VARIABLE","DROP VIEW [HIERARCHY]","DROP WORK {ACTION | CLASS} SET","DROP WORKLOAD","DROP WRAPPER","DROP XSROBJECT","END DECLARE SECTION","EXECUTE [IMMEDIATE]","EXPLAIN {PLAN [SECTION] | ALL}","FETCH [FROM]","FLUSH {BUFFERPOOL | BUFFERPOOLS} ALL","FLUSH EVENT MONITOR","FLUSH FEDERATED CACHE","FLUSH OPTIMIZATION PROFILE CACHE","FLUSH PACKAGE CACHE [DYNAMIC]","FLUSH AUTHENTICATION CACHE [FOR ALL]","FREE LOCATOR","GET DIAGNOSTICS","GOTO","GRANT","INCLUDE","ITERATE","LEAVE","LOCK TABLE","LOOP","OPEN","PIPE","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX | STOGROUP | TABLESPACE]","REPEAT","RESIGNAL","RETURN","REVOKE","ROLLBACK [WORK] [TO SAVEPOINT]","SAVEPOINT","SET COMPILATION ENVIRONMENT","SET CONNECTION","SET CURRENT","SET ENCRYPTION PASSWORD","SET EVENT MONITOR STATE","SET INTEGRITY","SET PASSTHRU","SET PATH","SET ROLE","SET SCHEMA","SET SERVER OPTION","SET {SESSION AUTHORIZATION | SESSION_USER}","SET USAGE LIST","SIGNAL","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}","WHILE"]),rL=c(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),EL=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),nL=c(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),iL={name:"db2",tokenizerOptions:{reservedSelect:tL,reservedClauses:[...sL,...Ba,...Bi],reservedSetOperations:rL,reservedJoins:EL,reservedPhrases:nL,reservedKeywords:z_,reservedDataTypes:eL,reservedFunctionNames:Z_,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N","U&"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","%","|","&","^","~","¬=","¬>","¬<","!>","!<","^=","^>","^<","||","->","=>"]},formatOptions:{onelineClauses:[...Ba,...Bi],tabularOnelineClauses:Bi}},TL=["ARRAY_AGG","AVG","CORR","CORRELATION","COUNT","COUNT_BIG","COVAR_POP","COVARIANCE","COVAR","COVAR_SAMP","COVARIANCE_SAMP","EVERY","GROUPING","JSON_ARRAYAGG","JSON_OBJECTAGG","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","SOME","STDDEV_POP","STDDEV","STDDEV_SAMP","SUM","VAR_POP","VARIANCE","VAR","VAR_SAMP","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","ANTILOG","ARRAY_MAX_CARDINALITY","ARRAY_TRIM","ASCII","ASIN","ATAN","ATAN2","ATANH","BASE64_DECODE","BASE64_ENCODE","BIT_LENGTH","BITAND","BITANDNOT","BITNOT","BITOR","BITXOR","BSON_TO_JSON","CARDINALITY","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","COALESCE","COMPARE_DECFLOAT","CONCAT","CONTAINS","COS","COSH","COT","CURDATE","CURTIME","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK_ISO","DAYOFWEEK","DAYOFYEAR","DAYS","DBPARTITIONNAME","DBPARTITIONNUM","DECFLOAT_FORMAT","DECFLOAT_SORTKEY","DECRYPT_BINARY","DECRYPT_BIT","DECRYPT_CHAR","DECRYPT_DB","DEGREES","DIFFERENCE","DIGITS","DLCOMMENT","DLLINKTYPE","DLURLCOMPLETE","DLURLPATH","DLURLPATHONLY","DLURLSCHEME","DLURLSERVER","DLVALUE","DOUBLE_PRECISION","DOUBLE","ENCRPYT","ENCRYPT_AES","ENCRYPT_AES256","ENCRYPT_RC2","ENCRYPT_TDES","EXP","EXTRACT","FIRST_DAY","FLOOR","GENERATE_UNIQUE","GET_BLOB_FROM_FILE","GET_CLOB_FROM_FILE","GET_DBCLOB_FROM_FILE","GET_XML_FILE","GETHINT","GREATEST","HASH_MD5","HASH_ROW","HASH_SHA1","HASH_SHA256","HASH_SHA512","HASH_VALUES","HASHED_VALUE","HEX","HEXTORAW","HOUR","HTML_ENTITY_DECODE","HTML_ENTITY_ENCODE","HTTP_DELETE_BLOB","HTTP_DELETE","HTTP_GET_BLOB","HTTP_GET","HTTP_PATCH_BLOB","HTTP_PATCH","HTTP_POST_BLOB","HTTP_POST","HTTP_PUT_BLOB","HTTP_PUT","IDENTITY_VAL_LOCAL","IFNULL","INSERT","INSTR","INTERPRET","ISFALSE","ISNOTFALSE","ISNOTTRUE","ISTRUE","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_UPDATE","JSON_VALUE","JULIAN_DAY","LAND","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LN","LNOT","LOCATE_IN_STRING","LOCATE","LOG10","LOR","LOWER","LPAD","LTRIM","MAX_CARDINALITY","MAX","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MQREAD","MQREADCLOB","MQRECEIVE","MQRECEIVECLOB","MQSEND","MULTIPLY_ALT","NEXT_DAY","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","OCTET_LENGTH","OVERLAY","PI","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","RADIANS","RAISE_ERROR","RANDOM","RAND","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RIGHT","ROUND_TIMESTAMP","ROUND","RPAD","RRN","RTRIM","SCORE","SECOND","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF_BIG","TIMESTAMPDIFF","TO_CHAR","TO_CLOB","TO_DATE","TO_NUMBER","TO_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM_ARRAY","TRIM","TRUNC_TIMESTAMP","TRUNC","TRUNCATE","UCASE","UPPER","URL_DECODE","URL_ENCODE","VALUE","VARBINARY_FORMAT","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT_BINARY","VARCHAR_FORMAT","VERIFY_GROUP_FOR_USER","WEEK_ISO","WEEK","WRAP","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XOR","XSLTRANSFORM","YEAR","ZONED","BASE_TABLE","HTTP_DELETE_BLOB_VERBOSE","HTTP_DELETE_VERBOSE","HTTP_GET_BLOB_VERBOSE","HTTP_GET_VERBOSE","HTTP_PATCH_BLOB_VERBOSE","HTTP_PATCH_VERBOSE","HTTP_POST_BLOB_VERBOSE","HTTP_POST_VERBOSE","HTTP_PUT_BLOB_VERBOSE","HTTP_PUT_VERBOSE","JSON_TABLE","MQREADALL","MQREADALLCLOB","MQRECEIVEALL","MQRECEIVEALLCLOB","XMLTABLE","UNPACK","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","RATIO_TO_REPORT","ROW_NUMBER","CAST"],oL=["ABSENT","ACCORDING","ACCTNG","ACTION","ACTIVATE","ADD","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","APPEND","APPLNAME","ARRAY","ARRAY_AGG","ARRAY_TRIM","AS","ASC","ASENSITIVE","ASSOCIATE","ATOMIC","ATTACH","ATTRIBUTES","AUTHORIZATION","AUTONOMOUS","BEFORE","BEGIN","BETWEEN","BIND","BSON","BUFFERPOOL","BY","CACHE","CALL","CALLED","CARDINALITY","CASE","CAST","CHECK","CL","CLOSE","CLUSTER","COLLECT","COLLECTION","COLUMN","COMMENT","COMMIT","COMPACT","COMPARISONS","COMPRESS","CONCAT","CONCURRENT","CONDITION","CONNECT","CONNECT_BY_ROOT","CONNECTION","CONSTANT","CONSTRAINT","CONTAINS","CONTENT","CONTINUE","COPY","COUNT","COUNT_BIG","CREATE","CREATEIN","CROSS","CUBE","CUME_DIST","CURRENT","CURRENT_DATE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEACTIVATE","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFER","DEFINE","DEFINITION","DELETE","DELETING","DENSE_RANK","DENSERANK","DESC","DESCRIBE","DESCRIPTOR","DETACH","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DYNAMIC","EACH","ELSE","ELSEIF","EMPTY","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ENFORCED","ERROR","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTEND","EXTERNAL","EXTRACT","FALSE","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST_VALUE","FOR","FOREIGN","FORMAT","FREE","FREEPAGE","FROM","FULL","FUNCTION","GBPCACHE","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GROUP","HANDLER","HASH","HASH_ROW","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IGNORE","IMMEDIATE","IMPLICITLY","IN","INCLUDE","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDEXBP","INDICATOR","INF","INFINITY","INHERIT","INLINE","INNER","INOUT","INSENSITIVE","INSERT","INSERTING","INTEGRITY","INTERPRET","INTERSECT","INTO","IS","ISNULL","ISOLATION","ITERATE","JAVA","JOIN","JSON","JSON_ARRAY","JSON_ARRAYAGG","JSON_EXISTS","JSON_OBJECT","JSON_OBJECTAGG","JSON_QUERY","JSON_TABLE","JSON_VALUE","KEEP","KEY","KEYS","LABEL","LAG","LANGUAGE","LAST_VALUE","LATERAL","LEAD","LEAVE","LEFT","LEVEL2","LIKE","LIMIT","LINKTYPE","LISTAGG","LOCAL","LOCALDATE","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCATOR","LOCK","LOCKSIZE","LOG","LOGGED","LOOP","MAINTAINED","MASK","MATCHED","MATERIALIZED","MAXVALUE","MERGE","MICROSECOND","MICROSECONDS","MINPCTUSED","MINUTE","MINUTES","MINVALUE","MIRROR","MIXED","MODE","MODIFIES","MONTH","MONTHS","NAMESPACE","NAN","NATIONAL","NCHAR","NCLOB","NESTED","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT","NOTNULL","NTH_VALUE","NTILE","NULL","NULLS","NVARCHAR","OBID","OBJECT","OF","OFF","OFFSET","OLD","OLD_TABLE","OMIT","ON","ONLY","OPEN","OPTIMIZE","OPTION","OR","ORDER","ORDINALITY","ORGANIZE","OUT","OUTER","OVER","OVERLAY","OVERRIDING","PACKAGE","PADDED","PAGE","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSING","PASSWORD","PATH","PCTFREE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PERIOD","PERMISSION","PIECESIZE","PIPE","PLAN","POSITION","PREPARE","PREVVAL","PRIMARY","PRIOR","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PROGRAMID","QUERY","RANGE","RANK","RATIO_TO_REPORT","RCDFMT","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","REGEXP_LIKE","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNING","RETURNS","REVOKE","RID","RIGHT","ROLLBACK","ROLLUP","ROUTINE","ROW","ROW_NUMBER","ROWNUMBER","ROWS","RRN","RUN","SAVEPOINT","SBCS","SCALAR","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURED","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SKIP","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","SQLIND_DEFAULT","SQLIND_UNASSIGNED","STACKED","START","STARTING","STATEMENT","STATIC","STOGROUP","SUBSTRING","SUMMARY","SYNONYM","SYSTEM_TIME","SYSTEM_USER","TABLE","TABLESPACE","TABLESPACES","TAG","THEN","THREADSAFE","TO","TRANSACTION","TRANSFER","TRIGGER","TRIM","TRIM_ARRAY","TRUE","TRUNCATE","TRY_CAST","TYPE","UNDO","UNION","UNIQUE","UNIT","UNKNOWN","UNNEST","UNTIL","UPDATE","UPDATING","URI","USAGE","USE","USER","USERID","USING","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VERSIONING","VIEW","VOLATILE","WAIT","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHIN","WITHOUT","WRAPPED","WRAPPER","WRITE","WRKSTNNAME","XMLAGG","XMLATTRIBUTES","XMLCAST","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLGROUP","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTABLE","XMLTEXT","XMLVALIDATE","XSLTRANSFORM","XSROBJECT","YEAR","YEARS","YES","ZONE"],aL=["ARRAY","BIGINT","BINARY","BIT","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATA","DATALINK","DATE","DBCLOB","DECFLOAT","DECIMAL","DEC","DOUBLE","DOUBLE PRECISION","FLOAT","GRAPHIC","INT","INTEGER","LONG","NUMERIC","REAL","ROWID","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC","XML"],RL=c(["SELECT [ALL | DISTINCT]"]),AL=c(["WITH [RECURSIVE]","INTO","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","FOR READ ONLY","OPTIMIZE FOR","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","DELETE","INSERT","FOR SYSTEM NAME"]),Fa=c(["CREATE [OR REPLACE] TABLE"]),Fi=c(["CREATE [OR REPLACE] [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","WITH {NC | RR | RS | CS | UR}","DELETE FROM","DROP TABLE","ALTER TABLE","ADD [COLUMN]","ALTER [COLUMN]","DROP [COLUMN]","SET DATA TYPE","SET {GENERATED ALWAYS | GENERATED BY DEFAULT}","SET NOT NULL","SET {NOT HIDDEN | IMPLICITLY HIDDEN}","SET FIELDPROC","DROP {DEFAULT | NOT NULL | GENERATED | IDENTITY | ROW CHANGE TIMESTAMP | FIELDPROC}","TRUNCATE [TABLE]","SET [CURRENT] SCHEMA","SET CURRENT_SCHEMA","ALLOCATE CURSOR","ALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL] SQL","ALTER [SPECIFIC] {FUNCTION | PROCEDURE}","ALTER {MASK | PERMISSION | SEQUENCE | TRIGGER}","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PARAMETER | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","COMMENT ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON PARAMETER SPECIFIC {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON [TABLE FUNCTION] RETURN COLUMN","COMMENT ON [TABLE FUNCTION] RETURN COLUMN SPECIFIC [PROCEDURE | ROUTINE]","COMMIT [WORK] [HOLD]","CONNECT [TO | RESET] USER","CREATE [OR REPLACE] {ALIAS | FUNCTION | MASK | PERMISSION | PROCEDURE | SEQUENCE | TRIGGER | VARIABLE}","CREATE [ENCODED VECTOR] INDEX","CREATE UNIQUE [WHERE NOT NULL] INDEX","CREATE SCHEMA","CREATE TYPE","DEALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL]","DECLARE CURSOR","DECLARE GLOBAL TEMPORARY TABLE","DECLARE","DESCRIBE CURSOR","DESCRIBE INPUT","DESCRIBE [OUTPUT]","DESCRIBE {PROCEDURE | ROUTINE}","DESCRIBE TABLE","DISCONNECT ALL [SQL]","DISCONNECT [CURRENT]","DROP {ALIAS | INDEX | MASK | PACKAGE | PERMISSION | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT} [IF EXISTS]","DROP [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE} [IF EXISTS]","END DECLARE SECTION","EXECUTE [IMMEDIATE]","FREE LOCATOR","GET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","GET [CURRENT | STACKED] DIAGNOSTICS","GRANT {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","HOLD LOCATOR","INCLUDE","LABEL ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","LABEL ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","LOCK TABLE","OPEN","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX] TO","REVOKE {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","ROLLBACK [WORK] [HOLD | TO SAVEPOINT]","SAVEPOINT","SET CONNECTION","SET CURRENT {DEBUG MODE | DECFLOAT ROUNDING MODE | DEGREE | IMPLICIT XMLPARSE OPTION | TEMPORAL SYSTEM_TIME}","SET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","SET ENCRYPTION PASSWORD","SET OPTION","SET {[CURRENT [FUNCTION]] PATH | CURRENT_PATH}","SET RESULT SETS [WITH RETURN [TO CALLER | TO CLIENT]]","SET SESSION AUTHORIZATION","SET SESSION_USER","SET TRANSACTION","SIGNAL SQLSTATE [VALUE]","TAG","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}"]),SL=c(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),IL=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT | RIGHT] EXCEPTION JOIN","{INNER | CROSS} JOIN"]),OL=c(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),lL={name:"db2i",tokenizerOptions:{reservedSelect:RL,reservedClauses:[...AL,...Fa,...Fi],reservedSetOperations:SL,reservedJoins:IL,reservedPhrases:OL,reservedKeywords:oL,reservedDataTypes:aL,reservedFunctionNames:TL,nestedBlockComments:!0,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","¬=","¬>","¬<","!>","!<","||","=>"]},formatOptions:{onelineClauses:[...Fa,...Fi],tabularOnelineClauses:Fi}},NL=["ABS","ACOS","ASIN","ATAN","BIN","BROUND","CBRT","CEIL","CEILING","CONV","COS","DEGREES","EXP","FACTORIAL","FLOOR","GREATEST","HEX","LEAST","LN","LOG","LOG10","LOG2","NEGATIVE","PI","PMOD","POSITIVE","POW","POWER","RADIANS","RAND","ROUND","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIN","SQRT","TAN","UNHEX","WIDTH_BUCKET","ARRAY_CONTAINS","MAP_KEYS","MAP_VALUES","SIZE","SORT_ARRAY","BINARY","CAST","ADD_MONTHS","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","QUARTER","SECOND","TIMESTAMP","TO_DATE","TO_UTC_TIMESTAMP","TRUNC","UNIX_TIMESTAMP","WEEKOFYEAR","YEAR","ASSERT_TRUE","COALESCE","IF","ISNOTNULL","ISNULL","NULLIF","NVL","ASCII","BASE64","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONTEXT_NGRAMS","DECODE","ELT","ENCODE","FIELD","FIND_IN_SET","FORMAT_NUMBER","GET_JSON_OBJECT","IN_FILE","INITCAP","INSTR","LCASE","LENGTH","LEVENSHTEIN","LOCATE","LOWER","LPAD","LTRIM","NGRAMS","OCTET_LENGTH","PARSE_URL","PRINTF","QUOTE","REGEXP_EXTRACT","REGEXP_REPLACE","REPEAT","REVERSE","RPAD","RTRIM","SENTENCES","SOUNDEX","SPACE","SPLIT","STR_TO_MAP","SUBSTR","SUBSTRING","TRANSLATE","TRIM","UCASE","UNBASE64","UPPER","MASK","MASK_FIRST_N","MASK_HASH","MASK_LAST_N","MASK_SHOW_FIRST_N","MASK_SHOW_LAST_N","AES_DECRYPT","AES_ENCRYPT","CRC32","CURRENT_DATABASE","CURRENT_USER","HASH","JAVA_METHOD","LOGGED_IN_USER","MD5","REFLECT","SHA","SHA1","SHA2","SURROGATE_KEY","VERSION","AVG","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COVAR_POP","COVAR_SAMP","HISTOGRAM_NUMERIC","MAX","MIN","NTILE","PERCENTILE","PERCENTILE_APPROX","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","EXPLODE","INLINE","JSON_TUPLE","PARSE_URL_TUPLE","POSEXPLODE","STACK","LEAD","LAG","FIRST_VALUE","LAST_VALUE","RANK","ROW_NUMBER","DENSE_RANK","CUME_DIST","PERCENT_RANK","NTILE"],cL=["ADD","ADMIN","AFTER","ANALYZE","ARCHIVE","ASC","BEFORE","BUCKET","BUCKETS","CASCADE","CHANGE","CLUSTER","CLUSTERED","CLUSTERSTATUS","COLLECTION","COLUMNS","COMMENT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONTINUE","DATA","DATABASES","DATETIME","DAY","DBPROPERTIES","DEFERRED","DEFINED","DELIMITED","DEPENDENCY","DESC","DIRECTORIES","DIRECTORY","DISABLE","DISTRIBUTE","ELEM_TYPE","ENABLE","ESCAPED","EXCLUSIVE","EXPLAIN","EXPORT","FIELDS","FILE","FILEFORMAT","FIRST","FORMAT","FORMATTED","FUNCTIONS","HOLD_DDLTIME","HOUR","IDXPROPERTIES","IGNORE","INDEX","INDEXES","INPATH","INPUTDRIVER","INPUTFORMAT","ITEMS","JAR","KEYS","KEY_TYPE","LIMIT","LINES","LOAD","LOCATION","LOCK","LOCKS","LOGICAL","LONG","MAPJOIN","MATERIALIZED","METADATA","MINUS","MINUTE","MONTH","MSCK","NOSCAN","NO_DROP","OFFLINE","OPTION","OUTPUTDRIVER","OUTPUTFORMAT","OVERWRITE","OWNER","PARTITIONED","PARTITIONS","PLUS","PRETTY","PRINCIPALS","PROTECTION","PURGE","READ","READONLY","REBUILD","RECORDREADER","RECORDWRITER","RELOAD","RENAME","REPAIR","REPLACE","REPLICATION","RESTRICT","REWRITE","ROLE","ROLES","SCHEMA","SCHEMAS","SECOND","SEMI","SERDE","SERDEPROPERTIES","SERVER","SETS","SHARED","SHOW","SHOW_DATABASE","SKEWED","SORT","SORTED","SSL","STATISTICS","STORED","STREAMTABLE","STRING","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","TINYINT","TOUCH","TRANSACTIONS","UNARCHIVE","UNDO","UNIONTYPE","UNLOCK","UNSET","UNSIGNED","URI","USE","UTC","UTCTIMESTAMP","VALUE_TYPE","VIEW","WHILE","YEAR","AUTOCOMMIT","ISOLATION","LEVEL","OFFSET","SNAPSHOT","TRANSACTION","WORK","WRITE","ABORT","KEY","LAST","NORELY","NOVALIDATE","NULLS","RELY","VALIDATE","DETAIL","DOW","EXPRESSION","OPERATOR","QUARTER","SUMMARY","VECTORIZATION","WEEK","YEARS","MONTHS","WEEKS","DAYS","HOURS","MINUTES","SECONDS","TIMESTAMPTZ","ZONE","ALL","ALTER","AND","AS","AUTHORIZATION","BETWEEN","BOTH","BY","CASE","CAST","COLUMN","CONF","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIMESTAMP","CURSOR","DATABASE","DELETE","DESCRIBE","DISTINCT","DROP","ELSE","END","EXCHANGE","EXISTS","EXTENDED","EXTERNAL","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","FUNCTION","GRANT","GROUP","GROUPING","HAVING","IF","IMPORT","IN","INNER","INSERT","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LESS","LIKE","LOCAL","MACRO","MORE","NONE","NOT","NULL","OF","ON","OR","ORDER","OUT","OUTER","OVER","PARTIALSCAN","PARTITION","PERCENT","PRECEDING","PRESERVE","PROCEDURE","RANGE","READS","REDUCE","REVOKE","RIGHT","ROLLUP","ROW","ROWS","SELECT","SET","TABLE","TABLESAMPLE","THEN","TO","TRANSFORM","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNION","UNIQUEJOIN","UPDATE","USER","USING","UTC_TMESTAMP","VALUES","WHEN","WHERE","WINDOW","WITH","COMMIT","ONLY","REGEXP","RLIKE","ROLLBACK","START","CACHE","CONSTRAINT","FOREIGN","PRIMARY","REFERENCES","DAYOFWEEK","EXTRACT","FLOOR","VIEWS","TIME","SYNC","TEXTFILE","SEQUENCEFILE","ORC","CSV","TSV","PARQUET","AVRO","RCFILE","JSONFILE","INPUTFORMAT","OUTPUTFORMAT"],uL=["ARRAY","BIGINT","BINARY","BOOLEAN","CHAR","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MAP","NUMERIC","PRECISION","SMALLINT","STRUCT","TIMESTAMP","VARCHAR"],_L=c(["SELECT [ALL | DISTINCT]"]),LL=c(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT INTO [TABLE]","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT [VALUES]","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),Ga=c(["CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]"]),Gi=c(["CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","RENAME TO","TRUNCATE [TABLE]","ALTER","CREATE","USE","DESCRIBE","DROP","FETCH","SHOW","STORED AS","STORED BY","ROW FORMAT"]),dL=c(["UNION [ALL | DISTINCT]"]),CL=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","LEFT SEMI JOIN"]),fL=c(["{ROWS | RANGE} BETWEEN"]),hL={name:"hive",tokenizerOptions:{reservedSelect:_L,reservedClauses:[...LL,...Ga,...Gi],reservedSetOperations:dL,reservedJoins:CL,reservedPhrases:fL,reservedKeywords:cL,reservedDataTypes:uL,reservedFunctionNames:NL,extraParens:["[]"],stringTypes:['""-bs',"''-bs"],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||"]},formatOptions:{onelineClauses:[...Ga,...Gi],tabularOnelineClauses:Gi}};function ni(t){return t.map((e,s)=>{const r=t[s+1]||Fr;if(Ks.SET(e)&&r.text==="(")return Ve(ge({},e),{type:"RESERVED_FUNCTION_NAME"});const E=t[s-1]||Fr;return Ks.VALUES(e)&&E.text==="="?Ve(ge({},e),{type:"RESERVED_FUNCTION_NAME"}):e})}var DL=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DELETE_DOMAIN_ID","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DO_DOMAIN_IDS","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FOR","FORCE","FOREIGN","FROM","FULLTEXT","GENERAL","GRANT","GROUP","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IGNORE_DOMAIN_IDS","IGNORE_SERVER_IDS","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTERVAL","INTO","IS","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MASTER_HEARTBEAT_PERIOD","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NULL","OFFSET","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PAGE_CHECKSUM","PARSE_VCOL_EXPR","PARTITION","POSITION","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","READ_WRITE","RECURSIVE","REF_SYSTEM_ID","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","RETURNING","REVOKE","RIGHT","RLIKE","ROW_NUMBER","ROWS","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SLOW","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STATS_AUTO_RECALC","STATS_PERSISTENT","STATS_SAMPLE_PAGES","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],pL=["BIGINT","BINARY","BIT","BLOB","CHAR BYTE","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],PL=["ADDDATE","ADD_MONTHS","BIT_AND","BIT_OR","BIT_XOR","CAST","COUNT","CUME_DIST","CURDATE","CURTIME","DATE_ADD","DATE_SUB","DATE_FORMAT","DECODE","DENSE_RANK","EXTRACT","FIRST_VALUE","GROUP_CONCAT","JSON_ARRAYAGG","JSON_OBJECTAGG","LAG","LEAD","MAX","MEDIAN","MID","MIN","NOW","NTH_VALUE","NTILE","POSITION","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","ROW_NUMBER","SESSION_USER","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUBDATE","SUBSTR","SUBSTRING","SUM","SYSTEM_USER","TRIM","TRIM_ORACLE","VARIANCE","VAR_POP","VAR_SAMP","ABS","ACOS","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ASIN","ATAN","ATAN2","BENCHMARK","BIN","BINLOG_GTID_POS","BIT_COUNT","BIT_LENGTH","CEIL","CEILING","CHARACTER_LENGTH","CHAR_LENGTH","CHR","COERCIBILITY","COLUMN_CHECK","COLUMN_EXISTS","COLUMN_LIST","COLUMN_JSON","COMPRESS","CONCAT","CONCAT_OPERATOR_ORACLE","CONCAT_WS","CONNECTION_ID","CONV","CONVERT_TZ","COS","COT","CRC32","DATEDIFF","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEGREES","DECODE_HISTOGRAM","DECODE_ORACLE","DES_DECRYPT","DES_ENCRYPT","ELT","ENCODE","ENCRYPT","EXP","EXPORT_SET","EXTRACTVALUE","FIELD","FIND_IN_SET","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GET_LOCK","GREATEST","HEX","IFNULL","INSTR","ISNULL","IS_FREE_LOCK","IS_USED_LOCK","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_COMPACT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_DETAILED","JSON_EXISTS","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_LOOSE","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_QUERY","JSON_QUOTE","JSON_OBJECT","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_SEARCH","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAST_DAY","LAST_INSERT_ID","LCASE","LEAST","LENGTH","LENGTHB","LN","LOAD_FILE","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LPAD_ORACLE","LTRIM","LTRIM_ORACLE","MAKEDATE","MAKETIME","MAKE_SET","MASTER_GTID_WAIT","MASTER_POS_WAIT","MD5","MONTHNAME","NAME_CONST","NVL","NVL2","OCT","OCTET_LENGTH","ORD","PERIOD_ADD","PERIOD_DIFF","PI","POW","POWER","QUOTE","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","RADIANS","RAND","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPLACE_ORACLE","REVERSE","ROUND","RPAD","RPAD_ORACLE","RTRIM","RTRIM_ORACLE","SEC_TO_TIME","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SPACE","SQRT","STRCMP","STR_TO_DATE","SUBSTR_ORACLE","SUBSTRING_INDEX","SUBTIME","SYS_GUID","TAN","TIMEDIFF","TIME_FORMAT","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_SECONDS","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UUID","UUID_SHORT","VERSION","WEEKDAY","WEEKOFYEAR","WSREP_LAST_WRITTEN_GTID","WSREP_LAST_SEEN_GTID","WSREP_SYNC_WAIT_UPTO_GTID","YEARWEEK","COALESCE","NULLIF"],ML=c(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),UL=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET","RETURNING"]),ba=c(["CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]"]),bi=c(["CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]","ADD [COLUMN] [IF NOT EXISTS]","{CHANGE | MODIFY} [COLUMN] [IF EXISTS]","DROP [COLUMN] [IF EXISTS]","RENAME [TO]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","SET {VISIBLE | INVISIBLE}","TRUNCATE [TABLE]","ALTER DATABASE","ALTER DATABASE COMMENT","ALTER EVENT","ALTER FUNCTION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SCHEMA COMMENT","ALTER SEQUENCE","ALTER SERVER","ALTER USER","ALTER VIEW","ANALYZE","ANALYZE TABLE","BACKUP LOCK","BACKUP STAGE","BACKUP UNLOCK","BEGIN","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHECK TABLE","CHECK VIEW","CHECKSUM TABLE","COMMIT","CREATE AGGREGATE FUNCTION","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE INDEX","CREATE PROCEDURE","CREATE ROLE","CREATE SEQUENCE","CREATE SERVER","CREATE SPATIAL INDEX","CREATE TRIGGER","CREATE UNIQUE INDEX","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP INDEX","DROP PREPARE","DROP PROCEDURE","DROP ROLE","DROP SEQUENCE","DROP SERVER","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GET DIAGNOSTICS","GET DIAGNOSTICS CONDITION","GRANT","HANDLER","HELP","INSTALL PLUGIN","INSTALL SONAME","KILL","LOAD DATA INFILE","LOAD INDEX INTO CACHE","LOAD XML INFILE","LOCK TABLE","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","PURGE MASTER LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","REPAIR VIEW","RESET MASTER","RESET QUERY CACHE","RESET REPLICA","RESET SLAVE","RESIGNAL","REVOKE","ROLLBACK","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET GLOBAL TRANSACTION","SET NAMES","SET PASSWORD","SET ROLE","SET STATEMENT","SET TRANSACTION","SHOW","SHOW ALL REPLICAS STATUS","SHOW ALL SLAVES STATUS","SHOW AUTHORS","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW BINLOG STATUS","SHOW CHARACTER SET","SHOW CLIENT_STATISTICS","SHOW COLLATION","SHOW COLUMNS","SHOW CONTRIBUTORS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PACKAGE","SHOW CREATE PACKAGE BODY","SHOW CREATE PROCEDURE","SHOW CREATE SEQUENCE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINE INNODB STATUS","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW EXPLAIN","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW INDEXES","SHOW INDEX_STATISTICS","SHOW KEYS","SHOW LOCALES","SHOW MASTER LOGS","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PACKAGE BODY CODE","SHOW PACKAGE BODY STATUS","SHOW PACKAGE STATUS","SHOW PLUGINS","SHOW PLUGINS SONAME","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW QUERY_RESPONSE_TIME","SHOW RELAYLOG EVENTS","SHOW REPLICA","SHOW REPLICA HOSTS","SHOW REPLICA STATUS","SHOW SCHEMAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW SLAVE STATUS","SHOW STATUS","SHOW STORAGE ENGINES","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW USER_STATISTICS","SHOW VARIABLES","SHOW WARNINGS","SHOW WSREP_MEMBERSHIP","SHOW WSREP_STATUS","SHUTDOWN","SIGNAL","START ALL REPLICAS","START ALL SLAVES","START REPLICA","START SLAVE","START TRANSACTION","STOP ALL REPLICAS","STOP ALL SLAVES","STOP REPLICA","STOP SLAVE","UNINSTALL PLUGIN","UNINSTALL SONAME","UNLOCK TABLE","USE","XA BEGIN","XA COMMIT","XA END","XA PREPARE","XA RECOVER","XA ROLLBACK","XA START"]),yL=c(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]","MINUS [ALL | DISTINCT]"]),mL=c(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),BL=c(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),FL={name:"mariadb",tokenizerOptions:{reservedSelect:ML,reservedClauses:[...UL,...ba,...bi],reservedSetOperations:yL,reservedJoins:mL,reservedPhrases:BL,supportsXor:!0,reservedKeywords:DL,reservedDataTypes:pL,reservedFunctionNames:PL,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","&&","||","!","*.*"],postProcess:ni},formatOptions:{onelineClauses:[...ba,...bi],tabularOnelineClauses:bi}},GL=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CUBE","CUME_DIST","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DENSE_RANK","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","EMPTY","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FIRST_VALUE","FOR","FORCE","FOREIGN","FROM","FULLTEXT","FUNCTION","GENERATED","GET","GRANT","GROUP","GROUPING","GROUPS","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","INTERSECT","INTERVAL","INTO","IO_AFTER_GTIDS","IO_BEFORE_GTIDS","IS","ITERATE","JOIN","JSON_TABLE","KEY","KEYS","KILL","LAG","LAST_VALUE","LATERAL","LEAD","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LONG","LOOP","LOW_PRIORITY","MASTER_BIND","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NTH_VALUE","NTILE","NULL","OF","ON","OPTIMIZE","OPTIMIZER_COSTS","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PARTITION","PERCENT_RANK","PRIMARY","PROCEDURE","PURGE","RANGE","RANK","READ","READS","READ_WRITE","RECURSIVE","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","REVOKE","RIGHT","RLIKE","ROW","ROWS","ROW_NUMBER","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STORED","STRAIGHT_JOIN","SYSTEM","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","VIRTUAL","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],bL=["BIGINT","BINARY","BIT","BLOB","BOOL","BOOLEAN","CHAR","CHARACTER","DATE","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],gL=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BINARY","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","CAN_ACCESS_COLUMN","CAN_ACCESS_DATABASE","CAN_ACCESS_TABLE","CAN_ACCESS_USER","CAN_ACCESS_VIEW","CAST","CEIL","CEILING","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEFAULT","DEGREES","DENSE_RANK","DIV","ELT","EXP","EXPORT_SET","EXTRACT","EXTRACTVALUE","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_PICO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOMCOLLECTION","GEOMETRYCOLLECTION","GET_DD_COLUMN_PRIVILEGES","GET_DD_CREATE_OPTIONS","GET_DD_INDEX_SUB_PART_LENGTH","GET_FORMAT","GET_LOCK","GREATEST","GROUP_CONCAT","GROUPING","GTID_SUBSET","GTID_SUBTRACT","HEX","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INSERT","INSTR","INTERNAL_AUTO_INCREMENT","INTERNAL_AVG_ROW_LENGTH","INTERNAL_CHECK_TIME","INTERNAL_CHECKSUM","INTERNAL_DATA_FREE","INTERNAL_DATA_LENGTH","INTERNAL_DD_CHAR_LENGTH","INTERNAL_GET_COMMENT_OR_ERROR","INTERNAL_GET_ENABLED_ROLE_JSON","INTERNAL_GET_HOSTNAME","INTERNAL_GET_USERNAME","INTERNAL_GET_VIEW_WARNING_OR_ERROR","INTERNAL_INDEX_COLUMN_CARDINALITY","INTERNAL_INDEX_LENGTH","INTERNAL_IS_ENABLED_ROLE","INTERNAL_IS_MANDATORY_ROLE","INTERNAL_KEYS_DISABLED","INTERNAL_MAX_DATA_LENGTH","INTERNAL_TABLE_ROWS","INTERNAL_UPDATE_TIME","INTERVAL","IS","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS NOT","IS NOT NULL","IS NULL","IS_USED_LOCK","IS_UUID","ISNULL","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_ARRAYAGG","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SCHEMA_VALID","JSON_SCHEMA_VALIDATION_REPORT","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TABLE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LINESTRING","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MATCH","MAX","MBRCONTAINS","MBRCOVEREDBY","MBRCOVERS","MBRDISJOINT","MBREQUALS","MBRINTERSECTS","MBROVERLAPS","MBRTOUCHES","MBRWITHIN","MD5","MEMBER OF","MICROSECOND","MID","MIN","MINUTE","MOD","MONTH","MONTHNAME","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","NAME_CONST","NOT","NOT IN","NOT LIKE","NOT REGEXP","NOW","NTH_VALUE","NTILE","NULLIF","OCT","OCTET_LENGTH","ORD","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","POINT","POLYGON","POSITION","POW","POWER","PS_CURRENT_THREAD_ID","PS_THREAD_ID","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROLES_GRAPHML","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_BUFFER","ST_BUFFER_STRATEGY","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_CONVEXHULL","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DISTANCE_SPHERE","ST_ENDPOINT","ST_ENVELOPE","ST_EQUALS","ST_EXTERIORRING","ST_FRECHETDISTANCE","ST_GEOHASH","ST_GEOMCOLLFROMTEXT","ST_GEOMCOLLFROMWKB","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMGEOJSON","ST_GEOMFROMTEXT","ST_GEOMFROMWKB","ST_HAUSDORFFDISTANCE","ST_INTERIORRINGN","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISSIMPLE","ST_ISVALID","ST_LATFROMGEOHASH","ST_LATITUDE","ST_LENGTH","ST_LINEFROMTEXT","ST_LINEFROMWKB","ST_LINEINTERPOLATEPOINT","ST_LINEINTERPOLATEPOINTS","ST_LONGFROMGEOHASH","ST_LONGITUDE","ST_MAKEENVELOPE","ST_MLINEFROMTEXT","ST_MLINEFROMWKB","ST_MPOINTFROMTEXT","ST_MPOINTFROMWKB","ST_MPOLYFROMTEXT","ST_MPOLYFROMWKB","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINTATDISTANCE","ST_POINTFROMGEOHASH","ST_POINTFROMTEXT","ST_POINTFROMWKB","ST_POINTN","ST_POLYFROMTEXT","ST_POLYFROMWKB","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SWAPXY","ST_SYMDIFFERENCE","ST_TOUCHES","ST_TRANSFORM","ST_UNION","ST_VALIDATE","ST_WITHIN","ST_X","ST_Y","STATEMENT_DIGEST","STATEMENT_DIGEST_TEXT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRIM","TRUNCATE","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VALUES","VAR_POP","VAR_SAMP","VARIANCE","VERSION","WAIT_FOR_EXECUTED_GTID_SET","WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK"],HL=c(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),YL=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET"]),ga=c(["CREATE [TEMPORARY] TABLE [IF NOT EXISTS]"]),gi=c(["CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER EVENT","ALTER FUNCTION","ALTER INSTANCE","ALTER LOGFILE GROUP","ALTER PROCEDURE","ALTER RESOURCE GROUP","ALTER SERVER","ALTER TABLESPACE","ALTER USER","ALTER VIEW","ANALYZE TABLE","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK TABLE","CHECKSUM TABLE","CLONE","COMMIT","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE FUNCTION","CREATE INDEX","CREATE LOGFILE GROUP","CREATE PROCEDURE","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SERVER","CREATE SPATIAL REFERENCE SYSTEM","CREATE TABLESPACE","CREATE TRIGGER","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP FUNCTION","DROP INDEX","DROP LOGFILE GROUP","DROP PROCEDURE","DROP RESOURCE GROUP","DROP ROLE","DROP SERVER","DROP SPATIAL REFERENCE SYSTEM","DROP TABLESPACE","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GRANT","HANDLER","HELP","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SOURCE_POS_WAIT","START GROUP_REPLICATION","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP REPLICA","STOP SLAVE","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),vL=c(["UNION [ALL | DISTINCT]"]),wL=c(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),VL=c(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),WL={name:"mysql",tokenizerOptions:{reservedSelect:HL,reservedClauses:[...YL,...ga,...gi],reservedSetOperations:vL,reservedJoins:wL,reservedPhrases:VL,supportsXor:!0,reservedKeywords:GL,reservedDataTypes:bL,reservedFunctionNames:gL,stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!","*.*"],postProcess:ni},formatOptions:{onelineClauses:[...ga,...gi],tabularOnelineClauses:gi}},xL=["ADD","ALL","ALTER","ANALYZE","AND","ARRAY","AS","ASC","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DEFAULT","DELAYED","DELETE","DESC","DESCRIBE","DISTINCT","DISTINCTROW","DIV","DOUBLE","DROP","DUAL","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FOR","FORCE","FOREIGN","FROM","FULLTEXT","GENERATED","GRANT","GROUP","GROUPS","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","ILIKE","IN","INDEX","INFILE","INNER","INOUT","INSERT","INTERSECT","INTERVAL","INTO","IS","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LONG","LOW_PRIORITY","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","NATURAL","NOT","NO_WRITE_TO_BINLOG","NULL","OF","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PARTITION","PRIMARY","PROCEDURE","RANGE","READ","RECURSIVE","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESTRICT","REVOKE","RIGHT","RLIKE","ROW","ROWS","SECOND_MICROSECOND","SELECT","SET","SHOW","SPATIAL","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STATS_EXTENDED","STORED","STRAIGHT_JOIN","TABLE","TABLESAMPLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","TiDB_CURRENT_TSO","UNION","UNIQUE","UNLOCK","UNSIGNED","UNTIL","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","VIRTUAL","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],XL=["BIGINT","BINARY","BIT","BLOB","BOOL","BOOLEAN","CHAR","CHARACTER","DATE","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],KL=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","BITAND","BITNEG","BITOR","BITXOR","CASE","CAST","CEIL","CEILING","CHAR_FUNC","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_RESOURCE_GROUP","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT_FUNC","DEGREES","DENSE_RANK","DES_DECRYPT","DES_ENCRYPT","DIV","ELT","ENCODE","ENCRYPT","EQ","EXP","EXPORT_SET","EXTRACT","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_NANO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GE","GET_FORMAT","GET_LOCK","GETPARAM","GREATEST","GROUP_CONCAT","GROUPING","GT","HEX","HOUR","IF","IFNULL","ILIKE","INET6_ATON","INET6_NTOA","INET_ATON","INET_NTOA","INSERT_FUNC","INSTR","INTDIV","INTERVAL","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS_USED_LOCK","IS_UUID","ISFALSE","ISNULL","ISTRUE","JSON_ARRAY","JSON_ARRAYAGG","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MEMBEROF","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LASTVAL","LCASE","LE","LEAD","LEAST","LEFT","LEFTSHIFT","LENGTH","LIKE","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LT","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MAX","MD5","MICROSECOND","MID","MIN","MINUS","MINUTE","MOD","MONTH","MONTHNAME","MUL","NAME_CONST","NE","NEXTVAL","NOT","NOW","NTH_VALUE","NTILE","NULLEQ","OCT","OCTET_LENGTH","OLD_PASSWORD","ORD","PASSWORD_FUNC","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","PLUS","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RIGHTSHIFT","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SETVAL","SETVAR","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SM3","SPACE","SQRT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIDB_BOUNDED_STALENESS","TIDB_CURRENT_TSO","TIDB_DECODE_BINARY_PLAN","TIDB_DECODE_KEY","TIDB_DECODE_PLAN","TIDB_DECODE_SQL_DIGESTS","TIDB_ENCODE_SQL_DIGEST","TIDB_IS_DDL_OWNER","TIDB_PARSE_TSO","TIDB_PARSE_TSO_LOGICAL","TIDB_ROW_CHECKSUM","TIDB_SHARD","TIDB_VERSION","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRANSLATE","TRIM","TRUNCATE","UCASE","UNARYMINUS","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VAR_POP","VAR_SAMP","VARIANCE","VERSION","VITESS_HASH","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK"],$L=c(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),JL=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET"]),Ha=c(["CREATE [TEMPORARY] TABLE [IF NOT EXISTS]"]),Hi=c(["CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER INSTANCE","ALTER RESOURCE GROUP","ALTER SEQUENCE","ALTER USER","ALTER VIEW","ANALYZE TABLE","CHECK TABLE","CHECKSUM TABLE","COMMIT","CREATE DATABASE","CREATE INDEX","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SEQUENCE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP INDEX","DROP RESOURCE GROUP","DROP ROLE","DROP TABLESPACE","DROP USER","DROP VIEW","EXPLAIN","FLUSH","GRANT","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOCK INSTANCE FOR BACKUP","LOCK TABLES","OPTIMIZE TABLE","PREPARE","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE"]),kL=c(["UNION [ALL | DISTINCT]"]),qL=c(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),QL=c(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),jL={name:"tidb",tokenizerOptions:{reservedSelect:$L,reservedClauses:[...JL,...Ha,...Hi],reservedSetOperations:kL,reservedJoins:qL,reservedPhrases:QL,supportsXor:!0,reservedKeywords:xL,reservedDataTypes:XL,reservedFunctionNames:KL,stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!","*.*"],postProcess:ni},formatOptions:{onelineClauses:[...Ha,...Hi],tabularOnelineClauses:Hi}},ZL=["ABORT","ABS","ACOS","ADVISOR","ARRAY_AGG","ARRAY_AGG","ARRAY_APPEND","ARRAY_AVG","ARRAY_BINARY_SEARCH","ARRAY_CONCAT","ARRAY_CONTAINS","ARRAY_COUNT","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_FLATTEN","ARRAY_IFNULL","ARRAY_INSERT","ARRAY_INTERSECT","ARRAY_LENGTH","ARRAY_MAX","ARRAY_MIN","ARRAY_MOVE","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_PUT","ARRAY_RANGE","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_REPLACE","ARRAY_REVERSE","ARRAY_SORT","ARRAY_STAR","ARRAY_SUM","ARRAY_SYMDIFF","ARRAY_SYMDIFF1","ARRAY_SYMDIFFN","ARRAY_UNION","ASIN","ATAN","ATAN2","AVG","BASE64","BASE64_DECODE","BASE64_ENCODE","BITAND ","BITCLEAR ","BITNOT ","BITOR ","BITSET ","BITSHIFT ","BITTEST ","BITXOR ","CEIL","CLOCK_LOCAL","CLOCK_MILLIS","CLOCK_STR","CLOCK_TZ","CLOCK_UTC","COALESCE","CONCAT","CONCAT2","CONTAINS","CONTAINS_TOKEN","CONTAINS_TOKEN_LIKE","CONTAINS_TOKEN_REGEXP","COS","COUNT","COUNT","COUNTN","CUME_DIST","CURL","DATE_ADD_MILLIS","DATE_ADD_STR","DATE_DIFF_MILLIS","DATE_DIFF_STR","DATE_FORMAT_STR","DATE_PART_MILLIS","DATE_PART_STR","DATE_RANGE_MILLIS","DATE_RANGE_STR","DATE_TRUNC_MILLIS","DATE_TRUNC_STR","DECODE","DECODE_JSON","DEGREES","DENSE_RANK","DURATION_TO_STR","ENCODED_SIZE","ENCODE_JSON","EXP","FIRST_VALUE","FLOOR","GREATEST","HAS_TOKEN","IFINF","IFMISSING","IFMISSINGORNULL","IFNAN","IFNANORINF","IFNULL","INITCAP","ISARRAY","ISATOM","ISBITSET","ISBOOLEAN","ISNUMBER","ISOBJECT","ISSTRING","LAG","LAST_VALUE","LEAD","LEAST","LENGTH","LN","LOG","LOWER","LTRIM","MAX","MEAN","MEDIAN","META","MILLIS","MILLIS_TO_LOCAL","MILLIS_TO_STR","MILLIS_TO_TZ","MILLIS_TO_UTC","MILLIS_TO_ZONE_NAME","MIN","MISSINGIF","NANIF","NEGINFIF","NOW_LOCAL","NOW_MILLIS","NOW_STR","NOW_TZ","NOW_UTC","NTH_VALUE","NTILE","NULLIF","NVL","NVL2","OBJECT_ADD","OBJECT_CONCAT","OBJECT_INNER_PAIRS","OBJECT_INNER_VALUES","OBJECT_LENGTH","OBJECT_NAMES","OBJECT_PAIRS","OBJECT_PUT","OBJECT_REMOVE","OBJECT_RENAME","OBJECT_REPLACE","OBJECT_UNWRAP","OBJECT_VALUES","PAIRS","PERCENT_RANK","PI","POLY_LENGTH","POSINFIF","POSITION","POWER","RADIANS","RANDOM","RANK","RATIO_TO_REPORT","REGEXP_CONTAINS","REGEXP_LIKE","REGEXP_MATCHES","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGEX_CONTAINS","REGEX_LIKE","REGEX_MATCHES","REGEX_POSITION","REGEX_REPLACE","REGEX_SPLIT","REPEAT","REPLACE","REVERSE","ROUND","ROW_NUMBER","RTRIM","SEARCH","SEARCH_META","SEARCH_SCORE","SIGN","SIN","SPLIT","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DURATION","STR_TO_MILLIS","STR_TO_TZ","STR_TO_UTC","STR_TO_ZONE_NAME","SUBSTR","SUFFIXES","SUM","TAN","TITLE","TOARRAY","TOATOM","TOBOOLEAN","TOKENS","TOKENS","TONUMBER","TOOBJECT","TOSTRING","TRIM","TRUNC","UPPER","UUID","VARIANCE","VARIANCE_POP","VARIANCE_SAMP","VAR_POP","VAR_SAMP","WEEKDAY_MILLIS","WEEKDAY_STR","CAST"],zL=["ADVISE","ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","AT","BEGIN","BETWEEN","BINARY","BOOLEAN","BREAK","BUCKET","BUILD","BY","CALL","CASE","CAST","CLUSTER","COLLATE","COLLECTION","COMMIT","COMMITTED","CONNECT","CONTINUE","CORRELATED","COVER","CREATE","CURRENT","DATABASE","DATASET","DATASTORE","DECLARE","DECREMENT","DELETE","DERIVED","DESC","DESCRIBE","DISTINCT","DO","DROP","EACH","ELEMENT","ELSE","END","EVERY","EXCEPT","EXCLUDE","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FILTER","FIRST","FLATTEN","FLUSH","FOLLOWING","FOR","FORCE","FROM","FTS","FUNCTION","GOLANG","GRANT","GROUP","GROUPS","GSI","HASH","HAVING","IF","IGNORE","ILIKE","IN","INCLUDE","INCREMENT","INDEX","INFER","INLINE","INNER","INSERT","INTERSECT","INTO","IS","ISOLATION","JAVASCRIPT","JOIN","KEY","KEYS","KEYSPACE","KNOWN","LANGUAGE","LAST","LEFT","LET","LETTING","LEVEL","LIKE","LIMIT","LSM","MAP","MAPPING","MATCHED","MATERIALIZED","MERGE","MINUS","MISSING","NAMESPACE","NEST","NL","NO","NOT","NTH_VALUE","NULL","NULLS","NUMBER","OBJECT","OFFSET","ON","OPTION","OPTIONS","OR","ORDER","OTHERS","OUTER","OVER","PARSE","PARTITION","PASSWORD","PATH","POOL","PRECEDING","PREPARE","PRIMARY","PRIVATE","PRIVILEGE","PROBE","PROCEDURE","PUBLIC","RANGE","RAW","REALM","REDUCE","RENAME","RESPECT","RETURN","RETURNING","REVOKE","RIGHT","ROLE","ROLLBACK","ROW","ROWS","SATISFIES","SAVEPOINT","SCHEMA","SCOPE","SELECT","SELF","SEMI","SET","SHOW","SOME","START","STATISTICS","STRING","SYSTEM","THEN","TIES","TO","TRAN","TRANSACTION","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNDER","UNION","UNIQUE","UNKNOWN","UNNEST","UNSET","UPDATE","UPSERT","USE","USER","USING","VALIDATE","VALUE","VALUED","VALUES","VIA","VIEW","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WORK","XOR"],ed=[],td=c(["SELECT [ALL | DISTINCT]"]),sd=c(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED THEN","UPDATE SET","INSERT","NEST","UNNEST","RETURNING"]),Ya=c(["UPDATE","DELETE FROM","SET SCHEMA","ADVISE","ALTER INDEX","BEGIN TRANSACTION","BUILD INDEX","COMMIT TRANSACTION","CREATE COLLECTION","CREATE FUNCTION","CREATE INDEX","CREATE PRIMARY INDEX","CREATE SCOPE","DROP COLLECTION","DROP FUNCTION","DROP INDEX","DROP PRIMARY INDEX","DROP SCOPE","EXECUTE","EXECUTE FUNCTION","EXPLAIN","GRANT","INFER","PREPARE","REVOKE","ROLLBACK TRANSACTION","SAVEPOINT","SET TRANSACTION","UPDATE STATISTICS","UPSERT","LET","SET CURRENT SCHEMA","SHOW","USE [PRIMARY] KEYS"]),rd=c(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),Ed=c(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","INNER JOIN"]),nd=c(["{ROWS | RANGE | GROUPS} BETWEEN"]),id={name:"n1ql",tokenizerOptions:{reservedSelect:td,reservedClauses:[...sd,...Ya],reservedSetOperations:rd,reservedJoins:Ed,reservedPhrases:nd,supportsXor:!0,reservedKeywords:zL,reservedDataTypes:ed,reservedFunctionNames:ZL,stringTypes:['""-bs',"''-bs"],identTypes:["``"],extraParens:["[]","{}"],paramTypes:{positional:!0,numbered:["$"],named:["$"]},lineCommentTypes:["#","--"],operators:["%","==",":","||"]},formatOptions:{onelineClauses:Ya}},Td=["ADD","AGENT","AGGREGATE","ALL","ALTER","AND","ANY","ARROW","AS","ASC","AT","ATTRIBUTE","AUTHID","AVG","BEGIN","BETWEEN","BLOCK","BODY","BOTH","BOUND","BULK","BY","BYTE","CALL","CALLING","CASCADE","CASE","CHARSET","CHARSETFORM","CHARSETID","CHECK","CLOSE","CLUSTER","CLUSTERS","COLAUTH","COLLECT","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPILED","COMPRESS","CONNECT","CONSTANT","CONSTRUCTOR","CONTEXT","CONVERT","COUNT","CRASH","CREATE","CURRENT","CURSOR","CUSTOMDATUM","DANGLING","DATA","DAY","DECLARE","DEFAULT","DEFINE","DELETE","DESC","DETERMINISTIC","DISTINCT","DROP","DURATION","ELEMENT","ELSE","ELSIF","EMPTY","END","ESCAPE","EXCEPT","EXCEPTION","EXCEPTIONS","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FINAL","FIXED","FOR","FORALL","FORCE","FORM","FROM","FUNCTION","GENERAL","GOTO","GRANT","GROUP","HASH","HAVING","HEAP","HIDDEN","HOUR","IDENTIFIED","IF","IMMEDIATE","IN","INCLUDING","INDEX","INDEXES","INDICATOR","INDICES","INFINITE","INSERT","INSTANTIABLE","INTERFACE","INTERSECT","INTERVAL","INTO","INVALIDATE","IS","ISOLATION","JAVA","LANGUAGE","LARGE","LEADING","LENGTH","LEVEL","LIBRARY","LIKE","LIKE2","LIKE4","LIKEC","LIMIT","LIMITED","LOCAL","LOCK","LOOP","MAP","MAX","MAXLEN","MEMBER","MERGE","MIN","MINUS","MINUTE","MOD","MODE","MODIFY","MONTH","MULTISET","NAME","NAN","NATIONAL","NATIVE","NEW","NOCOMPRESS","NOCOPY","NOT","NOWAIT","NULL","OBJECT","OCICOLL","OCIDATE","OCIDATETIME","OCIDURATION","OCIINTERVAL","OCILOBLOCATOR","OCINUMBER","OCIRAW","OCIREF","OCIREFCURSOR","OCIROWID","OCISTRING","OCITYPE","OF","ON","ONLY","OPAQUE","OPEN","OPERATOR","OPTION","OR","ORACLE","ORADATA","ORDER","OVERLAPS","ORGANIZATION","ORLANY","ORLVARY","OTHERS","OUT","OVERRIDING","PACKAGE","PARALLEL_ENABLE","PARAMETER","PARAMETERS","PARTITION","PASCAL","PIPE","PIPELINED","PRAGMA","PRIOR","PRIVATE","PROCEDURE","PUBLIC","RAISE","RANGE","READ","RECORD","REF","REFERENCE","REM","REMAINDER","RENAME","RESOURCE","RESULT","RETURN","RETURNING","REVERSE","REVOKE","ROLLBACK","ROW","SAMPLE","SAVE","SAVEPOINT","SB1","SB2","SB4","SECOND","SEGMENT","SELECT","SELF","SEPARATE","SEQUENCE","SERIALIZABLE","SET","SHARE","SHORT","SIZE","SIZE_T","SOME","SPARSE","SQL","SQLCODE","SQLDATA","SQLNAME","SQLSTATE","STANDARD","START","STATIC","STDDEV","STORED","STRING","STRUCT","STYLE","SUBMULTISET","SUBPARTITION","SUBSTITUTABLE","SUBTYPE","SUM","SYNONYM","TABAUTH","TABLE","TDO","THE","THEN","TIME","TIMEZONE_ABBR","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIMEZONE_REGION","TO","TRAILING","TRANSAC","TRANSACTIONAL","TRUSTED","TYPE","UB1","UB2","UB4","UNDER","UNION","UNIQUE","UNSIGNED","UNTRUSTED","UPDATE","USE","USING","VALIST","VALUE","VALUES","VARIABLE","VARIANCE","VARRAY","VIEW","VIEWS","VOID","WHEN","WHERE","WHILE","WITH","WORK","WRAPPED","WRITE","YEAR","ZONE"],od=["ARRAY","BFILE_BASE","BINARY","BLOB_BASE","CHAR VARYING","CHAR_BASE","CHAR","CHARACTER VARYING","CHARACTER","CLOB_BASE","DATE_BASE","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTERVAL DAY","INTERVAL YEAR","LONG","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR VARYING","NCHAR","NCHAR","NUMBER_BASE","NUMBER","NUMBERIC","NVARCHAR","PRECISION","RAW","TIMESTAMP","UROWID","VARCHAR","VARCHAR2"],ad=["ABS","ACOS","ASIN","ATAN","ATAN2","BITAND","CEIL","COS","COSH","EXP","FLOOR","LN","LOG","MOD","NANVL","POWER","REMAINDER","ROUND","SIGN","SIN","SINH","SQRT","TAN","TANH","TRUNC","WIDTH_BUCKET","CHR","CONCAT","INITCAP","LOWER","LPAD","LTRIM","NLS_INITCAP","NLS_LOWER","NLSSORT","NLS_UPPER","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","RPAD","RTRIM","SOUNDEX","SUBSTR","TRANSLATE","TREAT","TRIM","UPPER","NLS_CHARSET_DECL_LEN","NLS_CHARSET_ID","NLS_CHARSET_NAME","ASCII","INSTR","LENGTH","REGEXP_INSTR","ADD_MONTHS","CURRENT_DATE","CURRENT_TIMESTAMP","DBTIMEZONE","EXTRACT","FROM_TZ","LAST_DAY","LOCALTIMESTAMP","MONTHS_BETWEEN","NEW_TIME","NEXT_DAY","NUMTODSINTERVAL","NUMTOYMINTERVAL","ROUND","SESSIONTIMEZONE","SYS_EXTRACT_UTC","SYSDATE","SYSTIMESTAMP","TO_CHAR","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_DSINTERVAL","TO_YMINTERVAL","TRUNC","TZ_OFFSET","GREATEST","LEAST","ASCIISTR","BIN_TO_NUM","CAST","CHARTOROWID","COMPOSE","CONVERT","DECOMPOSE","HEXTORAW","NUMTODSINTERVAL","NUMTOYMINTERVAL","RAWTOHEX","RAWTONHEX","ROWIDTOCHAR","ROWIDTONCHAR","SCN_TO_TIMESTAMP","TIMESTAMP_TO_SCN","TO_BINARY_DOUBLE","TO_BINARY_FLOAT","TO_CHAR","TO_CLOB","TO_DATE","TO_DSINTERVAL","TO_LOB","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_DSINTERVAL","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_YMINTERVAL","TO_YMINTERVAL","TRANSLATE","UNISTR","BFILENAME","EMPTY_BLOB,","EMPTY_CLOB","CARDINALITY","COLLECT","POWERMULTISET","POWERMULTISET_BY_CARDINALITY","SET","SYS_CONNECT_BY_PATH","CLUSTER_ID","CLUSTER_PROBABILITY","CLUSTER_SET","FEATURE_ID","FEATURE_SET","FEATURE_VALUE","PREDICTION","PREDICTION_COST","PREDICTION_DETAILS","PREDICTION_PROBABILITY","PREDICTION_SET","APPENDCHILDXML","DELETEXML","DEPTH","EXTRACT","EXISTSNODE","EXTRACTVALUE","INSERTCHILDXML","INSERTXMLBEFORE","PATH","SYS_DBURIGEN","SYS_XMLAGG","SYS_XMLGEN","UPDATEXML","XMLAGG","XMLCDATA","XMLCOLATTVAL","XMLCOMMENT","XMLCONCAT","XMLFOREST","XMLPARSE","XMLPI","XMLQUERY","XMLROOT","XMLSEQUENCE","XMLSERIALIZE","XMLTABLE","XMLTRANSFORM","DECODE","DUMP","ORA_HASH","VSIZE","COALESCE","LNNVL","NULLIF","NVL","NVL2","SYS_CONTEXT","SYS_GUID","SYS_TYPEID","UID","USER","USERENV","AVG","COLLECT","CORR","CORR_S","CORR_K","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","FIRST","GROUP_ID","GROUPING","GROUPING_ID","LAST","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANK","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","STATS_BINOMIAL_TEST","STATS_CROSSTAB","STATS_F_TEST","STATS_KS_TEST","STATS_MODE","STATS_MW_TEST","STATS_ONE_WAY_ANOVA","STATS_T_TEST_ONE","STATS_T_TEST_PAIRED","STATS_T_TEST_INDEP","STATS_T_TEST_INDEPU","STATS_WSR_TEST","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTILE","RATIO_TO_REPORT","ROW_NUMBER","DEREF","MAKE_REF","REF","REFTOHEX","VALUE","CV","ITERATION_NUMBER","PRESENTNNV","PRESENTV","PREVIOUS"],Rd=c(["SELECT [ALL | DISTINCT | UNIQUE]"]),Ad=c(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","INSERT [INTO | ALL INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [THEN]","UPDATE SET","RETURNING"]),va=c(["CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE"]),Yi=c(["CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW","CREATE MATERIALIZED VIEW","UPDATE [ONLY]","DELETE FROM [ONLY]","DROP TABLE","ALTER TABLE","ADD","DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}","MODIFY","RENAME TO","RENAME COLUMN","TRUNCATE TABLE","SET SCHEMA","BEGIN","CONNECT BY","DECLARE","EXCEPT","EXCEPTION","LOOP","START WITH"]),Sd=c(["UNION [ALL]","EXCEPT","INTERSECT"]),Id=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | OUTER} APPLY"]),Od=c(["ON {UPDATE | DELETE} [SET NULL]","ON COMMIT","{ROWS | RANGE} BETWEEN"]),ld={name:"plsql",tokenizerOptions:{reservedSelect:Rd,reservedClauses:[...Ad,...va,...Yi],reservedSetOperations:Sd,reservedJoins:Id,reservedPhrases:Od,supportsXor:!0,reservedKeywords:Td,reservedDataTypes:od,reservedFunctionNames:ad,stringTypes:[{quote:"''-qq",prefixes:["N"]},{quote:"q''",prefixes:["N"]}],identTypes:['""-qq'],identChars:{rest:"$#"},variableTypes:[{regex:"&{1,2}[A-Za-z][A-Za-z0-9_$#]*"}],paramTypes:{numbered:[":"],named:[":"]},paramChars:{},operators:["**",":=","%","~=","^=",">>","<<","=>","@","||"],postProcess:Nd},formatOptions:{alwaysDenseOperators:["@"],onelineClauses:[...va,...Yi],tabularOnelineClauses:Yi}};function Nd(t){let e=Fr;return t.map(s=>Ks.SET(s)&&Ks.BY(e)?Ve(ge({},s),{type:"RESERVED_KEYWORD"}):(dI(s.type)&&(e=s),s))}var cd=["ABS","ACOS","ACOSD","ACOSH","ASIN","ASIND","ASINH","ATAN","ATAN2","ATAN2D","ATAND","ATANH","CBRT","CEIL","CEILING","COS","COSD","COSH","COT","COTD","DEGREES","DIV","EXP","FACTORIAL","FLOOR","GCD","LCM","LN","LOG","LOG10","MIN_SCALE","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SCALE","SETSEED","SIGN","SIN","SIND","SINH","SQRT","TAN","TAND","TANH","TRIM_SCALE","TRUNC","WIDTH_BUCKET","ABS","ASCII","BIT_LENGTH","BTRIM","CHARACTER_LENGTH","CHAR_LENGTH","CHR","CONCAT","CONCAT_WS","FORMAT","INITCAP","LEFT","LENGTH","LOWER","LPAD","LTRIM","MD5","NORMALIZE","OCTET_LENGTH","OVERLAY","PARSE_IDENT","PG_CLIENT_ENCODING","POSITION","QUOTE_IDENT","QUOTE_LITERAL","QUOTE_NULLABLE","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REPEAT","REPLACE","REVERSE","RIGHT","RPAD","RTRIM","SPLIT_PART","SPRINTF","STARTS_WITH","STRING_AGG","STRING_TO_ARRAY","STRING_TO_TABLE","STRPOS","SUBSTR","SUBSTRING","TO_ASCII","TO_HEX","TRANSLATE","TRIM","UNISTR","UPPER","BIT_COUNT","BIT_LENGTH","BTRIM","CONVERT","CONVERT_FROM","CONVERT_TO","DECODE","ENCODE","GET_BIT","GET_BYTE","LENGTH","LTRIM","MD5","OCTET_LENGTH","OVERLAY","POSITION","RTRIM","SET_BIT","SET_BYTE","SHA224","SHA256","SHA384","SHA512","STRING_AGG","SUBSTR","SUBSTRING","TRIM","BIT_COUNT","BIT_LENGTH","GET_BIT","LENGTH","OCTET_LENGTH","OVERLAY","POSITION","SET_BIT","SUBSTRING","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","TO_CHAR","TO_DATE","TO_NUMBER","TO_TIMESTAMP","CLOCK_TIMESTAMP","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_BIN","DATE_PART","DATE_TRUNC","EXTRACT","ISFINITE","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","LOCALTIME","LOCALTIMESTAMP","MAKE_DATE","MAKE_INTERVAL","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","NOW","PG_SLEEP","PG_SLEEP_FOR","PG_SLEEP_UNTIL","STATEMENT_TIMESTAMP","TIMEOFDAY","TO_TIMESTAMP","TRANSACTION_TIMESTAMP","ENUM_FIRST","ENUM_LAST","ENUM_RANGE","AREA","BOUND_BOX","BOX","CENTER","CIRCLE","DIAGONAL","DIAMETER","HEIGHT","ISCLOSED","ISOPEN","LENGTH","LINE","LSEG","NPOINTS","PATH","PCLOSE","POINT","POLYGON","POPEN","RADIUS","SLOPE","WIDTH","ABBREV","BROADCAST","FAMILY","HOST","HOSTMASK","INET_MERGE","INET_SAME_FAMILY","MACADDR8_SET7BIT","MASKLEN","NETMASK","NETWORK","SET_MASKLEN","TRUNC","ARRAY_TO_TSVECTOR","GET_CURRENT_TS_CONFIG","JSONB_TO_TSVECTOR","JSON_TO_TSVECTOR","LENGTH","NUMNODE","PHRASETO_TSQUERY","PLAINTO_TSQUERY","QUERYTREE","SETWEIGHT","STRIP","TO_TSQUERY","TO_TSVECTOR","TSQUERY_PHRASE","TSVECTOR_TO_ARRAY","TS_DEBUG","TS_DELETE","TS_FILTER","TS_HEADLINE","TS_LEXIZE","TS_PARSE","TS_RANK","TS_RANK_CD","TS_REWRITE","TS_STAT","TS_TOKEN_TYPE","WEBSEARCH_TO_TSQUERY","UUID","CURSOR_TO_XML","CURSOR_TO_XMLSCHEMA","DATABASE_TO_XML","DATABASE_TO_XMLSCHEMA","DATABASE_TO_XML_AND_XMLSCHEMA","NEXTVAL","QUERY_TO_XML","QUERY_TO_XMLSCHEMA","QUERY_TO_XML_AND_XMLSCHEMA","SCHEMA_TO_XML","SCHEMA_TO_XMLSCHEMA","SCHEMA_TO_XML_AND_XMLSCHEMA","STRING","TABLE_TO_XML","TABLE_TO_XMLSCHEMA","TABLE_TO_XML_AND_XMLSCHEMA","XMLAGG","XMLCOMMENT","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","XML_IS_WELL_FORMED","XML_IS_WELL_FORMED_CONTENT","XML_IS_WELL_FORMED_DOCUMENT","XPATH","XPATH_EXISTS","ARRAY_TO_JSON","JSONB_AGG","JSONB_ARRAY_ELEMENTS","JSONB_ARRAY_ELEMENTS_TEXT","JSONB_ARRAY_LENGTH","JSONB_BUILD_ARRAY","JSONB_BUILD_OBJECT","JSONB_EACH","JSONB_EACH_TEXT","JSONB_EXTRACT_PATH","JSONB_EXTRACT_PATH_TEXT","JSONB_INSERT","JSONB_OBJECT","JSONB_OBJECT_AGG","JSONB_OBJECT_KEYS","JSONB_PATH_EXISTS","JSONB_PATH_EXISTS_TZ","JSONB_PATH_MATCH","JSONB_PATH_MATCH_TZ","JSONB_PATH_QUERY","JSONB_PATH_QUERY_ARRAY","JSONB_PATH_QUERY_ARRAY_TZ","JSONB_PATH_QUERY_FIRST","JSONB_PATH_QUERY_FIRST_TZ","JSONB_PATH_QUERY_TZ","JSONB_POPULATE_RECORD","JSONB_POPULATE_RECORDSET","JSONB_PRETTY","JSONB_SET","JSONB_SET_LAX","JSONB_STRIP_NULLS","JSONB_TO_RECORD","JSONB_TO_RECORDSET","JSONB_TYPEOF","JSON_AGG","JSON_ARRAY_ELEMENTS","JSON_ARRAY_ELEMENTS_TEXT","JSON_ARRAY_LENGTH","JSON_BUILD_ARRAY","JSON_BUILD_OBJECT","JSON_EACH","JSON_EACH_TEXT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_OBJECT","JSON_OBJECT_AGG","JSON_OBJECT_KEYS","JSON_POPULATE_RECORD","JSON_POPULATE_RECORDSET","JSON_STRIP_NULLS","JSON_TO_RECORD","JSON_TO_RECORDSET","JSON_TYPEOF","ROW_TO_JSON","TO_JSON","TO_JSONB","TO_TIMESTAMP","CURRVAL","LASTVAL","NEXTVAL","SETVAL","COALESCE","GREATEST","LEAST","NULLIF","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_DIMS","ARRAY_FILL","ARRAY_LENGTH","ARRAY_LOWER","ARRAY_NDIMS","ARRAY_POSITION","ARRAY_POSITIONS","ARRAY_PREPEND","ARRAY_REMOVE","ARRAY_REPLACE","ARRAY_TO_STRING","ARRAY_UPPER","CARDINALITY","STRING_TO_ARRAY","TRIM_ARRAY","UNNEST","ISEMPTY","LOWER","LOWER_INC","LOWER_INF","MULTIRANGE","RANGE_MERGE","UPPER","UPPER_INC","UPPER_INF","ARRAY_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COALESCE","CORR","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","EVERY","GROUPING","JSONB_AGG","JSONB_OBJECT_AGG","JSON_AGG","JSON_OBJECT_AGG","MAX","MIN","MODE","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANGE_AGG","RANGE_INTERSECT_AGG","RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","TO_JSON","TO_JSONB","VARIANCE","VAR_POP","VAR_SAMP","XMLAGG","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","GENERATE_SERIES","GENERATE_SUBSCRIPTS","ACLDEFAULT","ACLEXPLODE","COL_DESCRIPTION","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","FORMAT_TYPE","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HAS_TYPE_PRIVILEGE","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","MAKEACLITEM","OBJ_DESCRIPTION","PG_BACKEND_PID","PG_BLOCKING_PIDS","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONTROL_CHECKPOINT","PG_CONTROL_INIT","PG_CONTROL_SYSTEM","PG_CONVERSION_IS_VISIBLE","PG_CURRENT_LOGFILE","PG_CURRENT_SNAPSHOT","PG_CURRENT_XACT_ID","PG_CURRENT_XACT_ID_IF_ASSIGNED","PG_DESCRIBE_OBJECT","PG_FUNCTION_IS_VISIBLE","PG_GET_CATALOG_FOREIGN_KEYS","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_FUNCTIONDEF","PG_GET_FUNCTION_ARGUMENTS","PG_GET_FUNCTION_IDENTITY_ARGUMENTS","PG_GET_FUNCTION_RESULT","PG_GET_INDEXDEF","PG_GET_KEYWORDS","PG_GET_OBJECT_ADDRESS","PG_GET_OWNED_SEQUENCE","PG_GET_RULEDEF","PG_GET_SERIAL_SEQUENCE","PG_GET_STATISTICSOBJDEF","PG_GET_TRIGGERDEF","PG_GET_USERBYID","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IDENTIFY_OBJECT","PG_IDENTIFY_OBJECT_AS_ADDRESS","PG_INDEXAM_HAS_PROPERTY","PG_INDEX_COLUMN_HAS_PROPERTY","PG_INDEX_HAS_PROPERTY","PG_IS_OTHER_TEMP_SCHEMA","PG_JIT_AVAILABLE","PG_LAST_COMMITTED_XACT","PG_LISTENING_CHANNELS","PG_MY_TEMP_SCHEMA","PG_NOTIFICATION_QUEUE_USAGE","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_OPTIONS_TO_TABLE","PG_POSTMASTER_START_TIME","PG_SAFE_SNAPSHOT_BLOCKING_PIDS","PG_SNAPSHOT_XIP","PG_SNAPSHOT_XMAX","PG_SNAPSHOT_XMIN","PG_STATISTICS_OBJ_IS_VISIBLE","PG_TABLESPACE_DATABASES","PG_TABLESPACE_LOCATION","PG_TABLE_IS_VISIBLE","PG_TRIGGER_DEPTH","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PG_VISIBLE_IN_SNAPSHOT","PG_XACT_COMMIT_TIMESTAMP","PG_XACT_COMMIT_TIMESTAMP_ORIGIN","PG_XACT_STATUS","PQSERVERVERSION","ROW_SECURITY_ACTIVE","SESSION_USER","SHOBJ_DESCRIPTION","TO_REGCLASS","TO_REGCOLLATION","TO_REGNAMESPACE","TO_REGOPER","TO_REGOPERATOR","TO_REGPROC","TO_REGPROCEDURE","TO_REGROLE","TO_REGTYPE","TXID_CURRENT","TXID_CURRENT_IF_ASSIGNED","TXID_CURRENT_SNAPSHOT","TXID_SNAPSHOT_XIP","TXID_SNAPSHOT_XMAX","TXID_SNAPSHOT_XMIN","TXID_STATUS","TXID_VISIBLE_IN_SNAPSHOT","USER","VERSION","BRIN_DESUMMARIZE_RANGE","BRIN_SUMMARIZE_NEW_VALUES","BRIN_SUMMARIZE_RANGE","CONVERT_FROM","CURRENT_SETTING","GIN_CLEAN_PENDING_LIST","PG_ADVISORY_LOCK","PG_ADVISORY_LOCK_SHARED","PG_ADVISORY_UNLOCK","PG_ADVISORY_UNLOCK_ALL","PG_ADVISORY_UNLOCK_SHARED","PG_ADVISORY_XACT_LOCK","PG_ADVISORY_XACT_LOCK_SHARED","PG_BACKUP_START_TIME","PG_CANCEL_BACKEND","PG_COLLATION_ACTUAL_VERSION","PG_COLUMN_COMPRESSION","PG_COLUMN_SIZE","PG_COPY_LOGICAL_REPLICATION_SLOT","PG_COPY_PHYSICAL_REPLICATION_SLOT","PG_CREATE_LOGICAL_REPLICATION_SLOT","PG_CREATE_PHYSICAL_REPLICATION_SLOT","PG_CREATE_RESTORE_POINT","PG_CURRENT_WAL_FLUSH_LSN","PG_CURRENT_WAL_INSERT_LSN","PG_CURRENT_WAL_LSN","PG_DATABASE_SIZE","PG_DROP_REPLICATION_SLOT","PG_EXPORT_SNAPSHOT","PG_FILENODE_RELATION","PG_GET_WAL_REPLAY_PAUSE_STATE","PG_IMPORT_SYSTEM_COLLATIONS","PG_INDEXES_SIZE","PG_IS_IN_BACKUP","PG_IS_IN_RECOVERY","PG_IS_WAL_REPLAY_PAUSED","PG_LAST_WAL_RECEIVE_LSN","PG_LAST_WAL_REPLAY_LSN","PG_LAST_XACT_REPLAY_TIMESTAMP","PG_LOGICAL_EMIT_MESSAGE","PG_LOGICAL_SLOT_GET_BINARY_CHANGES","PG_LOGICAL_SLOT_GET_CHANGES","PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES","PG_LOGICAL_SLOT_PEEK_CHANGES","PG_LOG_BACKEND_MEMORY_CONTEXTS","PG_LS_ARCHIVE_STATUSDIR","PG_LS_DIR","PG_LS_LOGDIR","PG_LS_TMPDIR","PG_LS_WALDIR","PG_PARTITION_ANCESTORS","PG_PARTITION_ROOT","PG_PARTITION_TREE","PG_PROMOTE","PG_READ_BINARY_FILE","PG_READ_FILE","PG_RELATION_FILENODE","PG_RELATION_FILEPATH","PG_RELATION_SIZE","PG_RELOAD_CONF","PG_REPLICATION_ORIGIN_ADVANCE","PG_REPLICATION_ORIGIN_CREATE","PG_REPLICATION_ORIGIN_DROP","PG_REPLICATION_ORIGIN_OID","PG_REPLICATION_ORIGIN_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_IS_SETUP","PG_REPLICATION_ORIGIN_SESSION_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_RESET","PG_REPLICATION_ORIGIN_SESSION_SETUP","PG_REPLICATION_ORIGIN_XACT_RESET","PG_REPLICATION_ORIGIN_XACT_SETUP","PG_REPLICATION_SLOT_ADVANCE","PG_ROTATE_LOGFILE","PG_SIZE_BYTES","PG_SIZE_PRETTY","PG_START_BACKUP","PG_STAT_FILE","PG_STOP_BACKUP","PG_SWITCH_WAL","PG_TABLESPACE_SIZE","PG_TABLE_SIZE","PG_TERMINATE_BACKEND","PG_TOTAL_RELATION_SIZE","PG_TRY_ADVISORY_LOCK","PG_TRY_ADVISORY_LOCK_SHARED","PG_TRY_ADVISORY_XACT_LOCK","PG_TRY_ADVISORY_XACT_LOCK_SHARED","PG_WALFILE_NAME","PG_WALFILE_NAME_OFFSET","PG_WAL_LSN_DIFF","PG_WAL_REPLAY_PAUSE","PG_WAL_REPLAY_RESUME","SET_CONFIG","SUPPRESS_REDUNDANT_UPDATES_TRIGGER","TSVECTOR_UPDATE_TRIGGER","TSVECTOR_UPDATE_TRIGGER_COLUMN","PG_EVENT_TRIGGER_DDL_COMMANDS","PG_EVENT_TRIGGER_DROPPED_OBJECTS","PG_EVENT_TRIGGER_TABLE_REWRITE_OID","PG_EVENT_TRIGGER_TABLE_REWRITE_REASON","PG_GET_OBJECT_ADDRESS","PG_MCV_LIST_ITEMS","CAST"],ud=["ALL","ANALYSE","ANALYZE","AND","ANY","AS","ASC","ASYMMETRIC","AUTHORIZATION","BETWEEN","BINARY","BOTH","CASE","CAST","CHECK","COLLATE","COLLATION","COLUMN","CONCURRENTLY","CONSTRAINT","CREATE","CROSS","CURRENT_CATALOG","CURRENT_DATE","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DAY","DEFAULT","DEFERRABLE","DESC","DISTINCT","DO","ELSE","END","EXCEPT","EXISTS","FALSE","FETCH","FILTER","FOR","FOREIGN","FREEZE","FROM","FULL","GRANT","GROUP","HAVING","HOUR","ILIKE","IN","INITIALLY","INNER","INOUT","INTERSECT","INTO","IS","ISNULL","JOIN","LATERAL","LEADING","LEFT","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","MINUTE","MONTH","NATURAL","NOT","NOTNULL","NULL","NULLIF","OFFSET","ON","ONLY","OR","ORDER","OUT","OUTER","OVER","OVERLAPS","PLACING","PRIMARY","REFERENCES","RETURNING","RIGHT","ROW","SECOND","SELECT","SESSION_USER","SIMILAR","SOME","SYMMETRIC","TABLE","TABLESAMPLE","THEN","TO","TRAILING","TRUE","UNION","UNIQUE","USER","USING","VALUES","VARIADIC","VERBOSE","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","YEAR"],_d=["ARRAY","BIGINT","BIT","BIT VARYING","BOOL","BOOLEAN","CHAR","CHARACTER","CHARACTER VARYING","DECIMAL","DEC","DOUBLE","ENUM","FLOAT","INT","INTEGER","INTERVAL","NCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TIMESTAMPTZ","VARCHAR","XML","ZONE"],Ld=c(["SELECT [ALL | DISTINCT]"]),dd=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR {UPDATE | NO KEY UPDATE | SHARE | KEY SHARE} [OF]","INSERT INTO","VALUES","DEFAULT VALUES","SET","RETURNING"]),wa=c(["CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]"]),vi=c(["CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE [ONLY]","WHERE CURRENT OF","ON CONFLICT","DELETE FROM [ONLY]","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS] [ONLY]","ALTER TABLE ALL IN TABLESPACE","RENAME [COLUMN]","RENAME TO","ADD [COLUMN] [IF NOT EXISTS]","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","SET DATA TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","TRUNCATE [TABLE] [ONLY]","SET SCHEMA","AFTER","ABORT","ALTER AGGREGATE","ALTER COLLATION","ALTER CONVERSION","ALTER DATABASE","ALTER DEFAULT PRIVILEGES","ALTER DOMAIN","ALTER EVENT TRIGGER","ALTER EXTENSION","ALTER FOREIGN DATA WRAPPER","ALTER FOREIGN TABLE","ALTER FUNCTION","ALTER GROUP","ALTER INDEX","ALTER LANGUAGE","ALTER LARGE OBJECT","ALTER MATERIALIZED VIEW","ALTER OPERATOR","ALTER OPERATOR CLASS","ALTER OPERATOR FAMILY","ALTER POLICY","ALTER PROCEDURE","ALTER PUBLICATION","ALTER ROLE","ALTER ROUTINE","ALTER RULE","ALTER SCHEMA","ALTER SEQUENCE","ALTER SERVER","ALTER STATISTICS","ALTER SUBSCRIPTION","ALTER SYSTEM","ALTER TABLESPACE","ALTER TEXT SEARCH CONFIGURATION","ALTER TEXT SEARCH DICTIONARY","ALTER TEXT SEARCH PARSER","ALTER TEXT SEARCH TEMPLATE","ALTER TRIGGER","ALTER TYPE","ALTER USER","ALTER USER MAPPING","ALTER VIEW","ANALYZE","BEGIN","CALL","CHECKPOINT","CLOSE","CLUSTER","COMMIT","COMMIT PREPARED","COPY","CREATE ACCESS METHOD","CREATE AGGREGATE","CREATE CAST","CREATE COLLATION","CREATE CONVERSION","CREATE DATABASE","CREATE DOMAIN","CREATE EVENT TRIGGER","CREATE EXTENSION","CREATE FOREIGN DATA WRAPPER","CREATE FOREIGN TABLE","CREATE [OR REPLACE] FUNCTION","CREATE GROUP","CREATE INDEX","CREATE LANGUAGE","CREATE OPERATOR","CREATE OPERATOR CLASS","CREATE OPERATOR FAMILY","CREATE POLICY","CREATE PROCEDURE","CREATE PUBLICATION","CREATE ROLE","CREATE RULE","CREATE SCHEMA","CREATE SEQUENCE","CREATE SERVER","CREATE STATISTICS","CREATE SUBSCRIPTION","CREATE TABLESPACE","CREATE TEXT SEARCH CONFIGURATION","CREATE TEXT SEARCH DICTIONARY","CREATE TEXT SEARCH PARSER","CREATE TEXT SEARCH TEMPLATE","CREATE TRANSFORM","CREATE TRIGGER","CREATE TYPE","CREATE USER","CREATE USER MAPPING","DEALLOCATE","DECLARE","DISCARD","DROP ACCESS METHOD","DROP AGGREGATE","DROP CAST","DROP COLLATION","DROP CONVERSION","DROP DATABASE","DROP DOMAIN","DROP EVENT TRIGGER","DROP EXTENSION","DROP FOREIGN DATA WRAPPER","DROP FOREIGN TABLE","DROP FUNCTION","DROP GROUP","DROP IDENTITY","DROP INDEX","DROP LANGUAGE","DROP MATERIALIZED VIEW [IF EXISTS]","DROP OPERATOR","DROP OPERATOR CLASS","DROP OPERATOR FAMILY","DROP OWNED","DROP POLICY","DROP PROCEDURE","DROP PUBLICATION","DROP ROLE","DROP ROUTINE","DROP RULE","DROP SCHEMA","DROP SEQUENCE","DROP SERVER","DROP STATISTICS","DROP SUBSCRIPTION","DROP TABLESPACE","DROP TEXT SEARCH CONFIGURATION","DROP TEXT SEARCH DICTIONARY","DROP TEXT SEARCH PARSER","DROP TEXT SEARCH TEMPLATE","DROP TRANSFORM","DROP TRIGGER","DROP TYPE","DROP USER","DROP USER MAPPING","DROP VIEW","EXECUTE","EXPLAIN","FETCH","GRANT","IMPORT FOREIGN SCHEMA","LISTEN","LOAD","LOCK","MOVE","NOTIFY","OVERRIDING SYSTEM VALUE","PREPARE","PREPARE TRANSACTION","REASSIGN OWNED","REFRESH MATERIALIZED VIEW","REINDEX","RELEASE SAVEPOINT","RESET [ALL|ROLE|SESSION AUTHORIZATION]","REVOKE","ROLLBACK","ROLLBACK PREPARED","ROLLBACK TO SAVEPOINT","SAVEPOINT","SECURITY LABEL","SELECT INTO","SET CONSTRAINTS","SET ROLE","SET SESSION AUTHORIZATION","SET TRANSACTION","SHOW","START TRANSACTION","UNLISTEN","VACUUM"]),Cd=c(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),fd=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),hd=c(["PRIMARY KEY","GENERATED {ALWAYS | BY DEFAULT} AS IDENTITY","ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","DO {NOTHING | UPDATE}","AS MATERIALIZED","{ROWS | RANGE | GROUPS} BETWEEN","[TIMESTAMP | TIME] {WITH | WITHOUT} TIME ZONE","IS [NOT] DISTINCT FROM","NULLS {FIRST | LAST}","WITH ORDINALITY"]),Dd={name:"postgresql",tokenizerOptions:{reservedSelect:Ld,reservedClauses:[...dd,...wa,...vi],reservedSetOperations:Cd,reservedJoins:fd,reservedPhrases:hd,reservedKeywords:ud,reservedDataTypes:_d,reservedFunctionNames:cd,nestedBlockComments:!0,extraParens:["[]"],stringTypes:["$$",{quote:"''-qq",prefixes:["U&"]},{quote:"''-qq-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:[{quote:'""-qq',prefixes:["U&"]}],identChars:{rest:"$"},paramTypes:{numbered:["$"]},operators:["%","^","|/","||/","@",":=","&","|","#","~","<<",">>","~>~","~<~","~>=~","~<=~","@-@","@@","##","<->","&&","&<","&>","<<|","&<|","|>>","|&>","<^","^>","?#","?-","?|","?-|","?||","@>","<@","~=","?","@?","?&","->","->>","#>","#>>","#-","=>",">>=","<<=","~~","~~*","!~~","!~~*","~","~*","!~","!~*","-|-","||","@@@","!!","^@","<%","%>","<<%","%>>","<<->","<->>","<<<->","<->>>","::",":","<#>","<=>","<+>","<~>","<%>"],operatorKeyword:!0},formatOptions:{alwaysDenseOperators:["::",":"],onelineClauses:[...wa,...vi],tabularOnelineClauses:vi}},pd=["ANY_VALUE","APPROXIMATE PERCENTILE_DISC","AVG","COUNT","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","array","array_concat","array_flatten","get_array_length","split_to_array","subarray","BIT_AND","BIT_OR","BOOL_AND","BOOL_OR","COALESCE","DECODE","GREATEST","LEAST","NVL","NVL2","NULLIF","ADD_MONTHS","AT TIME ZONE","CONVERT_TIMEZONE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_CMP","DATE_CMP_TIMESTAMP","DATE_CMP_TIMESTAMPTZ","DATE_PART_YEAR","DATEADD","DATEDIFF","DATE_PART","DATE_TRUNC","EXTRACT","GETDATE","INTERVAL_CMP","LAST_DAY","MONTHS_BETWEEN","NEXT_DAY","SYSDATE","TIMEOFDAY","TIMESTAMP_CMP","TIMESTAMP_CMP_DATE","TIMESTAMP_CMP_TIMESTAMPTZ","TIMESTAMPTZ_CMP","TIMESTAMPTZ_CMP_DATE","TIMESTAMPTZ_CMP_TIMESTAMP","TIMEZONE","TO_TIMESTAMP","TRUNC","AddBBox","DropBBox","GeometryType","ST_AddPoint","ST_Angle","ST_Area","ST_AsBinary","ST_AsEWKB","ST_AsEWKT","ST_AsGeoJSON","ST_AsText","ST_Azimuth","ST_Boundary","ST_Collect","ST_Contains","ST_ContainsProperly","ST_ConvexHull","ST_CoveredBy","ST_Covers","ST_Crosses","ST_Dimension","ST_Disjoint","ST_Distance","ST_DistanceSphere","ST_DWithin","ST_EndPoint","ST_Envelope","ST_Equals","ST_ExteriorRing","ST_Force2D","ST_Force3D","ST_Force3DM","ST_Force3DZ","ST_Force4D","ST_GeometryN","ST_GeometryType","ST_GeomFromEWKB","ST_GeomFromEWKT","ST_GeomFromText","ST_GeomFromWKB","ST_InteriorRingN","ST_Intersects","ST_IsPolygonCCW","ST_IsPolygonCW","ST_IsClosed","ST_IsCollection","ST_IsEmpty","ST_IsSimple","ST_IsValid","ST_Length","ST_LengthSphere","ST_Length2D","ST_LineFromMultiPoint","ST_LineInterpolatePoint","ST_M","ST_MakeEnvelope","ST_MakeLine","ST_MakePoint","ST_MakePolygon","ST_MemSize","ST_MMax","ST_MMin","ST_Multi","ST_NDims","ST_NPoints","ST_NRings","ST_NumGeometries","ST_NumInteriorRings","ST_NumPoints","ST_Perimeter","ST_Perimeter2D","ST_Point","ST_PointN","ST_Points","ST_Polygon","ST_RemovePoint","ST_Reverse","ST_SetPoint","ST_SetSRID","ST_Simplify","ST_SRID","ST_StartPoint","ST_Touches","ST_Within","ST_X","ST_XMax","ST_XMin","ST_Y","ST_YMax","ST_YMin","ST_Z","ST_ZMax","ST_ZMin","SupportsBBox","CHECKSUM","FUNC_SHA1","FNV_HASH","MD5","SHA","SHA1","SHA2","HLL","HLL_CREATE_SKETCH","HLL_CARDINALITY","HLL_COMBINE","IS_VALID_JSON","IS_VALID_JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_EXTRACT_ARRAY_ELEMENT_TEXT","JSON_EXTRACT_PATH_TEXT","JSON_PARSE","JSON_SERIALIZE","ABS","ACOS","ASIN","ATAN","ATAN2","CBRT","CEILING","CEIL","COS","COT","DEGREES","DEXP","DLOG1","DLOG10","EXP","FLOOR","LN","LOG","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SIN","SIGN","SQRT","TAN","TO_HEX","TRUNC","EXPLAIN_MODEL","ASCII","BPCHARCMP","BTRIM","BTTEXT_PATTERN_CMP","CHAR_LENGTH","CHARACTER_LENGTH","CHARINDEX","CHR","COLLATE","CONCAT","CRC32","DIFFERENCE","INITCAP","LEFT","RIGHT","LEN","LENGTH","LOWER","LPAD","RPAD","LTRIM","OCTETINDEX","OCTET_LENGTH","POSITION","QUOTE_IDENT","QUOTE_LITERAL","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","REPLICATE","REVERSE","RTRIM","SOUNDEX","SPLIT_PART","STRPOS","STRTOL","SUBSTRING","TEXTLEN","TRANSLATE","TRIM","UPPER","decimal_precision","decimal_scale","is_array","is_bigint","is_boolean","is_char","is_decimal","is_float","is_integer","is_object","is_scalar","is_smallint","is_varchar","json_typeof","AVG","COUNT","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAST_VALUE","LAG","LEAD","LISTAGG","MAX","MEDIAN","MIN","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","CAST","CONVERT","TO_CHAR","TO_DATE","TO_NUMBER","TEXT_TO_INT_ALT","TEXT_TO_NUMERIC_ALT","CHANGE_QUERY_PRIORITY","CHANGE_SESSION_PRIORITY","CHANGE_USER_PRIORITY","CURRENT_SETTING","PG_CANCEL_BACKEND","PG_TERMINATE_BACKEND","REBOOT_CLUSTER","SET_CONFIG","CURRENT_AWS_ACCOUNT","CURRENT_DATABASE","CURRENT_NAMESPACE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","CURRENT_USER_ID","HAS_ASSUMEROLE_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_TABLE_PRIVILEGE","PG_BACKEND_PID","PG_GET_COLS","PG_GET_GRANTEE_BY_IAM_ROLE","PG_GET_IAM_ROLE_BY_USER","PG_GET_LATE_BINDING_VIEW_COLS","PG_LAST_COPY_COUNT","PG_LAST_COPY_ID","PG_LAST_UNLOAD_ID","PG_LAST_QUERY_ID","PG_LAST_UNLOAD_COUNT","SESSION_USER","SLICE_NUM","USER","VERSION"],Pd=["AES128","AES256","ALL","ALLOWOVERWRITE","ANY","AS","ASC","AUTHORIZATION","BACKUP","BETWEEN","BINARY","BOTH","CHECK","COLUMN","CONSTRAINT","CREATE","CROSS","DEFAULT","DEFERRABLE","DEFLATE","DEFRAG","DESC","DISABLE","DISTINCT","DO","ENABLE","ENCODE","ENCRYPT","ENCRYPTION","EXPLICIT","FALSE","FOR","FOREIGN","FREEZE","FROM","FULL","GLOBALDICT256","GLOBALDICT64K","GROUP","IDENTITY","IGNORE","ILIKE","IN","INITIALLY","INNER","INTO","IS","ISNULL","LANGUAGE","LEADING","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","LUN","LUNS","MINUS","NATURAL","NEW","NOT","NOTNULL","NULL","NULLS","OFF","OFFLINE","OFFSET","OID","OLD","ON","ONLY","OPEN","ORDER","OUTER","OVERLAPS","PARALLEL","PARTITION","PERCENT","PERMISSIONS","PLACING","PRIMARY","RECOVER","REFERENCES","REJECTLOG","RESORT","RESPECT","RESTORE","SIMILAR","SNAPSHOT","SOME","SYSTEM","TABLE","TAG","TDES","THEN","TIMESTAMP","TO","TOP","TRAILING","TRUE","UNIQUE","USING","VERBOSE","WALLET","WITHOUT","ACCEPTANYDATE","ACCEPTINVCHARS","BLANKSASNULL","DATEFORMAT","EMPTYASNULL","ENCODING","ESCAPE","EXPLICIT_IDS","FILLRECORD","IGNOREBLANKLINES","IGNOREHEADER","REMOVEQUOTES","ROUNDEC","TIMEFORMAT","TRIMBLANKS","TRUNCATECOLUMNS","COMPROWS","COMPUPDATE","MAXERROR","NOLOAD","STATUPDATE","FORMAT","CSV","DELIMITER","FIXEDWIDTH","SHAPEFILE","AVRO","JSON","PARQUET","ORC","ACCESS_KEY_ID","CREDENTIALS","ENCRYPTED","IAM_ROLE","MASTER_SYMMETRIC_KEY","SECRET_ACCESS_KEY","SESSION_TOKEN","BZIP2","GZIP","LZOP","ZSTD","MANIFEST","READRATIO","REGION","SSH","RAW","AZ64","BYTEDICT","DELTA","DELTA32K","LZO","MOSTLY8","MOSTLY16","MOSTLY32","RUNLENGTH","TEXT255","TEXT32K","CATALOG_ROLE","SECRET_ARN","EXTERNAL","AUTO","EVEN","KEY","PREDICATE","COMPRESSION"],Md=["ARRAY","BIGINT","BPCHAR","CHAR","CHARACTER VARYING","CHARACTER","DECIMAL","INT","INT2","INT4","INT8","INTEGER","NCHAR","NUMERIC","NVARCHAR","SMALLINT","TEXT","VARBYTE","VARCHAR"],Ud=c(["SELECT [ALL | DISTINCT]"]),yd=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET"]),Va=c(["CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]"]),wi=c(["CREATE [OR REPLACE | MATERIALIZED] VIEW","UPDATE","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ALTER TABLE APPEND","ADD [COLUMN]","DROP [COLUMN]","RENAME TO","RENAME COLUMN","ALTER COLUMN","TYPE","ENCODE","TRUNCATE [TABLE]","ABORT","ALTER DATABASE","ALTER DATASHARE","ALTER DEFAULT PRIVILEGES","ALTER GROUP","ALTER MATERIALIZED VIEW","ALTER PROCEDURE","ALTER SCHEMA","ALTER USER","ANALYSE","ANALYZE","ANALYSE COMPRESSION","ANALYZE COMPRESSION","BEGIN","CALL","CANCEL","CLOSE","COMMIT","COPY","CREATE DATABASE","CREATE DATASHARE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL SCHEMA","CREATE EXTERNAL TABLE","CREATE FUNCTION","CREATE GROUP","CREATE LIBRARY","CREATE MODEL","CREATE PROCEDURE","CREATE SCHEMA","CREATE USER","DEALLOCATE","DECLARE","DESC DATASHARE","DROP DATABASE","DROP DATASHARE","DROP FUNCTION","DROP GROUP","DROP LIBRARY","DROP MODEL","DROP MATERIALIZED VIEW","DROP PROCEDURE","DROP SCHEMA","DROP USER","DROP VIEW","DROP","EXECUTE","EXPLAIN","FETCH","GRANT","LOCK","PREPARE","REFRESH MATERIALIZED VIEW","RESET","REVOKE","ROLLBACK","SELECT INTO","SET SESSION AUTHORIZATION","SET SESSION CHARACTERISTICS","SHOW","SHOW EXTERNAL TABLE","SHOW MODEL","SHOW DATASHARES","SHOW PROCEDURE","SHOW TABLE","SHOW VIEW","START TRANSACTION","UNLOAD","VACUUM"]),md=c(["UNION [ALL]","EXCEPT","INTERSECT","MINUS"]),Bd=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Fd=c(["NULL AS","DATA CATALOG","HIVE METASTORE","{ROWS | RANGE} BETWEEN"]),Gd={name:"redshift",tokenizerOptions:{reservedSelect:Ud,reservedClauses:[...yd,...Va,...wi],reservedSetOperations:md,reservedJoins:Bd,reservedPhrases:Fd,reservedKeywords:Pd,reservedDataTypes:Md,reservedFunctionNames:pd,stringTypes:["''-qq"],identTypes:['""-qq'],identChars:{first:"#"},paramTypes:{numbered:["$"]},operators:["^","%","@","|/","||/","&","|","~","<<",">>","||","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...Va,...wi],tabularOnelineClauses:wi}},bd=["ADD","AFTER","ALL","ALTER","ANALYZE","AND","ANTI","ANY","ARCHIVE","AS","ASC","AT","AUTHORIZATION","BETWEEN","BOTH","BUCKET","BUCKETS","BY","CACHE","CASCADE","CAST","CHANGE","CHECK","CLEAR","CLUSTER","CLUSTERED","CODEGEN","COLLATE","COLLECTION","COLUMN","COLUMNS","COMMENT","COMMIT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONSTRAINT","COST","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATA","DATABASE","DATABASES","DAY","DBPROPERTIES","DEFINED","DELETE","DELIMITED","DESC","DESCRIBE","DFS","DIRECTORIES","DIRECTORY","DISTINCT","DISTRIBUTE","DIV","DROP","ESCAPE","ESCAPED","EXCEPT","EXCHANGE","EXISTS","EXPORT","EXTENDED","EXTERNAL","EXTRACT","FALSE","FETCH","FIELDS","FILTER","FILEFORMAT","FIRST","FIRST_VALUE","FOLLOWING","FOR","FOREIGN","FORMAT","FORMATTED","FULL","FUNCTION","FUNCTIONS","GLOBAL","GRANT","GROUP","GROUPING","HOUR","IF","IGNORE","IMPORT","IN","INDEX","INDEXES","INNER","INPATH","INPUTFORMAT","INTERSECT","INTO","IS","ITEMS","KEYS","LAST","LAST_VALUE","LATERAL","LAZY","LEADING","LEFT","LIKE","LINES","LIST","LOCAL","LOCATION","LOCK","LOCKS","LOGICAL","MACRO","MATCHED","MERGE","MINUTE","MONTH","MSCK","NAMESPACE","NAMESPACES","NATURAL","NO","NOT","NULL","NULLS","OF","ONLY","OPTION","OPTIONS","OR","ORDER","OUT","OUTER","OUTPUTFORMAT","OVER","OVERLAPS","OVERLAY","OVERWRITE","OWNER","PARTITION","PARTITIONED","PARTITIONS","PERCENT","PLACING","POSITION","PRECEDING","PRIMARY","PRINCIPALS","PROPERTIES","PURGE","QUERY","RANGE","RECORDREADER","RECORDWRITER","RECOVER","REDUCE","REFERENCES","RENAME","REPAIR","REPLACE","RESPECT","RESTRICT","REVOKE","RIGHT","RLIKE","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","SCHEMA","SECOND","SELECT","SEMI","SEPARATED","SERDE","SERDEPROPERTIES","SESSION_USER","SETS","SHOW","SKEWED","SOME","SORT","SORTED","START","STATISTICS","STORED","STRATIFY","SUBSTR","SUBSTRING","TABLE","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","THEN","TO","TOUCH","TRAILING","TRANSACTION","TRANSACTIONS","TRIM","TRUE","TRUNCATE","UNARCHIVE","UNBOUNDED","UNCACHE","UNIQUE","UNKNOWN","UNLOCK","UNSET","USE","USER","USING","VIEW","WINDOW","YEAR","ANALYSE","ARRAY_ZIP","COALESCE","CONTAINS","CONVERT","DAYS","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DECODE","DEFAULT","DISTINCTROW","ENCODE","EXPLODE","EXPLODE_OUTER","FIXED","GREATEST","GROUP_CONCAT","HOURS","HOUR_MINUTE","HOUR_SECOND","IFNULL","LEAST","LEVEL","MINUTE_SECOND","NULLIF","OFFSET","ON","OPTIMIZE","REGEXP","SEPARATOR","SIZE","TYPE","TYPES","UNSIGNED","VARIABLES","YEAR_MONTH"],gd=["ARRAY","BIGINT","BINARY","BOOLEAN","BYTE","CHAR","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","LONG","MAP","NUMERIC","REAL","SHORT","SMALLINT","STRING","STRUCT","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TINYINT","VARCHAR"],Hd=["APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COUNT","COUNT","COUNT_IF","COUNT_MIN_SKETCH","COVAR_POP","COVAR_SAMP","EVERY","FIRST","FIRST_VALUE","GROUPING","GROUPING_ID","KURTOSIS","LAST","LAST_VALUE","MAX","MAX_BY","MEAN","MIN","MIN_BY","PERCENTILE","PERCENTILE","PERCENTILE_APPROX","SKEWNESS","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","CUME_DIST","DENSE_RANK","LAG","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","ARRAY","ARRAY_CONTAINS","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_UNION","ARRAYS_OVERLAP","ARRAYS_ZIP","FLATTEN","SEQUENCE","SHUFFLE","SLICE","SORT_ARRAY","ELEMENT_AT","ELEMENT_AT","MAP_CONCAT","MAP_ENTRIES","MAP_FROM_ARRAYS","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","STR_TO_MAP","ADD_MONTHS","CURRENT_DATE","CURRENT_DATE","CURRENT_TIMESTAMP","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","DATE_ADD","DATE_FORMAT","DATE_FROM_UNIX_DATE","DATE_PART","DATE_SUB","DATE_TRUNC","DATEDIFF","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MAKE_DATE","MAKE_DT_INTERVAL","MAKE_INTERVAL","MAKE_TIMESTAMP","MAKE_YM_INTERVAL","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","NOW","QUARTER","SECOND","SESSION_WINDOW","TIMESTAMP_MICROS","TIMESTAMP_MILLIS","TIMESTAMP_SECONDS","TO_DATE","TO_TIMESTAMP","TO_UNIX_TIMESTAMP","TO_UTC_TIMESTAMP","TRUNC","UNIX_DATE","UNIX_MICROS","UNIX_MILLIS","UNIX_SECONDS","UNIX_TIMESTAMP","WEEKDAY","WEEKOFYEAR","WINDOW","YEAR","FROM_JSON","GET_JSON_OBJECT","JSON_ARRAY_LENGTH","JSON_OBJECT_KEYS","JSON_TUPLE","SCHEMA_OF_JSON","TO_JSON","ABS","ACOS","ACOSH","AGGREGATE","ARRAY_SORT","ASCII","ASIN","ASINH","ASSERT_TRUE","ATAN","ATAN2","ATANH","BASE64","BIN","BIT_COUNT","BIT_GET","BIT_LENGTH","BROUND","BTRIM","CARDINALITY","CBRT","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONV","COS","COSH","COT","CRC32","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_USER","DEGREES","ELT","EXP","EXPM1","FACTORIAL","FIND_IN_SET","FLOOR","FORALL","FORMAT_NUMBER","FORMAT_STRING","FROM_CSV","GETBIT","HASH","HEX","HYPOT","INITCAP","INLINE","INLINE_OUTER","INPUT_FILE_BLOCK_LENGTH","INPUT_FILE_BLOCK_START","INPUT_FILE_NAME","INSTR","ISNAN","ISNOTNULL","ISNULL","JAVA_METHOD","LCASE","LEFT","LENGTH","LEVENSHTEIN","LN","LOCATE","LOG","LOG10","LOG1P","LOG2","LOWER","LPAD","LTRIM","MAP_FILTER","MAP_ZIP_WITH","MD5","MOD","MONOTONICALLY_INCREASING_ID","NAMED_STRUCT","NANVL","NEGATIVE","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARSE_URL","PI","PMOD","POSEXPLODE","POSEXPLODE_OUTER","POSITION","POSITIVE","POW","POWER","PRINTF","RADIANS","RAISE_ERROR","RAND","RANDN","RANDOM","REFLECT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_REPLACE","REPEAT","REPLACE","REVERSE","RIGHT","RINT","ROUND","RPAD","RTRIM","SCHEMA_OF_CSV","SENTENCES","SHA","SHA1","SHA2","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIGNUM","SIN","SINH","SOUNDEX","SPACE","SPARK_PARTITION_ID","SPLIT","SQRT","STACK","SUBSTR","SUBSTRING","SUBSTRING_INDEX","TAN","TANH","TO_CSV","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRY_ADD","TRY_DIVIDE","TYPEOF","UCASE","UNBASE64","UNHEX","UPPER","UUID","VERSION","WIDTH_BUCKET","XPATH","XPATH_BOOLEAN","XPATH_DOUBLE","XPATH_FLOAT","XPATH_INT","XPATH_LONG","XPATH_NUMBER","XPATH_SHORT","XPATH_STRING","XXHASH64","ZIP_WITH","CAST","COALESCE","NULLIF"],Yd=c(["SELECT [ALL | DISTINCT]"]),vd=c(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT [INTO | OVERWRITE] [TABLE]","VALUES","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),Wa=c(["CREATE [EXTERNAL] TABLE [IF NOT EXISTS]"]),Vi=c(["CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD COLUMNS","DROP {COLUMN | COLUMNS}","RENAME TO","RENAME COLUMN","ALTER COLUMN","TRUNCATE TABLE","LATERAL VIEW","ALTER DATABASE","ALTER VIEW","CREATE DATABASE","CREATE FUNCTION","DROP DATABASE","DROP FUNCTION","DROP VIEW","REPAIR TABLE","USE DATABASE","TABLESAMPLE","PIVOT","TRANSFORM","EXPLAIN","ADD FILE","ADD JAR","ANALYZE TABLE","CACHE TABLE","CLEAR CACHE","DESCRIBE DATABASE","DESCRIBE FUNCTION","DESCRIBE QUERY","DESCRIBE TABLE","LIST FILE","LIST JAR","REFRESH","REFRESH TABLE","REFRESH FUNCTION","RESET","SHOW COLUMNS","SHOW CREATE TABLE","SHOW DATABASES","SHOW FUNCTIONS","SHOW PARTITIONS","SHOW TABLE EXTENDED","SHOW TABLES","SHOW TBLPROPERTIES","SHOW VIEWS","UNCACHE TABLE"]),wd=c(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),Vd=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT] {ANTI | SEMI} JOIN","NATURAL [LEFT] {ANTI | SEMI} JOIN"]),Wd=c(["ON DELETE","ON UPDATE","CURRENT ROW","{ROWS | RANGE} BETWEEN"]),xd={name:"spark",tokenizerOptions:{reservedSelect:Yd,reservedClauses:[...vd,...Wa,...Vi],reservedSetOperations:wd,reservedJoins:Vd,reservedPhrases:Wd,supportsXor:!0,reservedKeywords:bd,reservedDataTypes:gd,reservedFunctionNames:Hd,extraParens:["[]"],stringTypes:["''-bs",'""-bs',{quote:"''-raw",prefixes:["R","X"],requirePrefix:!0},{quote:'""-raw',prefixes:["R","X"],requirePrefix:!0}],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||","->"],postProcess:Xd},formatOptions:{onelineClauses:[...Wa,...Vi],tabularOnelineClauses:Vi}};function Xd(t){return t.map((e,s)=>{const r=t[s-1]||Fr,E=t[s+1]||Fr;return Ks.WINDOW(e)&&E.type==="OPEN_PAREN"?Ve(ge({},e),{type:"RESERVED_FUNCTION_NAME"}):e.text==="ITEMS"&&e.type==="RESERVED_KEYWORD"&&!(r.text==="COLLECTION"&&E.text==="TERMINATED")?Ve(ge({},e),{type:"IDENTIFIER",text:e.raw}):e})}var Kd=["ABS","CHANGES","CHAR","COALESCE","FORMAT","GLOB","HEX","IFNULL","IIF","INSTR","LAST_INSERT_ROWID","LENGTH","LIKE","LIKELIHOOD","LIKELY","LOAD_EXTENSION","LOWER","LTRIM","NULLIF","PRINTF","QUOTE","RANDOM","RANDOMBLOB","REPLACE","ROUND","RTRIM","SIGN","SOUNDEX","SQLITE_COMPILEOPTION_GET","SQLITE_COMPILEOPTION_USED","SQLITE_OFFSET","SQLITE_SOURCE_ID","SQLITE_VERSION","SUBSTR","SUBSTRING","TOTAL_CHANGES","TRIM","TYPEOF","UNICODE","UNLIKELY","UPPER","ZEROBLOB","AVG","COUNT","GROUP_CONCAT","MAX","MIN","SUM","TOTAL","DATE","TIME","DATETIME","JULIANDAY","UNIXEPOCH","STRFTIME","row_number","rank","dense_rank","percent_rank","cume_dist","ntile","lag","lead","first_value","last_value","nth_value","ACOS","ACOSH","ASIN","ASINH","ATAN","ATAN2","ATANH","CEIL","CEILING","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG","LOG10","LOG2","MOD","PI","POW","POWER","RADIANS","SIN","SINH","SQRT","TAN","TANH","TRUNC","JSON","JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_ARRAY_LENGTH","JSON_EXTRACT","JSON_INSERT","JSON_OBJECT","JSON_PATCH","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_TYPE","JSON_TYPE","JSON_VALID","JSON_QUOTE","JSON_GROUP_ARRAY","JSON_GROUP_OBJECT","JSON_EACH","JSON_TREE","CAST"],$d=["ABORT","ACTION","ADD","AFTER","ALL","ALTER","AND","ARE","ALWAYS","ANALYZE","AS","ASC","ATTACH","AUTOINCREMENT","BEFORE","BEGIN","BETWEEN","BY","CASCADE","CASE","CAST","CHECK","COLLATE","COLUMN","COMMIT","CONFLICT","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATABASE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DETACH","DISTINCT","DO","DROP","EACH","ELSE","END","ESCAPE","EXCEPT","EXCLUDE","EXCLUSIVE","EXISTS","EXPLAIN","FAIL","FILTER","FIRST","FOLLOWING","FOR","FOREIGN","FROM","FULL","GENERATED","GLOB","GROUP","GROUPS","HAVING","IF","IGNORE","IMMEDIATE","IN","INDEX","INDEXED","INITIALLY","INNER","INSERT","INSTEAD","INTERSECT","INTO","IS","ISNULL","JOIN","KEY","LAST","LEFT","LIKE","LIMIT","MATCH","MATERIALIZED","NATURAL","NO","NOT","NOTHING","NOTNULL","NULL","NULLS","OF","OFFSET","ON","ONLY","OPEN","OR","ORDER","OTHERS","OUTER","OVER","PARTITION","PLAN","PRAGMA","PRECEDING","PRIMARY","QUERY","RAISE","RANGE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELEASE","RENAME","REPLACE","RESTRICT","RETURNING","RIGHT","ROLLBACK","ROW","ROWS","SAVEPOINT","SELECT","SET","TABLE","TEMP","TEMPORARY","THEN","TIES","TO","TRANSACTION","TRIGGER","UNBOUNDED","UNION","UNIQUE","UPDATE","USING","VACUUM","VALUES","VIEW","VIRTUAL","WHEN","WHERE","WINDOW","WITH","WITHOUT"],Jd=["ANY","ARRAY","BLOB","CHARACTER","DECIMAL","INT","INTEGER","NATIVE CHARACTER","NCHAR","NUMERIC","NVARCHAR","REAL","TEXT","VARCHAR","VARYING CHARACTER"],kd=c(["SELECT [ALL | DISTINCT]"]),qd=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO","REPLACE INTO","VALUES","SET"]),xa=c(["CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]"]),Wi=c(["CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]","UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]","ON CONFLICT","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME [COLUMN]","RENAME TO","SET SCHEMA"]),Qd=c(["UNION [ALL]","EXCEPT","INTERSECT"]),jd=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Zd=c(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN","DO UPDATE"]),zd={name:"sqlite",tokenizerOptions:{reservedSelect:kd,reservedClauses:[...qd,...xa,...Wi],reservedSetOperations:Qd,reservedJoins:jd,reservedPhrases:Zd,reservedKeywords:$d,reservedDataTypes:Jd,reservedFunctionNames:Kd,stringTypes:["''-qq",{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``","[]"],paramTypes:{positional:!0,numbered:["?"],named:[":","@","$"]},operators:["%","~","&","|","<<",">>","==","->","->>","||"]},formatOptions:{onelineClauses:[...xa,...Wi],tabularOnelineClauses:Wi}},eC=["GROUPING","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","ROW_NUMBER","POSITION","OCCURRENCES_REGEX","POSITION_REGEX","EXTRACT","CHAR_LENGTH","CHARACTER_LENGTH","OCTET_LENGTH","CARDINALITY","ABS","MOD","LN","EXP","POWER","SQRT","FLOOR","CEIL","CEILING","WIDTH_BUCKET","SUBSTRING","SUBSTRING_REGEX","UPPER","LOWER","CONVERT","TRANSLATE","TRANSLATE_REGEX","TRIM","OVERLAY","NORMALIZE","SPECIFICTYPE","CURRENT_DATE","CURRENT_TIME","LOCALTIME","CURRENT_TIMESTAMP","LOCALTIMESTAMP","COUNT","AVG","MAX","MIN","SUM","STDDEV_POP","STDDEV_SAMP","VAR_SAMP","VAR_POP","COLLECT","FUSION","INTERSECTION","COVAR_POP","COVAR_SAMP","CORR","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","PERCENTILE_CONT","PERCENTILE_DISC","CAST","COALESCE","NULLIF","ROUND","SIN","COS","TAN","ASIN","ACOS","ATAN"],tC=["ALL","ALLOCATE","ALTER","ANY","ARE","AS","ASC","ASENSITIVE","ASYMMETRIC","AT","ATOMIC","AUTHORIZATION","BEGIN","BETWEEN","BOTH","BY","CALL","CALLED","CASCADED","CAST","CHECK","CLOSE","COALESCE","COLLATE","COLUMN","COMMIT","CONDITION","CONNECT","CONSTRAINT","CORRESPONDING","CREATE","CROSS","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DEFAULT_TRANSFORM_GROUP","CURRENT_PATH","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TRANSFORM_GROUP_FOR_TYPE","CURRENT_USER","CURSOR","CYCLE","DEALLOCATE","DAY","DECLARE","DEFAULT","DELETE","DEREF","DESC","DESCRIBE","DETERMINISTIC","DISCONNECT","DISTINCT","DROP","DYNAMIC","EACH","ELEMENT","END-EXEC","ESCAPE","EVERY","EXCEPT","EXEC","EXECUTE","EXISTS","EXTERNAL","FALSE","FETCH","FILTER","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GET","GLOBAL","GRANT","GROUP","HAVING","HOLD","HOUR","IDENTITY","IN","INDICATOR","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTO","IS","LANGUAGE","LARGE","LATERAL","LEADING","LEFT","LIKE","LIKE_REGEX","LOCAL","MATCH","MEMBER","MERGE","METHOD","MINUTE","MODIFIES","MODULE","MONTH","NATURAL","NEW","NO","NONE","NOT","NULL","NULLIF","OF","OLD","ON","ONLY","OPEN","ORDER","OUT","OUTER","OVER","OVERLAPS","PARAMETER","PARTITION","PRECISION","PREPARE","PRIMARY","PROCEDURE","RANGE","READS","REAL","RECURSIVE","REF","REFERENCES","REFERENCING","RELEASE","RESULT","RETURN","RETURNS","REVOKE","RIGHT","ROLLBACK","ROLLUP","ROW","ROWS","SAVEPOINT","SCOPE","SCROLL","SEARCH","SECOND","SELECT","SENSITIVE","SESSION_USER","SET","SIMILAR","SOME","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","START","STATIC","SUBMULTISET","SYMMETRIC","SYSTEM","SYSTEM_USER","TABLE","TABLESAMPLE","THEN","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TRAILING","TRANSLATION","TREAT","TRIGGER","TRUE","UESCAPE","UNION","UNIQUE","UNKNOWN","UNNEST","UPDATE","USER","USING","VALUE","VALUES","WHENEVER","WINDOW","WITHIN","WITHOUT","YEAR"],sC=["ARRAY","BIGINT","BINARY LARGE OBJECT","BINARY VARYING","BINARY","BLOB","BOOLEAN","CHAR LARGE OBJECT","CHAR VARYING","CHAR","CHARACTER LARGE OBJECT","CHARACTER VARYING","CHARACTER","CLOB","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MULTISET","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER LARGE OBJECT","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR LARGE OBJECT","NCHAR VARYING","NCHAR","NCLOB","NUMERIC","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],rC=c(["SELECT [ALL | DISTINCT]"]),EC=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET"]),Xa=c(["CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE"]),xi=c(["CREATE [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","DELETE FROM","DROP TABLE","ALTER TABLE","ADD COLUMN","DROP [COLUMN]","RENAME COLUMN","RENAME TO","ALTER [COLUMN]","{SET | DROP} DEFAULT","ADD SCOPE","DROP SCOPE {CASCADE | RESTRICT}","RESTART WITH","TRUNCATE TABLE","SET SCHEMA"]),nC=c(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),iC=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),TC=c(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),oC={name:"sql",tokenizerOptions:{reservedSelect:rC,reservedClauses:[...EC,...Xa,...xi],reservedSetOperations:nC,reservedJoins:iC,reservedPhrases:TC,reservedKeywords:tC,reservedDataTypes:sC,reservedFunctionNames:eC,stringTypes:[{quote:"''-qq-bs",prefixes:["N","U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``"],paramTypes:{positional:!0},operators:["||"]},formatOptions:{onelineClauses:[...Xa,...xi],tabularOnelineClauses:xi}},aC=["ABS","ACOS","ALL_MATCH","ANY_MATCH","APPROX_DISTINCT","APPROX_MOST_FREQUENT","APPROX_PERCENTILE","APPROX_SET","ARBITRARY","ARRAYS_OVERLAP","ARRAY_AGG","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_SORT","ARRAY_UNION","ASIN","ATAN","ATAN2","AT_TIMEZONE","AVG","BAR","BETA_CDF","BING_TILE","BING_TILES_AROUND","BING_TILE_AT","BING_TILE_COORDINATES","BING_TILE_POLYGON","BING_TILE_QUADKEY","BING_TILE_ZOOM_LEVEL","BITWISE_AND","BITWISE_AND_AGG","BITWISE_LEFT_SHIFT","BITWISE_NOT","BITWISE_OR","BITWISE_OR_AGG","BITWISE_RIGHT_SHIFT","BITWISE_RIGHT_SHIFT_ARITHMETIC","BITWISE_XOR","BIT_COUNT","BOOL_AND","BOOL_OR","CARDINALITY","CAST","CBRT","CEIL","CEILING","CHAR2HEXINT","CHECKSUM","CHR","CLASSIFY","COALESCE","CODEPOINT","COLOR","COMBINATIONS","CONCAT","CONCAT_WS","CONTAINS","CONTAINS_SEQUENCE","CONVEX_HULL_AGG","CORR","COS","COSH","COSINE_SIMILARITY","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CRC32","CUME_DIST","CURRENT_CATALOG","CURRENT_DATE","CURRENT_GROUPS","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","DATE","DATE_ADD","DATE_DIFF","DATE_FORMAT","DATE_PARSE","DATE_TRUNC","DAY","DAY_OF_MONTH","DAY_OF_WEEK","DAY_OF_YEAR","DEGREES","DENSE_RANK","DOW","DOY","E","ELEMENT_AT","EMPTY_APPROX_SET","EVALUATE_CLASSIFIER_PREDICTIONS","EVERY","EXP","EXTRACT","FEATURES","FILTER","FIRST_VALUE","FLATTEN","FLOOR","FORMAT","FORMAT_DATETIME","FORMAT_NUMBER","FROM_BASE","FROM_BASE32","FROM_BASE64","FROM_BASE64URL","FROM_BIG_ENDIAN_32","FROM_BIG_ENDIAN_64","FROM_ENCODED_POLYLINE","FROM_GEOJSON_GEOMETRY","FROM_HEX","FROM_IEEE754_32","FROM_IEEE754_64","FROM_ISO8601_DATE","FROM_ISO8601_TIMESTAMP","FROM_ISO8601_TIMESTAMP_NANOS","FROM_UNIXTIME","FROM_UNIXTIME_NANOS","FROM_UTF8","GEOMETRIC_MEAN","GEOMETRY_FROM_HADOOP_SHAPE","GEOMETRY_INVALID_REASON","GEOMETRY_NEAREST_POINTS","GEOMETRY_TO_BING_TILES","GEOMETRY_UNION","GEOMETRY_UNION_AGG","GREATEST","GREAT_CIRCLE_DISTANCE","HAMMING_DISTANCE","HASH_COUNTS","HISTOGRAM","HMAC_MD5","HMAC_SHA1","HMAC_SHA256","HMAC_SHA512","HOUR","HUMAN_READABLE_SECONDS","IF","INDEX","INFINITY","INTERSECTION_CARDINALITY","INVERSE_BETA_CDF","INVERSE_NORMAL_CDF","IS_FINITE","IS_INFINITE","IS_JSON_SCALAR","IS_NAN","JACCARD_INDEX","JSON_ARRAY_CONTAINS","JSON_ARRAY_GET","JSON_ARRAY_LENGTH","JSON_EXISTS","JSON_EXTRACT","JSON_EXTRACT_SCALAR","JSON_FORMAT","JSON_PARSE","JSON_QUERY","JSON_SIZE","JSON_VALUE","KURTOSIS","LAG","LAST_DAY_OF_MONTH","LAST_VALUE","LEAD","LEARN_CLASSIFIER","LEARN_LIBSVM_CLASSIFIER","LEARN_LIBSVM_REGRESSOR","LEARN_REGRESSOR","LEAST","LENGTH","LEVENSHTEIN_DISTANCE","LINE_INTERPOLATE_POINT","LINE_INTERPOLATE_POINTS","LINE_LOCATE_POINT","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","LUHN_CHECK","MAKE_SET_DIGEST","MAP","MAP_AGG","MAP_CONCAT","MAP_ENTRIES","MAP_FILTER","MAP_FROM_ENTRIES","MAP_KEYS","MAP_UNION","MAP_VALUES","MAP_ZIP_WITH","MAX","MAX_BY","MD5","MERGE","MERGE_SET_DIGEST","MILLISECOND","MIN","MINUTE","MIN_BY","MOD","MONTH","MULTIMAP_AGG","MULTIMAP_FROM_ENTRIES","MURMUR3","NAN","NGRAMS","NONE_MATCH","NORMALIZE","NORMAL_CDF","NOW","NTH_VALUE","NTILE","NULLIF","NUMERIC_HISTOGRAM","OBJECTID","OBJECTID_TIMESTAMP","PARSE_DATA_SIZE","PARSE_DATETIME","PARSE_DURATION","PERCENT_RANK","PI","POSITION","POW","POWER","QDIGEST_AGG","QUARTER","RADIANS","RAND","RANDOM","RANK","REDUCE","REDUCE_AGG","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGRESS","REGR_INTERCEPT","REGR_SLOPE","RENDER","REPEAT","REPLACE","REVERSE","RGB","ROUND","ROW_NUMBER","RPAD","RTRIM","SECOND","SEQUENCE","SHA1","SHA256","SHA512","SHUFFLE","SIGN","SIMPLIFY_GEOMETRY","SIN","SKEWNESS","SLICE","SOUNDEX","SPATIAL_PARTITIONING","SPATIAL_PARTITIONS","SPLIT","SPLIT_PART","SPLIT_TO_MAP","SPLIT_TO_MULTIMAP","SPOOKY_HASH_V2_32","SPOOKY_HASH_V2_64","SQRT","STARTS_WITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRPOS","ST_AREA","ST_ASBINARY","ST_ASTEXT","ST_BOUNDARY","ST_BUFFER","ST_CENTROID","ST_CONTAINS","ST_CONVEXHULL","ST_COORDDIM","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_ENDPOINT","ST_ENVELOPE","ST_ENVELOPEASPTS","ST_EQUALS","ST_EXTERIORRING","ST_GEOMETRIES","ST_GEOMETRYFROMTEXT","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMBINARY","ST_INTERIORRINGN","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISRING","ST_ISSIMPLE","ST_ISVALID","ST_LENGTH","ST_LINEFROMTEXT","ST_LINESTRING","ST_MULTIPOINT","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINT","ST_POINTN","ST_POINTS","ST_POLYGON","ST_RELATE","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_TOUCHES","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","SUBSTR","SUBSTRING","SUM","TAN","TANH","TDIGEST_AGG","TIMESTAMP_OBJECTID","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO_BASE","TO_BASE32","TO_BASE64","TO_BASE64URL","TO_BIG_ENDIAN_32","TO_BIG_ENDIAN_64","TO_CHAR","TO_DATE","TO_ENCODED_POLYLINE","TO_GEOJSON_GEOMETRY","TO_GEOMETRY","TO_HEX","TO_IEEE754_32","TO_IEEE754_64","TO_ISO8601","TO_MILLISECONDS","TO_SPHERICAL_GEOGRAPHY","TO_TIMESTAMP","TO_UNIXTIME","TO_UTF8","TRANSFORM","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRIM_ARRAY","TRUNCATE","TRY","TRY_CAST","TYPEOF","UPPER","URL_DECODE","URL_ENCODE","URL_EXTRACT_FRAGMENT","URL_EXTRACT_HOST","URL_EXTRACT_PARAMETER","URL_EXTRACT_PATH","URL_EXTRACT_PORT","URL_EXTRACT_PROTOCOL","URL_EXTRACT_QUERY","UUID","VALUES_AT_QUANTILES","VALUE_AT_QUANTILE","VARIANCE","VAR_POP","VAR_SAMP","VERSION","WEEK","WEEK_OF_YEAR","WIDTH_BUCKET","WILSON_INTERVAL_LOWER","WILSON_INTERVAL_UPPER","WITH_TIMEZONE","WORD_STEM","XXHASH64","YEAR","YEAR_OF_WEEK","YOW","ZIP","ZIP_WITH","CLASSIFIER","FIRST","LAST","MATCH_NUMBER","NEXT","PERMUTE","PREV"],RC=["ABSENT","ADD","ADMIN","AFTER","ALL","ALTER","ANALYZE","AND","ANY","AS","ASC","AT","AUTHORIZATION","BERNOULLI","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CATALOGS","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","CONDITIONAL","CONSTRAINT","COPARTITION","CREATE","CROSS","CUBE","CURRENT","CURRENT_PATH","CURRENT_ROLE","DATA","DEALLOCATE","DEFAULT","DEFINE","DEFINER","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DISTINCT","DISTRIBUTED","DOUBLE","DROP","ELSE","EMPTY","ENCODING","END","ERROR","ESCAPE","EXCEPT","EXCLUDING","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FINAL","FIRST","FOLLOWING","FOR","FROM","FULL","FUNCTIONS","GRANT","GRANTED","GRANTS","GRAPHVIZ","GROUP","GROUPING","GROUPS","HAVING","IGNORE","IN","INCLUDING","INITIAL","INNER","INPUT","INSERT","INTERSECT","INTERVAL","INTO","INVOKER","IO","IS","ISOLATION","JOIN","JSON","JSON_ARRAY","JSON_OBJECT","KEEP","KEY","KEYS","LAST","LATERAL","LEADING","LEFT","LEVEL","LIKE","LIMIT","LOCAL","LOGICAL","MATCH","MATCHED","MATCHES","MATCH_RECOGNIZE","MATERIALIZED","MEASURES","NATURAL","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NOT","NULL","NULLS","OBJECT","OF","OFFSET","OMIT","ON","ONE","ONLY","OPTION","OR","ORDER","ORDINALITY","OUTER","OUTPUT","OVER","OVERFLOW","PARTITION","PARTITIONS","PASSING","PAST","PATH","PATTERN","PER","PERMUTE","PRECEDING","PRECISION","PREPARE","PRIVILEGES","PROPERTIES","PRUNE","QUOTES","RANGE","READ","RECURSIVE","REFRESH","RENAME","REPEATABLE","RESET","RESPECT","RESTRICT","RETURNING","REVOKE","RIGHT","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","RUNNING","SCALAR","SCHEMA","SCHEMAS","SECURITY","SEEK","SELECT","SERIALIZABLE","SESSION","SET","SETS","SHOW","SKIP","SOME","START","STATS","STRING","SUBSET","SYSTEM","TABLE","TABLES","TABLESAMPLE","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRUE","TYPE","UESCAPE","UNBOUNDED","UNCOMMITTED","UNCONDITIONAL","UNION","UNIQUE","UNKNOWN","UNMATCHED","UNNEST","UPDATE","USE","USER","USING","UTF16","UTF32","UTF8","VALIDATE","VALUE","VALUES","VERBOSE","VIEW","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","ZONE"],AC=["BIGINT","INT","INTEGER","SMALLINT","TINYINT","BOOLEAN","DATE","DECIMAL","REAL","DOUBLE","HYPERLOGLOG","QDIGEST","TDIGEST","P4HYPERLOGLOG","INTERVAL","TIMESTAMP","TIME","VARBINARY","VARCHAR","CHAR","ROW","ARRAY","MAP","JSON","JSON2016","IPADDRESS","GEOMETRY","UUID","SETDIGEST","JONIREGEXP","RE2JREGEXP","LIKEPATTERN","COLOR","CODEPOINTS","FUNCTION","JSONPATH"],SC=c(["SELECT [ALL | DISTINCT]"]),IC=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","MATCH_RECOGNIZE","MEASURES","ONE ROW PER MATCH","ALL ROWS PER MATCH","AFTER MATCH","PATTERN","SUBSET","DEFINE"]),Ka=c(["CREATE TABLE [IF NOT EXISTS]"]),Xi=c(["CREATE [OR REPLACE] [MATERIALIZED] VIEW","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME COLUMN [IF EXISTS]","RENAME TO","SET AUTHORIZATION [USER | ROLE]","SET PROPERTIES","EXECUTE","TRUNCATE TABLE","ALTER SCHEMA","ALTER MATERIALIZED VIEW","ALTER VIEW","CREATE SCHEMA","CREATE ROLE","DROP SCHEMA","DROP MATERIALIZED VIEW","DROP VIEW","DROP ROLE","EXPLAIN","ANALYZE","EXPLAIN ANALYZE","EXPLAIN ANALYZE VERBOSE","USE","DESCRIBE INPUT","DESCRIBE OUTPUT","REFRESH MATERIALIZED VIEW","RESET SESSION","SET SESSION","SET PATH","SET TIME ZONE","SHOW GRANTS","SHOW CREATE TABLE","SHOW CREATE SCHEMA","SHOW CREATE VIEW","SHOW CREATE MATERIALIZED VIEW","SHOW TABLES","SHOW SCHEMAS","SHOW CATALOGS","SHOW COLUMNS","SHOW STATS FOR","SHOW ROLES","SHOW CURRENT ROLES","SHOW ROLE GRANTS","SHOW FUNCTIONS","SHOW SESSION"]),OC=c(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),lC=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),NC=c(["{ROWS | RANGE | GROUPS} BETWEEN","IS [NOT] DISTINCT FROM"]),cC={name:"trino",tokenizerOptions:{reservedSelect:SC,reservedClauses:[...IC,...Ka,...Xi],reservedSetOperations:OC,reservedJoins:lC,reservedPhrases:NC,reservedKeywords:RC,reservedDataTypes:AC,reservedFunctionNames:aC,extraParens:["[]","{}"],stringTypes:[{quote:"''-qq",prefixes:["U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq'],paramTypes:{positional:!0},operators:["%","->","=>",":","||","|","^","$"]},formatOptions:{onelineClauses:[...Ka,...Xi],tabularOnelineClauses:Xi}},uC=["APPROX_COUNT_DISTINCT","AVG","CHECKSUM_AGG","COUNT","COUNT_BIG","GROUPING","GROUPING_ID","MAX","MIN","STDEV","STDEVP","SUM","VAR","VARP","CUME_DIST","FIRST_VALUE","LAG","LAST_VALUE","LEAD","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","Collation - COLLATIONPROPERTY","Collation - TERTIARY_WEIGHTS","@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION","CAST","CONVERT","PARSE","TRY_CAST","TRY_CONVERT","TRY_PARSE","ASYMKEY_ID","ASYMKEYPROPERTY","CERTPROPERTY","CERT_ID","CRYPT_GEN_RANDOM","DECRYPTBYASYMKEY","DECRYPTBYCERT","DECRYPTBYKEY","DECRYPTBYKEYAUTOASYMKEY","DECRYPTBYKEYAUTOCERT","DECRYPTBYPASSPHRASE","ENCRYPTBYASYMKEY","ENCRYPTBYCERT","ENCRYPTBYKEY","ENCRYPTBYPASSPHRASE","HASHBYTES","IS_OBJECTSIGNED","KEY_GUID","KEY_ID","KEY_NAME","SIGNBYASYMKEY","SIGNBYCERT","SYMKEYPROPERTY","VERIFYSIGNEDBYCERT","VERIFYSIGNEDBYASYMKEY","@@CURSOR_ROWS","@@FETCH_STATUS","CURSOR_STATUS","DATALENGTH","IDENT_CURRENT","IDENT_INCR","IDENT_SEED","IDENTITY","SQL_VARIANT_PROPERTY","@@DATEFIRST","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_TIMEZONE_ID","DATEADD","DATEDIFF","DATEDIFF_BIG","DATEFROMPARTS","DATENAME","DATEPART","DATETIME2FROMPARTS","DATETIMEFROMPARTS","DATETIMEOFFSETFROMPARTS","DAY","EOMONTH","GETDATE","GETUTCDATE","ISDATE","MONTH","SMALLDATETIMEFROMPARTS","SWITCHOFFSET","SYSDATETIME","SYSDATETIMEOFFSET","SYSUTCDATETIME","TIMEFROMPARTS","TODATETIMEOFFSET","YEAR","JSON","ISJSON","JSON_VALUE","JSON_QUERY","JSON_MODIFY","ABS","ACOS","ASIN","ATAN","ATN2","CEILING","COS","COT","DEGREES","EXP","FLOOR","LOG","LOG10","PI","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SQUARE","TAN","CHOOSE","GREATEST","IIF","LEAST","@@PROCID","APP_NAME","APPLOCK_MODE","APPLOCK_TEST","ASSEMBLYPROPERTY","COL_LENGTH","COL_NAME","COLUMNPROPERTY","DATABASEPROPERTYEX","DB_ID","DB_NAME","FILE_ID","FILE_IDEX","FILE_NAME","FILEGROUP_ID","FILEGROUP_NAME","FILEGROUPPROPERTY","FILEPROPERTY","FILEPROPERTYEX","FULLTEXTCATALOGPROPERTY","FULLTEXTSERVICEPROPERTY","INDEX_COL","INDEXKEY_PROPERTY","INDEXPROPERTY","NEXT VALUE FOR","OBJECT_DEFINITION","OBJECT_ID","OBJECT_NAME","OBJECT_SCHEMA_NAME","OBJECTPROPERTY","OBJECTPROPERTYEX","ORIGINAL_DB_NAME","PARSENAME","SCHEMA_ID","SCHEMA_NAME","SCOPE_IDENTITY","SERVERPROPERTY","STATS_DATE","TYPE_ID","TYPE_NAME","TYPEPROPERTY","DENSE_RANK","NTILE","RANK","ROW_NUMBER","PUBLISHINGSERVERNAME","CERTENCODED","CERTPRIVATEKEY","CURRENT_USER","DATABASE_PRINCIPAL_ID","HAS_DBACCESS","HAS_PERMS_BY_NAME","IS_MEMBER","IS_ROLEMEMBER","IS_SRVROLEMEMBER","LOGINPROPERTY","ORIGINAL_LOGIN","PERMISSIONS","PWDENCRYPT","PWDCOMPARE","SESSION_USER","SESSIONPROPERTY","SUSER_ID","SUSER_NAME","SUSER_SID","SUSER_SNAME","SYSTEM_USER","USER","USER_ID","USER_NAME","ASCII","CHARINDEX","CONCAT","CONCAT_WS","DIFFERENCE","FORMAT","LEFT","LEN","LOWER","LTRIM","PATINDEX","QUOTENAME","REPLACE","REPLICATE","REVERSE","RIGHT","RTRIM","SOUNDEX","SPACE","STR","STRING_AGG","STRING_ESCAPE","STUFF","SUBSTRING","TRANSLATE","TRIM","UNICODE","UPPER","$PARTITION","@@ERROR","@@IDENTITY","@@PACK_RECEIVED","@@ROWCOUNT","@@TRANCOUNT","BINARY_CHECKSUM","CHECKSUM","COMPRESS","CONNECTIONPROPERTY","CONTEXT_INFO","CURRENT_REQUEST_ID","CURRENT_TRANSACTION_ID","DECOMPRESS","ERROR_LINE","ERROR_MESSAGE","ERROR_NUMBER","ERROR_PROCEDURE","ERROR_SEVERITY","ERROR_STATE","FORMATMESSAGE","GET_FILESTREAM_TRANSACTION_CONTEXT","GETANSINULL","HOST_ID","HOST_NAME","ISNULL","ISNUMERIC","MIN_ACTIVE_ROWVERSION","NEWID","NEWSEQUENTIALID","ROWCOUNT_BIG","SESSION_CONTEXT","XACT_STATE","@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACK_SENT","@@PACKET_ERRORS","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE","TEXTPTR","TEXTVALID","COLUMNS_UPDATED","EVENTDATA","TRIGGER_NESTLEVEL","UPDATE","COALESCE","NULLIF"],_C=["ADD","ALL","ALTER","AND","ANY","AS","ASC","AUTHORIZATION","BACKUP","BEGIN","BETWEEN","BREAK","BROWSE","BULK","BY","CASCADE","CHECK","CHECKPOINT","CLOSE","CLUSTERED","COALESCE","COLLATE","COLUMN","COMMIT","COMPUTE","CONSTRAINT","CONTAINS","CONTAINSTABLE","CONTINUE","CONVERT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DBCC","DEALLOCATE","DECLARE","DEFAULT","DELETE","DENY","DESC","DISK","DISTINCT","DISTRIBUTED","DROP","DUMP","ERRLVL","ESCAPE","EXEC","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FILE","FILLFACTOR","FOR","FOREIGN","FREETEXT","FREETEXTTABLE","FROM","FULL","FUNCTION","GOTO","GRANT","GROUP","HAVING","HOLDLOCK","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IN","INDEX","INNER","INSERT","INTERSECT","INTO","IS","JOIN","KEY","KILL","LEFT","LIKE","LINENO","LOAD","MERGE","NOCHECK","NONCLUSTERED","NOT","NULL","NULLIF","OF","OFF","OFFSETS","ON","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPTION","OR","ORDER","OUTER","OVER","PERCENT","PIVOT","PLAN","PRIMARY","PRINT","PROC","PROCEDURE","PUBLIC","RAISERROR","READ","READTEXT","RECONFIGURE","REFERENCES","REPLICATION","RESTORE","RESTRICT","RETURN","REVERT","REVOKE","RIGHT","ROLLBACK","ROWCOUNT","ROWGUIDCOL","RULE","SAVE","SCHEMA","SECURITYAUDIT","SELECT","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SESSION_USER","SET","SETUSER","SHUTDOWN","SOME","STATISTICS","SYSTEM_USER","TABLE","TABLESAMPLE","TEXTSIZE","THEN","TO","TOP","TRAN","TRANSACTION","TRIGGER","TRUNCATE","TRY_CONVERT","TSEQUAL","UNION","UNIQUE","UNPIVOT","UPDATE","UPDATETEXT","USE","USER","VALUES","VIEW","WAITFOR","WHERE","WHILE","WITH","WITHIN GROUP","WRITETEXT","$ACTION"],LC=["BINARY","BIT","CHAR","CHAR","CHARACTER","DATE","DATETIME2","DATETIMEOFFSET","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","NATIONAL","NCHAR","NUMERIC","NVARCHAR","PRECISION","REAL","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],dC=c(["SELECT [ALL | DISTINCT]"]),CC=c(["WITH","INTO","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","OFFSET","FETCH {FIRST | NEXT}","FOR {BROWSE | XML | JSON}","OPTION","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]","UPDATE SET","CREATE [OR ALTER] {PROC | PROCEDURE}"]),$a=c(["CREATE TABLE"]),Ki=c(["CREATE [OR ALTER] [MATERIALIZED] VIEW","UPDATE","WHERE CURRENT OF","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD","DROP COLUMN [IF EXISTS]","ALTER COLUMN","TRUNCATE TABLE","CREATE [UNIQUE] [CLUSTERED] INDEX","GO","ADD SENSITIVITY CLASSIFICATION","ADD SIGNATURE","AGGREGATE","ANSI_DEFAULTS","ANSI_NULLS","ANSI_NULL_DFLT_OFF","ANSI_NULL_DFLT_ON","ANSI_PADDING","ANSI_WARNINGS","APPLICATION ROLE","ARITHABORT","ARITHIGNORE","ASSEMBLY","ASYMMETRIC KEY","AUTHORIZATION","AVAILABILITY GROUP","BACKUP","BACKUP CERTIFICATE","BACKUP MASTER KEY","BACKUP SERVICE MASTER KEY","BEGIN CONVERSATION TIMER","BEGIN DIALOG CONVERSATION","BROKER PRIORITY","BULK INSERT","CERTIFICATE","CLOSE MASTER KEY","CLOSE SYMMETRIC KEY","COLLATE","COLUMN ENCRYPTION KEY","COLUMN MASTER KEY","COLUMNSTORE INDEX","CONCAT_NULL_YIELDS_NULL","CONTEXT_INFO","CONTRACT","CREDENTIAL","CRYPTOGRAPHIC PROVIDER","CURSOR_CLOSE_ON_COMMIT","DATABASE","DATABASE AUDIT SPECIFICATION","DATABASE ENCRYPTION KEY","DATABASE HADR","DATABASE SCOPED CONFIGURATION","DATABASE SCOPED CREDENTIAL","DATABASE SET","DATEFIRST","DATEFORMAT","DEADLOCK_PRIORITY","DENY","DENY XML","DISABLE TRIGGER","ENABLE TRIGGER","END CONVERSATION","ENDPOINT","EVENT NOTIFICATION","EVENT SESSION","EXECUTE AS","EXTERNAL DATA SOURCE","EXTERNAL FILE FORMAT","EXTERNAL LANGUAGE","EXTERNAL LIBRARY","EXTERNAL RESOURCE POOL","EXTERNAL TABLE","FIPS_FLAGGER","FMTONLY","FORCEPLAN","FULLTEXT CATALOG","FULLTEXT INDEX","FULLTEXT STOPLIST","FUNCTION","GET CONVERSATION GROUP","GET_TRANSMISSION_STATUS","GRANT","GRANT XML","IDENTITY_INSERT","IMPLICIT_TRANSACTIONS","INDEX","LANGUAGE","LOCK_TIMEOUT","LOGIN","MASTER KEY","MESSAGE TYPE","MOVE CONVERSATION","NOCOUNT","NOEXEC","NUMERIC_ROUNDABORT","OFFSETS","OPEN MASTER KEY","OPEN SYMMETRIC KEY","PARSEONLY","PARTITION FUNCTION","PARTITION SCHEME","PROCEDURE","QUERY_GOVERNOR_COST_LIMIT","QUEUE","QUOTED_IDENTIFIER","RECEIVE","REMOTE SERVICE BINDING","REMOTE_PROC_TRANSACTIONS","RESOURCE GOVERNOR","RESOURCE POOL","RESTORE","RESTORE FILELISTONLY","RESTORE HEADERONLY","RESTORE LABELONLY","RESTORE MASTER KEY","RESTORE REWINDONLY","RESTORE SERVICE MASTER KEY","RESTORE VERIFYONLY","REVERT","REVOKE","REVOKE XML","ROLE","ROUTE","ROWCOUNT","RULE","SCHEMA","SEARCH PROPERTY LIST","SECURITY POLICY","SELECTIVE XML INDEX","SEND","SENSITIVITY CLASSIFICATION","SEQUENCE","SERVER AUDIT","SERVER AUDIT SPECIFICATION","SERVER CONFIGURATION","SERVER ROLE","SERVICE","SERVICE MASTER KEY","SETUSER","SHOWPLAN_ALL","SHOWPLAN_TEXT","SHOWPLAN_XML","SIGNATURE","SPATIAL INDEX","STATISTICS","STATISTICS IO","STATISTICS PROFILE","STATISTICS TIME","STATISTICS XML","SYMMETRIC KEY","SYNONYM","TABLE","TABLE IDENTITY","TEXTSIZE","TRANSACTION ISOLATION LEVEL","TRIGGER","TYPE","UPDATE STATISTICS","USER","WORKLOAD GROUP","XACT_ABORT","XML INDEX","XML SCHEMA COLLECTION"]),fC=c(["UNION [ALL]","EXCEPT","INTERSECT"]),hC=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","{CROSS | OUTER} APPLY"]),DC=c(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),pC={name:"transactsql",tokenizerOptions:{reservedSelect:dC,reservedClauses:[...CC,...$a,...Ki],reservedSetOperations:fC,reservedJoins:hC,reservedPhrases:DC,reservedKeywords:_C,reservedDataTypes:LC,reservedFunctionNames:uC,nestedBlockComments:!0,stringTypes:[{quote:"''-qq",prefixes:["N"]}],identTypes:['""-qq',"[]"],identChars:{first:"#@",rest:"#@$"},paramTypes:{named:["@"],quoted:["@"]},operators:["%","&","|","^","~","!<","!>","+=","-=","*=","/=","%=","|=","&=","^=","::",":"],propertyAccessOperators:[".."]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...$a,...Ki],tabularOnelineClauses:Ki}},PC=["ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","_BINARY","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","EXTRA_JOIN","FALSE","FETCH","FOR","FORCE","FORCE_COMPILED_MODE","FORCE_INTERPRETER_MODE","FOREIGN","FROM","FULL","FULLTEXT","GRANT","GROUP","HAVING","HEARTBEAT_NO_LOGGING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","_INTERNAL_DYNAMIC_TYPECAST","INTERSECT","INTERVAL","INTO","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MATCH","MAXVALUE","MINUS","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NO_QUERY_REWRITE","NOT","NO_WRITE_TO_BINLOG","NO_QUERY_REWRITE","NULL","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESTRICT","RETURN","REVOKE","RIGHT","RIGHT_ANTI_JOIN","RIGHT_SEMI_JOIN","RIGHT_STRAIGHT_JOIN","RLIKE","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SEMI_JOIN","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQLEXCEPTION","SQL_NO_CACHE","SQL_NO_LOGGING","SQL_SMALL_RESULT","SQLSTATE","SQLWARNING","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNBOUNDED","UNDO","UNION","UNIQUE","UNLOCK","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","_UTF8","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WRITE","XOR","YEAR_MONTH","ZEROFILL"],MC=["BIGINT","BINARY","BIT","BLOB","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","UNSIGNED","VARBINARY","VARCHAR","VARCHARACTER","YEAR"],UC=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_COUNT_DISTINCT_ACCUMULATE","APPROX_COUNT_DISTINCT_COMBINE","APPROX_COUNT_DISTINCT_ESTIMATE","APPROX_GEOGRAPHY_INTERSECTS","APPROX_PERCENTILE","ASCII","ASIN","ATAN","ATAN2","AVG","BIN","BINARY","BIT_AND","BIT_COUNT","BIT_OR","BIT_XOR","CAST","CEIL","CEILING","CHAR","CHARACTER_LENGTH","CHAR_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COLLECT","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATEDIFF","DATE_FORMAT","DATE_SUB","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT","DEGREES","DENSE_RANK","DIV","DOT_PRODUCT","ELT","EUCLIDEAN_DISTANCE","EXP","EXTRACT","FIELD","FIRST","FIRST_VALUE","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOGRAPHY_AREA","GEOGRAPHY_CONTAINS","GEOGRAPHY_DISTANCE","GEOGRAPHY_INTERSECTS","GEOGRAPHY_LATITUDE","GEOGRAPHY_LENGTH","GEOGRAPHY_LONGITUDE","GEOGRAPHY_POINT","GEOGRAPHY_WITHIN_DISTANCE","GEOMETRY_AREA","GEOMETRY_CONTAINS","GEOMETRY_DISTANCE","GEOMETRY_FILTER","GEOMETRY_INTERSECTS","GEOMETRY_LENGTH","GEOMETRY_POINT","GEOMETRY_WITHIN_DISTANCE","GEOMETRY_X","GEOMETRY_Y","GREATEST","GROUPING","GROUP_CONCAT","HEX","HIGHLIGHT","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INITCAP","INSERT","INSTR","INTERVAL","IS","IS NULL","JSON_AGG","JSON_ARRAY_CONTAINS_DOUBLE","JSON_ARRAY_CONTAINS_JSON","JSON_ARRAY_CONTAINS_STRING","JSON_ARRAY_PUSH_DOUBLE","JSON_ARRAY_PUSH_JSON","JSON_ARRAY_PUSH_STRING","JSON_DELETE_KEY","JSON_EXTRACT_DOUBLE","JSON_EXTRACT_JSON","JSON_EXTRACT_STRING","JSON_EXTRACT_BIGINT","JSON_GET_TYPE","JSON_LENGTH","JSON_SET_DOUBLE","JSON_SET_JSON","JSON_SET_STRING","JSON_SPLICE_DOUBLE","JSON_SPLICE_JSON","JSON_SPLICE_STRING","LAG","LAST_DAY","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LN","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LPAD","LTRIM","MATCH","MAX","MD5","MEDIAN","MICROSECOND","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","NOT","NOW","NTH_VALUE","NTILE","NULLIF","OCTET_LENGTH","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIVOT","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANK","REGEXP","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCALAR","SCHEMA","SEC_TO_TIME","SHA1","SHA2","SIGMOID","SIGN","SIN","SLEEP","SPLIT","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUM","SYS_GUID","TAN","TIME","TIMEDIFF","TIME_BUCKET","TIME_FORMAT","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_JSON","TO_NUMBER","TO_SECONDS","TO_TIMESTAMP","TRIM","TRUNC","TRUNCATE","UCASE","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","VALUES","VARIANCE","VAR_POP","VAR_SAMP","VECTOR_SUB","VERSION","WEEK","WEEKDAY","WEEKOFYEAR","YEAR"],yC=c(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),mC=c(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [IGNORE] [INTO]","VALUES","REPLACE [INTO]","ON DUPLICATE KEY UPDATE","SET","CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] [EXTERNAL] FUNCTION"]),Ja=c(["CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]"]),$i=c(["CREATE VIEW","UPDATE","DELETE [FROM]","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] TABLE","ADD [COLUMN]","ADD [UNIQUE] {INDEX | KEY}","DROP [COLUMN]","MODIFY [COLUMN]","CHANGE","RENAME [TO | AS]","TRUNCATE [TABLE]","ADD AGGREGATOR","ADD LEAF","AGGREGATOR SET AS MASTER","ALTER DATABASE","ALTER PIPELINE","ALTER RESOURCE POOL","ALTER USER","ALTER VIEW","ANALYZE TABLE","ATTACH DATABASE","ATTACH LEAF","ATTACH LEAF ALL","BACKUP DATABASE","BINLOG","BOOTSTRAP AGGREGATOR","CACHE INDEX","CALL","CHANGE","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK BLOB CHECKSUM","CHECK TABLE","CHECKSUM TABLE","CLEAR ORPHAN DATABASES","CLONE","COMMIT","CREATE DATABASE","CREATE GROUP","CREATE INDEX","CREATE LINK","CREATE MILESTONE","CREATE PIPELINE","CREATE RESOURCE POOL","CREATE ROLE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DETACH DATABASE","DETACH PIPELINE","DROP DATABASE","DROP FUNCTION","DROP INDEX","DROP LINK","DROP PIPELINE","DROP PROCEDURE","DROP RESOURCE POOL","DROP ROLE","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","FORCE","GRANT","HANDLER","HELP","KILL CONNECTION","KILLALL QUERIES","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","REBALANCE PARTITIONS","RELEASE SAVEPOINT","REMOVE AGGREGATOR","REMOVE LEAF","REPAIR TABLE","REPLACE","REPLICATE DATABASE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","RESTORE DATABASE","RESTORE REDUNDANCY","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE FUNCTION","SHOW CREATE PIPELINE","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SNAPSHOT DATABASE","SOURCE_POS_WAIT","START GROUP_REPLICATION","START PIPELINE","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP PIPELINE","STOP REPLICA","STOP REPLICATING","STOP SLAVE","TEST PIPELINE","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),BC=c(["UNION [ALL | DISTINCT]","EXCEPT","INTERSECT","MINUS"]),FC=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),GC=c(["ON DELETE","ON UPDATE","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),bC={name:"singlestoredb",tokenizerOptions:{reservedSelect:yC,reservedClauses:[...mC,...Ja,...$i],reservedSetOperations:BC,reservedJoins:FC,reservedPhrases:GC,reservedKeywords:PC,reservedDataTypes:MC,reservedFunctionNames:UC,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_$]+"},{quote:"``",prefixes:["@"],requirePrefix:!0}],lineCommentTypes:["--","#"],operators:[":=","&","|","^","~","<<",">>","<=>","&&","||","::","::$","::%",":>","!:>","*.*"],postProcess:ni},formatOptions:{alwaysDenseOperators:["::","::$","::%"],onelineClauses:[...Ja,...$i],tabularOnelineClauses:$i}},gC=["ABS","ACOS","ACOSH","ADD_MONTHS","ALL_USER_NAMES","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","APPROX_PERCENTILE_ACCUMULATE","APPROX_PERCENTILE_COMBINE","APPROX_PERCENTILE_ESTIMATE","APPROX_TOP_K","APPROX_TOP_K_ACCUMULATE","APPROX_TOP_K_COMBINE","APPROX_TOP_K_ESTIMATE","APPROXIMATE_JACCARD_INDEX","APPROXIMATE_SIMILARITY","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_COMPACT","ARRAY_CONSTRUCT","ARRAY_CONSTRUCT_COMPACT","ARRAY_CONTAINS","ARRAY_INSERT","ARRAY_INTERSECTION","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_SIZE","ARRAY_SLICE","ARRAY_TO_STRING","ARRAY_UNION_AGG","ARRAY_UNIQUE_AGG","ARRAYS_OVERLAP","AS_ARRAY","AS_BINARY","AS_BOOLEAN","AS_CHAR","AS_VARCHAR","AS_DATE","AS_DECIMAL","AS_NUMBER","AS_DOUBLE","AS_REAL","AS_INTEGER","AS_OBJECT","AS_TIME","AS_TIMESTAMP_LTZ","AS_TIMESTAMP_NTZ","AS_TIMESTAMP_TZ","ASCII","ASIN","ASINH","ATAN","ATAN2","ATANH","AUTO_REFRESH_REGISTRATION_HISTORY","AUTOMATIC_CLUSTERING_HISTORY","AVG","BASE64_DECODE_BINARY","BASE64_DECODE_STRING","BASE64_ENCODE","BIT_LENGTH","BITAND","BITAND_AGG","BITMAP_BIT_POSITION","BITMAP_BUCKET_NUMBER","BITMAP_CONSTRUCT_AGG","BITMAP_COUNT","BITMAP_OR_AGG","BITNOT","BITOR","BITOR_AGG","BITSHIFTLEFT","BITSHIFTRIGHT","BITXOR","BITXOR_AGG","BOOLAND","BOOLAND_AGG","BOOLNOT","BOOLOR","BOOLOR_AGG","BOOLXOR","BOOLXOR_AGG","BUILD_SCOPED_FILE_URL","BUILD_STAGE_FILE_URL","CASE","CAST","CBRT","CEIL","CHARINDEX","CHECK_JSON","CHECK_XML","CHR","CHAR","COALESCE","COLLATE","COLLATION","COMPLETE_TASK_GRAPHS","COMPRESS","CONCAT","CONCAT_WS","CONDITIONAL_CHANGE_EVENT","CONDITIONAL_TRUE_EVENT","CONTAINS","CONVERT_TIMEZONE","COPY_HISTORY","CORR","COS","COSH","COT","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CUME_DIST","CURRENT_ACCOUNT","CURRENT_AVAILABLE_ROLES","CURRENT_CLIENT","CURRENT_DATABASE","CURRENT_DATE","CURRENT_IP_ADDRESS","CURRENT_REGION","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_SECONDARY_ROLES","CURRENT_SESSION","CURRENT_STATEMENT","CURRENT_TASK_GRAPHS","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TRANSACTION","CURRENT_USER","CURRENT_VERSION","CURRENT_WAREHOUSE","DATA_TRANSFER_HISTORY","DATABASE_REFRESH_HISTORY","DATABASE_REFRESH_PROGRESS","DATABASE_REFRESH_PROGRESS_BY_JOB","DATABASE_STORAGE_USAGE_HISTORY","DATE_FROM_PARTS","DATE_PART","DATE_TRUNC","DATEADD","DATEDIFF","DAYNAME","DECODE","DECOMPRESS_BINARY","DECOMPRESS_STRING","DECRYPT","DECRYPT_RAW","DEGREES","DENSE_RANK","DIV0","EDITDISTANCE","ENCRYPT","ENCRYPT_RAW","ENDSWITH","EQUAL_NULL","EXP","EXPLAIN_JSON","EXTERNAL_FUNCTIONS_HISTORY","EXTERNAL_TABLE_FILES","EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY","EXTRACT","EXTRACT_SEMANTIC_CATEGORIES","FACTORIAL","FILTER","FIRST_VALUE","FLATTEN","FLOOR","GENERATE_COLUMN_DESCRIPTION","GENERATOR","GET","GET_ABSOLUTE_PATH","GET_DDL","GET_IGNORE_CASE","GET_OBJECT_REFERENCES","GET_PATH","GET_PRESIGNED_URL","GET_RELATIVE_PATH","GET_STAGE_LOCATION","GETBIT","GREATEST","GREATEST_IGNORE_NULLS","GROUPING","GROUPING_ID","HASH","HASH_AGG","HAVERSINE","HEX_DECODE_BINARY","HEX_DECODE_STRING","HEX_ENCODE","HLL","HLL_ACCUMULATE","HLL_COMBINE","HLL_ESTIMATE","HLL_EXPORT","HLL_IMPORT","HOUR","MINUTE","SECOND","IFF","IFNULL","ILIKE","ILIKE ANY","INFER_SCHEMA","INITCAP","INSERT","INVOKER_ROLE","INVOKER_SHARE","IS_ARRAY","IS_BINARY","IS_BOOLEAN","IS_CHAR","IS_VARCHAR","IS_DATE","IS_DATE_VALUE","IS_DECIMAL","IS_DOUBLE","IS_REAL","IS_GRANTED_TO_INVOKER_ROLE","IS_INTEGER","IS_NULL_VALUE","IS_OBJECT","IS_ROLE_IN_SESSION","IS_TIME","IS_TIMESTAMP_LTZ","IS_TIMESTAMP_NTZ","IS_TIMESTAMP_TZ","JAROWINKLER_SIMILARITY","JSON_EXTRACT_PATH_TEXT","KURTOSIS","LAG","LAST_DAY","LAST_QUERY_ID","LAST_TRANSACTION","LAST_VALUE","LEAD","LEAST","LEFT","LENGTH","LEN","LIKE","LIKE ALL","LIKE ANY","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOGIN_HISTORY","LOGIN_HISTORY_BY_USER","LOWER","LPAD","LTRIM","MATERIALIZED_VIEW_REFRESH_HISTORY","MD5","MD5_HEX","MD5_BINARY","MD5_NUMBER — Obsoleted","MD5_NUMBER_LOWER64","MD5_NUMBER_UPPER64","MEDIAN","MIN","MAX","MINHASH","MINHASH_COMBINE","MOD","MODE","MONTHNAME","MONTHS_BETWEEN","NEXT_DAY","NORMAL","NTH_VALUE","NTILE","NULLIF","NULLIFZERO","NVL","NVL2","OBJECT_AGG","OBJECT_CONSTRUCT","OBJECT_CONSTRUCT_KEEP_NULL","OBJECT_DELETE","OBJECT_INSERT","OBJECT_KEYS","OBJECT_PICK","OCTET_LENGTH","PARSE_IP","PARSE_JSON","PARSE_URL","PARSE_XML","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIPE_USAGE_HISTORY","POLICY_CONTEXT","POLICY_REFERENCES","POSITION","POW","POWER","PREVIOUS_DAY","QUERY_ACCELERATION_HISTORY","QUERY_HISTORY","QUERY_HISTORY_BY_SESSION","QUERY_HISTORY_BY_USER","QUERY_HISTORY_BY_WAREHOUSE","RADIANS","RANDOM","RANDSTR","RANK","RATIO_TO_REPORT","REGEXP","REGEXP_COUNT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","REGEXP_SUBSTR_ALL","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REGR_VALX","REGR_VALY","REPEAT","REPLACE","REPLICATION_GROUP_REFRESH_HISTORY","REPLICATION_GROUP_REFRESH_PROGRESS","REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB","REPLICATION_GROUP_USAGE_HISTORY","REPLICATION_USAGE_HISTORY","REST_EVENT_HISTORY","RESULT_SCAN","REVERSE","RIGHT","RLIKE","ROUND","ROW_NUMBER","RPAD","RTRIM","RTRIMMED_LENGTH","SEARCH_OPTIMIZATION_HISTORY","SEQ1","SEQ2","SEQ4","SEQ8","SERVERLESS_TASK_HISTORY","SHA1","SHA1_HEX","SHA1_BINARY","SHA2","SHA2_HEX","SHA2_BINARY","SIGN","SIN","SINH","SKEW","SOUNDEX","SPACE","SPLIT","SPLIT_PART","SPLIT_TO_TABLE","SQRT","SQUARE","ST_AREA","ST_ASEWKB","ST_ASEWKT","ST_ASGEOJSON","ST_ASWKB","ST_ASBINARY","ST_ASWKT","ST_ASTEXT","ST_AZIMUTH","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DWITHIN","ST_ENDPOINT","ST_ENVELOPE","ST_GEOGFROMGEOHASH","ST_GEOGPOINTFROMGEOHASH","ST_GEOGRAPHYFROMWKB","ST_GEOGRAPHYFROMWKT","ST_GEOHASH","ST_GEOMETRYFROMWKB","ST_GEOMETRYFROMWKT","ST_HAUSDORFFDISTANCE","ST_INTERSECTION","ST_INTERSECTS","ST_LENGTH","ST_MAKEGEOMPOINT","ST_GEOM_POINT","ST_MAKELINE","ST_MAKEPOINT","ST_POINT","ST_MAKEPOLYGON","ST_POLYGON","ST_NPOINTS","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SETSRID","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY","STAGE_STORAGE_USAGE_HISTORY","STARTSWITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRIP_NULL_VALUE","STRTOK","STRTOK_SPLIT_TO_TABLE","STRTOK_TO_ARRAY","SUBSTR","SUBSTRING","SUM","SYSDATE","SYSTEM$ABORT_SESSION","SYSTEM$ABORT_TRANSACTION","SYSTEM$AUTHORIZE_PRIVATELINK","SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS","SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS","SYSTEM$CANCEL_ALL_QUERIES","SYSTEM$CANCEL_QUERY","SYSTEM$CLUSTERING_DEPTH","SYSTEM$CLUSTERING_INFORMATION","SYSTEM$CLUSTERING_RATIO ","SYSTEM$CURRENT_USER_TASK_NAME","SYSTEM$DATABASE_REFRESH_HISTORY ","SYSTEM$DATABASE_REFRESH_PROGRESS","SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ","SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$DISABLE_DATABASE_REPLICATION","SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$ESTIMATE_QUERY_ACCELERATION","SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS","SYSTEM$EXPLAIN_JSON_TO_TEXT","SYSTEM$EXPLAIN_PLAN_JSON","SYSTEM$EXTERNAL_TABLE_PIPE_STATUS","SYSTEM$GENERATE_SAML_CSR","SYSTEM$GENERATE_SCIM_ACCESS_TOKEN","SYSTEM$GET_AWS_SNS_IAM_POLICY","SYSTEM$GET_PREDECESSOR_RETURN_VALUE","SYSTEM$GET_PRIVATELINK","SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS","SYSTEM$GET_PRIVATELINK_CONFIG","SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO","SYSTEM$GET_TAG","SYSTEM$GET_TAG_ALLOWED_VALUES","SYSTEM$GET_TAG_ON_CURRENT_COLUMN","SYSTEM$GET_TAG_ON_CURRENT_TABLE","SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER","SYSTEM$LAST_CHANGE_COMMIT_TIME","SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME","SYSTEM$MIGRATE_SAML_IDP_REGISTRATION","SYSTEM$PIPE_FORCE_RESUME","SYSTEM$PIPE_STATUS","SYSTEM$REVOKE_PRIVATELINK","SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS","SYSTEM$SET_RETURN_VALUE","SYSTEM$SHOW_OAUTH_CLIENT_SECRETS","SYSTEM$STREAM_GET_TABLE_TIMESTAMP","SYSTEM$STREAM_HAS_DATA","SYSTEM$TASK_DEPENDENTS_ENABLE","SYSTEM$TYPEOF","SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS","SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN","SYSTEM$WAIT","SYSTEM$WHITELIST","SYSTEM$WHITELIST_PRIVATELINK","TAG_REFERENCES","TAG_REFERENCES_ALL_COLUMNS","TAG_REFERENCES_WITH_LINEAGE","TAN","TANH","TASK_DEPENDENTS","TASK_HISTORY","TIME_FROM_PARTS","TIME_SLICE","TIMEADD","TIMEDIFF","TIMESTAMP_FROM_PARTS","TIMESTAMPADD","TIMESTAMPDIFF","TO_ARRAY","TO_BINARY","TO_BOOLEAN","TO_CHAR","TO_VARCHAR","TO_DATE","DATE","TO_DECIMAL","TO_NUMBER","TO_NUMERIC","TO_DOUBLE","TO_GEOGRAPHY","TO_GEOMETRY","TO_JSON","TO_OBJECT","TO_TIME","TIME","TO_TIMESTAMP","TO_TIMESTAMP_LTZ","TO_TIMESTAMP_NTZ","TO_TIMESTAMP_TZ","TO_VARIANT","TO_XML","TRANSLATE","TRIM","TRUNCATE","TRUNC","TRUNC","TRY_BASE64_DECODE_BINARY","TRY_BASE64_DECODE_STRING","TRY_CAST","TRY_HEX_DECODE_BINARY","TRY_HEX_DECODE_STRING","TRY_PARSE_JSON","TRY_TO_BINARY","TRY_TO_BOOLEAN","TRY_TO_DATE","TRY_TO_DECIMAL","TRY_TO_NUMBER","TRY_TO_NUMERIC","TRY_TO_DOUBLE","TRY_TO_GEOGRAPHY","TRY_TO_GEOMETRY","TRY_TO_TIME","TRY_TO_TIMESTAMP","TRY_TO_TIMESTAMP_LTZ","TRY_TO_TIMESTAMP_NTZ","TRY_TO_TIMESTAMP_TZ","TYPEOF","UNICODE","UNIFORM","UPPER","UUID_STRING","VALIDATE","VALIDATE_PIPE_LOAD","VAR_POP","VAR_SAMP","VARIANCE","VARIANCE_SAMP","VARIANCE_POP","WAREHOUSE_LOAD_HISTORY","WAREHOUSE_METERING_HISTORY","WIDTH_BUCKET","XMLGET","YEAR","YEAROFWEEK","YEAROFWEEKISO","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFWEEKISO","DAYOFYEAR","WEEK","WEEK","WEEKOFYEAR","WEEKISO","MONTH","QUARTER","ZEROIFNULL","ZIPF"],HC=["ACCOUNT","ALL","ALTER","AND","ANY","AS","BETWEEN","BY","CASE","CAST","CHECK","COLUMN","CONNECT","CONNECTION","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATABASE","DELETE","DISTINCT","DROP","ELSE","EXISTS","FALSE","FOLLOWING","FOR","FROM","FULL","GRANT","GROUP","GSCLUSTER","HAVING","ILIKE","IN","INCREMENT","INNER","INSERT","INTERSECT","INTO","IS","ISSUE","JOIN","LATERAL","LEFT","LIKE","LOCALTIME","LOCALTIMESTAMP","MINUS","NATURAL","NOT","NULL","OF","ON","OR","ORDER","ORGANIZATION","QUALIFY","REGEXP","REVOKE","RIGHT","RLIKE","ROW","ROWS","SAMPLE","SCHEMA","SELECT","SET","SOME","START","TABLE","TABLESAMPLE","THEN","TO","TRIGGER","TRUE","TRY_CAST","UNION","UNIQUE","UPDATE","USING","VALUES","VIEW","WHEN","WHENEVER","WHERE","WITH","COMMENT"],YC=["NUMBER","DECIMAL","NUMERIC","INT","INTEGER","BIGINT","SMALLINT","TINYINT","BYTEINT","FLOAT","FLOAT4","FLOAT8","DOUBLE","DOUBLE PRECISION","REAL","VARCHAR","CHAR","CHARACTER","STRING","TEXT","BINARY","VARBINARY","BOOLEAN","DATE","DATETIME","TIME","TIMESTAMP","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TIMESTAMP_TZ","VARIANT","OBJECT","ARRAY","GEOGRAPHY","GEOMETRY"],vC=c(["SELECT [ALL | DISTINCT]"]),wC=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","QUALIFY","LIMIT","OFFSET","FETCH [FIRST | NEXT]","INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]","{THEN | ELSE} INTO","VALUES","SET","CLUSTER BY","[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}","COPY GRANTS","USING TEMPLATE","MERGE INTO","WHEN MATCHED [AND]","THEN {UPDATE SET | DELETE}","WHEN NOT MATCHED THEN INSERT"]),ka=c(["CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]"]),Ji=c(["CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","RENAME TO","SWAP WITH","[SUSPEND | RESUME] RECLUSTER","DROP CLUSTERING KEY","ADD [COLUMN]","RENAME COLUMN","{ALTER | MODIFY} [COLUMN]","DROP [COLUMN]","{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]","RENAME CONSTRAINT","{ADD | DROP} SEARCH OPTIMIZATION","{SET | UNSET} TAG","{ADD | DROP} ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","SET DATA TYPE","UNSET COMMENT","{SET | UNSET} MASKING POLICY","TRUNCATE [TABLE] [IF EXISTS]","ALTER ACCOUNT","ALTER API INTEGRATION","ALTER CONNECTION","ALTER DATABASE","ALTER EXTERNAL TABLE","ALTER FAILOVER GROUP","ALTER FILE FORMAT","ALTER FUNCTION","ALTER INTEGRATION","ALTER MASKING POLICY","ALTER MATERIALIZED VIEW","ALTER NETWORK POLICY","ALTER NOTIFICATION INTEGRATION","ALTER PIPE","ALTER PROCEDURE","ALTER REPLICATION GROUP","ALTER RESOURCE MONITOR","ALTER ROLE","ALTER ROW ACCESS POLICY","ALTER SCHEMA","ALTER SECURITY INTEGRATION","ALTER SEQUENCE","ALTER SESSION","ALTER SESSION POLICY","ALTER SHARE","ALTER STAGE","ALTER STORAGE INTEGRATION","ALTER STREAM","ALTER TAG","ALTER TASK","ALTER USER","ALTER VIEW","ALTER WAREHOUSE","BEGIN","CALL","COMMIT","COPY INTO","CREATE ACCOUNT","CREATE API INTEGRATION","CREATE CONNECTION","CREATE DATABASE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL TABLE","CREATE FAILOVER GROUP","CREATE FILE FORMAT","CREATE FUNCTION","CREATE INTEGRATION","CREATE MANAGED ACCOUNT","CREATE MASKING POLICY","CREATE MATERIALIZED VIEW","CREATE NETWORK POLICY","CREATE NOTIFICATION INTEGRATION","CREATE PIPE","CREATE PROCEDURE","CREATE REPLICATION GROUP","CREATE RESOURCE MONITOR","CREATE ROLE","CREATE ROW ACCESS POLICY","CREATE SCHEMA","CREATE SECURITY INTEGRATION","CREATE SEQUENCE","CREATE SESSION POLICY","CREATE SHARE","CREATE STAGE","CREATE STORAGE INTEGRATION","CREATE STREAM","CREATE TAG","CREATE TASK","CREATE USER","CREATE WAREHOUSE","DELETE","DESCRIBE DATABASE","DESCRIBE EXTERNAL TABLE","DESCRIBE FILE FORMAT","DESCRIBE FUNCTION","DESCRIBE INTEGRATION","DESCRIBE MASKING POLICY","DESCRIBE MATERIALIZED VIEW","DESCRIBE NETWORK POLICY","DESCRIBE PIPE","DESCRIBE PROCEDURE","DESCRIBE RESULT","DESCRIBE ROW ACCESS POLICY","DESCRIBE SCHEMA","DESCRIBE SEQUENCE","DESCRIBE SESSION POLICY","DESCRIBE SHARE","DESCRIBE STAGE","DESCRIBE STREAM","DESCRIBE TABLE","DESCRIBE TASK","DESCRIBE TRANSACTION","DESCRIBE USER","DESCRIBE VIEW","DESCRIBE WAREHOUSE","DROP CONNECTION","DROP DATABASE","DROP EXTERNAL TABLE","DROP FAILOVER GROUP","DROP FILE FORMAT","DROP FUNCTION","DROP INTEGRATION","DROP MANAGED ACCOUNT","DROP MASKING POLICY","DROP MATERIALIZED VIEW","DROP NETWORK POLICY","DROP PIPE","DROP PROCEDURE","DROP REPLICATION GROUP","DROP RESOURCE MONITOR","DROP ROLE","DROP ROW ACCESS POLICY","DROP SCHEMA","DROP SEQUENCE","DROP SESSION POLICY","DROP SHARE","DROP STAGE","DROP STREAM","DROP TAG","DROP TASK","DROP USER","DROP VIEW","DROP WAREHOUSE","EXECUTE IMMEDIATE","EXECUTE TASK","EXPLAIN","GET","GRANT OWNERSHIP","GRANT ROLE","INSERT","LIST","MERGE","PUT","REMOVE","REVOKE ROLE","ROLLBACK","SHOW COLUMNS","SHOW CONNECTIONS","SHOW DATABASES","SHOW DATABASES IN FAILOVER GROUP","SHOW DATABASES IN REPLICATION GROUP","SHOW DELEGATED AUTHORIZATIONS","SHOW EXTERNAL FUNCTIONS","SHOW EXTERNAL TABLES","SHOW FAILOVER GROUPS","SHOW FILE FORMATS","SHOW FUNCTIONS","SHOW GLOBAL ACCOUNTS","SHOW GRANTS","SHOW INTEGRATIONS","SHOW LOCKS","SHOW MANAGED ACCOUNTS","SHOW MASKING POLICIES","SHOW MATERIALIZED VIEWS","SHOW NETWORK POLICIES","SHOW OBJECTS","SHOW ORGANIZATION ACCOUNTS","SHOW PARAMETERS","SHOW PIPES","SHOW PRIMARY KEYS","SHOW PROCEDURES","SHOW REGIONS","SHOW REPLICATION ACCOUNTS","SHOW REPLICATION DATABASES","SHOW REPLICATION GROUPS","SHOW RESOURCE MONITORS","SHOW ROLES","SHOW ROW ACCESS POLICIES","SHOW SCHEMAS","SHOW SEQUENCES","SHOW SESSION POLICIES","SHOW SHARES","SHOW SHARES IN FAILOVER GROUP","SHOW SHARES IN REPLICATION GROUP","SHOW STAGES","SHOW STREAMS","SHOW TABLES","SHOW TAGS","SHOW TASKS","SHOW TRANSACTIONS","SHOW USER FUNCTIONS","SHOW USERS","SHOW VARIABLES","SHOW VIEWS","SHOW WAREHOUSES","TRUNCATE MATERIALIZED VIEW","UNDROP DATABASE","UNDROP SCHEMA","UNDROP TABLE","UNDROP TAG","UNSET","USE DATABASE","USE ROLE","USE SCHEMA","USE SECONDARY ROLES","USE WAREHOUSE"]),VC=c(["UNION [ALL]","MINUS","EXCEPT","INTERSECT"]),WC=c(["[INNER] JOIN","[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | NATURAL} JOIN"]),xC=c(["{ROWS | RANGE} BETWEEN","ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]"]),XC={name:"snowflake",tokenizerOptions:{reservedSelect:vC,reservedClauses:[...wC,...ka,...Ji],reservedSetOperations:VC,reservedJoins:WC,reservedPhrases:xC,reservedKeywords:HC,reservedDataTypes:YC,reservedFunctionNames:gC,stringTypes:["$$","''-qq-bs"],identTypes:['""-qq'],variableTypes:[{regex:"[$][1-9]\\d*"},{regex:"[$][_a-zA-Z][_a-zA-Z0-9$]*"}],extraParens:["[]"],identChars:{rest:"$"},lineCommentTypes:["--","//"],operators:["%","::","||","=>",":=","->"],propertyAccessOperators:[":"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...ka,...Ji],tabularOnelineClauses:Ji}},TE=t=>t[t.length-1],CI=t=>t.sort((e,s)=>s.length-e.length||e.localeCompare(s)),en=t=>t.replace(/\s+/gu," "),ki=t=>/\n/.test(t),Ut=t=>t.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&"),qa=/\s+/uy,Js=t=>new RegExp(`(?:${t})`,"uy"),KC=t=>t.split("").map(e=>/ /gu.test(e)?"\\s+":`[${e.toUpperCase()}${e.toLowerCase()}]`).join(""),$C=t=>t+"(?:-"+t+")*",JC=({prefixes:t,requirePrefix:e})=>`(?:${t.map(KC).join("|")}${e?"":"|"})`,kC=t=>new RegExp(`(?:${t.map(Ut).join("|")}).*?(?=\r
|\r|
|$)`,"uy"),Qa=(t,e=[])=>{const s=t==="open"?0:1,r=["()",...e].map(E=>E[s]);return Js(r.map(Ut).join("|"))},ja=t=>Js(`${CI(t).map(Ut).join("|")}`),qC=({rest:t,dashes:e})=>t||e?`(?![${t||""}${e?"-":""}])`:"",ls=(t,e={})=>{if(t.length===0)return/^\b$/u;const s=qC(e),r=CI(t).map(Ut).join("|").replace(/ /gu,"\\s+");return new RegExp(`(?:${r})${s}\\b`,"iuy")},qi=(t,e)=>{if(!t.length)return;const s=t.map(Ut).join("|");return Js(`(?:${s})(?:${e})`)},QC=()=>{const t={"<":">","[":"]","(":")","{":"}"},e="{left}(?:(?!{right}').)*?{right}",s=Object.entries(t).map(([i,T])=>e.replace(/{left}/g,Ut(i)).replace(/{right}/g,Ut(T))),r=Ut(Object.keys(t).join(""));return`[Qq]'(?:${String.raw`(?<tag>[^\s${r}])(?:(?!\k<tag>').)*?\k<tag>`}|${s.join("|")})'`},Za={"``":"(?:`[^`]*`)+","[]":String.raw`(?:\[[^\]]*\])(?:\][^\]]*\])*`,'""-qq':String.raw`(?:"[^"]*")+`,'""-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")`,'""-qq-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")+`,'""-raw':String.raw`(?:"[^"]*")`,"''-qq":String.raw`(?:'[^']*')+`,"''-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')`,"''-qq-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')+`,"''-raw":String.raw`(?:'[^']*')`,$$:String.raw`(?<tag>\$\w*\$)[\s\S]*?\k<tag>`,"'''..'''":String.raw`'''[^\\]*?(?:\\.[^\\]*?)*?'''`,'""".."""':String.raw`"""[^\\]*?(?:\\.[^\\]*?)*?"""`,"{}":String.raw`(?:\{[^\}]*\})`,"q''":QC()},fI=t=>typeof t=="string"?Za[t]:"regex"in t?t.regex:JC(t)+Za[t.quote],jC=t=>Js(t.map(e=>"regex"in e?e.regex:fI(e)).join("|")),hI=t=>t.map(fI).join("|"),za=t=>Js(hI(t)),ZC=(t={})=>Js(DI(t)),DI=({first:t,rest:e,dashes:s,allowFirstCharNumber:r}={})=>{const E="\\p{Alphabetic}\\p{Mark}_",n="\\p{Decimal_Number}",i=Ut(t??""),T=Ut(e??""),o=r?`[${E}${n}${i}][${E}${n}${T}]*`:`[${E}${i}][${E}${n}${T}]*`;return s?$C(o):o};function pI(t,e){const s=t.slice(0,e).split(/\n/);return{line:s.length,col:s[s.length-1].length+1}}var zC=class{constructor(t,e){this.rules=t,this.dialectName=e,this.input="",this.index=0}tokenize(t){this.input=t,this.index=0;const e=[];let s;for(;this.index<this.input.length;){const r=this.getWhitespace();if(this.index<this.input.length){if(s=this.getNextToken(),!s)throw this.createParseError();e.push(Ve(ge({},s),{precedingWhitespace:r}))}}return e}createParseError(){const t=this.input.slice(this.index,this.index+10),{line:e,col:s}=pI(this.input,this.index);return new Error(`Parse error: Unexpected "${t}" at line ${e} column ${s}.
${this.dialectInfo()}`)}dialectInfo(){return this.dialectName==="sql"?`This likely happens because you're using the default "sql" dialect.
If possible, please select a more specific dialect (like sqlite, postgresql, etc).`:`SQL dialect used: "${this.dialectName}".`}getWhitespace(){qa.lastIndex=this.index;const t=qa.exec(this.input);if(t)return this.index+=t[0].length,t[0]}getNextToken(){for(const t of this.rules){const e=this.match(t);if(e)return e}}match(t){t.regex.lastIndex=this.index;const e=t.regex.exec(this.input);if(e){const s=e[0],r={type:t.type,raw:s,text:t.text?t.text(s):s,start:this.index};return t.key&&(r.key=t.key(s)),this.index+=s.length,r}}},eR=/\/\*/uy,ef=/[\s\S]/uy,tf=/\*\//uy,sf=class{constructor(){this.lastIndex=0}exec(t){let e="",s,r=0;if(s=this.matchSection(eR,t))e+=s,r++;else return null;for(;r>0;)if(s=this.matchSection(eR,t))e+=s,r++;else if(s=this.matchSection(tf,t))e+=s,r--;else if(s=this.matchSection(ef,t))e+=s;else return null;return[e]}matchSection(t,e){t.lastIndex=this.lastIndex;const s=t.exec(e);return s&&(this.lastIndex+=s[0].length),s?s[0]:null}},rf=class{constructor(t,e){this.cfg=t,this.dialectName=e,this.rulesBeforeParams=this.buildRulesBeforeParams(t),this.rulesAfterParams=this.buildRulesAfterParams(t)}tokenize(t,e){const s=[...this.rulesBeforeParams,...this.buildParamRules(this.cfg,e),...this.rulesAfterParams],r=new zC(s,this.dialectName).tokenize(t);return this.cfg.postProcess?this.cfg.postProcess(r):r}buildRulesBeforeParams(t){var e,s;return this.validRules([{type:"BLOCK_COMMENT",regex:/(\/\* *sql-formatter-disable *\*\/[\s\S]*?(?:\/\* *sql-formatter-enable *\*\/|$))/uy},{type:"BLOCK_COMMENT",regex:t.nestedBlockComments?new sf:/(\/\*[^]*?\*\/)/uy},{type:"LINE_COMMENT",regex:kC((e=t.lineCommentTypes)!=null?e:["--"])},{type:"QUOTED_IDENTIFIER",regex:za(t.identTypes)},{type:"NUMBER",regex:/(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\s*)?(?:[0-9]*\.[0-9]+|[0-9]+(?:\.[0-9]*)?)(?:[eE][-+]?[0-9]+(?:\.[0-9]+)?)?)(?![\w\p{Alphabetic}])/uy},{type:"RESERVED_PHRASE",regex:ls((s=t.reservedPhrases)!=null?s:[],t.identChars),text:Fe},{type:"CASE",regex:/CASE\b/iuy,text:Fe},{type:"END",regex:/END\b/iuy,text:Fe},{type:"BETWEEN",regex:/BETWEEN\b/iuy,text:Fe},{type:"LIMIT",regex:t.reservedClauses.includes("LIMIT")?/LIMIT\b/iuy:void 0,text:Fe},{type:"RESERVED_CLAUSE",regex:ls(t.reservedClauses,t.identChars),text:Fe},{type:"RESERVED_SELECT",regex:ls(t.reservedSelect,t.identChars),text:Fe},{type:"RESERVED_SET_OPERATION",regex:ls(t.reservedSetOperations,t.identChars),text:Fe},{type:"WHEN",regex:/WHEN\b/iuy,text:Fe},{type:"ELSE",regex:/ELSE\b/iuy,text:Fe},{type:"THEN",regex:/THEN\b/iuy,text:Fe},{type:"RESERVED_JOIN",regex:ls(t.reservedJoins,t.identChars),text:Fe},{type:"AND",regex:/AND\b/iuy,text:Fe},{type:"OR",regex:/OR\b/iuy,text:Fe},{type:"XOR",regex:t.supportsXor?/XOR\b/iuy:void 0,text:Fe},...t.operatorKeyword?[{type:"OPERATOR",regex:/OPERATOR *\([^)]+\)/iuy}]:[],{type:"RESERVED_FUNCTION_NAME",regex:ls(t.reservedFunctionNames,t.identChars),text:Fe},{type:"RESERVED_DATA_TYPE",regex:ls(t.reservedDataTypes,t.identChars),text:Fe},{type:"RESERVED_KEYWORD",regex:ls(t.reservedKeywords,t.identChars),text:Fe}])}buildRulesAfterParams(t){var e,s;return this.validRules([{type:"VARIABLE",regex:t.variableTypes?jC(t.variableTypes):void 0},{type:"STRING",regex:za(t.stringTypes)},{type:"IDENTIFIER",regex:ZC(t.identChars)},{type:"DELIMITER",regex:/[;]/uy},{type:"COMMA",regex:/[,]/y},{type:"OPEN_PAREN",regex:Qa("open",t.extraParens)},{type:"CLOSE_PAREN",regex:Qa("close",t.extraParens)},{type:"OPERATOR",regex:ja(["+","-","/",">","<","=","<>","<=",">=","!=",...(e=t.operators)!=null?e:[]])},{type:"ASTERISK",regex:/[*]/uy},{type:"PROPERTY_ACCESS_OPERATOR",regex:ja([".",...(s=t.propertyAccessOperators)!=null?s:[]])}])}buildParamRules(t,e){var s,r,E,n,i;const T={named:(e==null?void 0:e.named)||((s=t.paramTypes)==null?void 0:s.named)||[],quoted:(e==null?void 0:e.quoted)||((r=t.paramTypes)==null?void 0:r.quoted)||[],numbered:(e==null?void 0:e.numbered)||((E=t.paramTypes)==null?void 0:E.numbered)||[],positional:typeof(e==null?void 0:e.positional)=="boolean"?e.positional:(n=t.paramTypes)==null?void 0:n.positional,custom:(e==null?void 0:e.custom)||((i=t.paramTypes)==null?void 0:i.custom)||[]};return this.validRules([{type:"NAMED_PARAMETER",regex:qi(T.named,DI(t.paramChars||t.identChars)),key:o=>o.slice(1)},{type:"QUOTED_PARAMETER",regex:qi(T.quoted,hI(t.identTypes)),key:o=>(({tokenKey:a,quoteChar:R})=>a.replace(new RegExp(Ut("\\"+R),"gu"),R))({tokenKey:o.slice(2,-1),quoteChar:o.slice(-1)})},{type:"NUMBERED_PARAMETER",regex:qi(T.numbered,"[0-9]+"),key:o=>o.slice(1)},{type:"POSITIONAL_PARAMETER",regex:T.positional?/[?]/y:void 0},...T.custom.map(o=>{var a;return{type:"CUSTOM_PARAMETER",regex:Js(o.regex),key:(a=o.key)!=null?a:R=>R}})])}validRules(t){return t.filter(e=>!!e.regex)}},Fe=t=>en(t.toUpperCase()),tR=new Map,Ef=t=>{let e=tR.get(t);return e||(e=nf(t),tR.set(t,e)),e},nf=t=>({tokenizer:new rf(t.tokenizerOptions,t.name),formatOptions:Tf(t.formatOptions)}),Tf=t=>{var e;return{alwaysDenseOperators:t.alwaysDenseOperators||[],onelineClauses:Object.fromEntries(t.onelineClauses.map(s=>[s,!0])),tabularOnelineClauses:Object.fromEntries(((e=t.tabularOnelineClauses)!=null?e:t.onelineClauses).map(s=>[s,!0]))}};function of(t){return t.indentStyle==="tabularLeft"||t.indentStyle==="tabularRight"?" ".repeat(10):t.useTabs?"	":" ".repeat(t.tabWidth)}function zs(t){return t.indentStyle==="tabularLeft"||t.indentStyle==="tabularRight"}var af=class{constructor(t){this.params=t,this.index=0}get({key:t,text:e}){return this.params?t?this.params[t]:this.params[this.index++]:e}getPositionalParameterIndex(){return this.index}setPositionalParameterIndex(t){this.index=t}};function Rf(t){return t.map(Af).map(Sf).map(If).map(Of).map(lf)}var Af=(t,e,s)=>{if(dI(t.type)){const r=Nf(s,e);if(r&&r.type==="PROPERTY_ACCESS_OPERATOR")return Ve(ge({},t),{type:"IDENTIFIER",text:t.raw});const E=gr(s,e);if(E&&E.type==="PROPERTY_ACCESS_OPERATOR")return Ve(ge({},t),{type:"IDENTIFIER",text:t.raw})}return t},Sf=(t,e,s)=>{if(t.type==="RESERVED_FUNCTION_NAME"){const r=gr(s,e);if(!r||!PI(r))return Ve(ge({},t),{type:"IDENTIFIER",text:t.raw})}return t},If=(t,e,s)=>{if(t.type==="RESERVED_DATA_TYPE"){const r=gr(s,e);if(r&&PI(r))return Ve(ge({},t),{type:"RESERVED_PARAMETERIZED_DATA_TYPE"})}return t},Of=(t,e,s)=>{if(t.type==="IDENTIFIER"){const r=gr(s,e);if(r&&MI(r))return Ve(ge({},t),{type:"ARRAY_IDENTIFIER"})}return t},lf=(t,e,s)=>{if(t.type==="RESERVED_DATA_TYPE"){const r=gr(s,e);if(r&&MI(r))return Ve(ge({},t),{type:"ARRAY_KEYWORD"})}return t},Nf=(t,e)=>gr(t,e,-1),gr=(t,e,s=1)=>{let r=1;for(;t[e+r*s]&&cf(t[e+r*s]);)r++;return t[e+r*s]},PI=t=>t.type==="OPEN_PAREN"&&t.text==="(",MI=t=>t.type==="OPEN_PAREN"&&t.text==="[",cf=t=>t.type==="BLOCK_COMMENT"||t.type==="LINE_COMMENT",UI=class{constructor(t){this.tokenize=t,this.index=0,this.tokens=[],this.input=""}reset(t,e){this.input=t,this.index=0,this.tokens=this.tokenize(t)}next(){return this.tokens[this.index++]}save(){}formatError(t){const{line:e,col:s}=pI(this.input,t.start);return`Parse error at token: ${t.text} at line ${e} column ${s}`}has(t){return t in _I}};function Qi(t){return t[0]}var x=new UI(t=>[]),gs=([[t]])=>t,Ge=t=>({type:"keyword",tokenType:t.type,text:t.text,raw:t.raw}),sR=t=>({type:"data_type",text:t.text,raw:t.raw}),be=(t,{leading:e,trailing:s})=>(e!=null&&e.length&&(t=Ve(ge({},t),{leadingComments:e})),s!=null&&s.length&&(t=Ve(ge({},t),{trailingComments:s})),t),uf=(t,{leading:e,trailing:s})=>{if(e!=null&&e.length){const[r,...E]=t;t=[be(r,{leading:e}),...E]}if(s!=null&&s.length){const r=t.slice(0,-1),E=t[t.length-1];t=[...r,be(E,{trailing:s})]}return t},_f={Lexer:x,ParserRules:[{name:"main$ebnf$1",symbols:[]},{name:"main$ebnf$1",symbols:["main$ebnf$1","statement"],postprocess:t=>t[0].concat([t[1]])},{name:"main",symbols:["main$ebnf$1"],postprocess:([t])=>{const e=t[t.length-1];return e&&!e.hasSemicolon?e.children.length>0?t:t.slice(0,-1):t}},{name:"statement$subexpression$1",symbols:[x.has("DELIMITER")?{type:"DELIMITER"}:DELIMITER]},{name:"statement$subexpression$1",symbols:[x.has("EOF")?{type:"EOF"}:EOF]},{name:"statement",symbols:["expressions_or_clauses","statement$subexpression$1"],postprocess:([t,[e]])=>({type:"statement",children:t,hasSemicolon:e.type==="DELIMITER"})},{name:"expressions_or_clauses$ebnf$1",symbols:[]},{name:"expressions_or_clauses$ebnf$1",symbols:["expressions_or_clauses$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"expressions_or_clauses$ebnf$2",symbols:[]},{name:"expressions_or_clauses$ebnf$2",symbols:["expressions_or_clauses$ebnf$2","clause"],postprocess:t=>t[0].concat([t[1]])},{name:"expressions_or_clauses",symbols:["expressions_or_clauses$ebnf$1","expressions_or_clauses$ebnf$2"],postprocess:([t,e])=>[...t,...e]},{name:"clause$subexpression$1",symbols:["limit_clause"]},{name:"clause$subexpression$1",symbols:["select_clause"]},{name:"clause$subexpression$1",symbols:["other_clause"]},{name:"clause$subexpression$1",symbols:["set_operation"]},{name:"clause",symbols:["clause$subexpression$1"],postprocess:gs},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["free_form_sql"]},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"limit_clause$ebnf$1$subexpression$1",symbols:[x.has("COMMA")?{type:"COMMA"}:COMMA,"limit_clause$ebnf$1$subexpression$1$ebnf$1"]},{name:"limit_clause$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1"],postprocess:Qi},{name:"limit_clause$ebnf$1",symbols:[],postprocess:()=>null},{name:"limit_clause",symbols:[x.has("LIMIT")?{type:"LIMIT"}:LIMIT,"_","expression_chain_","limit_clause$ebnf$1"],postprocess:([t,e,s,r])=>{if(r){const[E,n]=r;return{type:"limit_clause",limitKw:be(Ge(t),{trailing:e}),offset:s,count:n}}else return{type:"limit_clause",limitKw:be(Ge(t),{trailing:e}),count:s}}},{name:"select_clause$subexpression$1$ebnf$1",symbols:[]},{name:"select_clause$subexpression$1$ebnf$1",symbols:["select_clause$subexpression$1$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"select_clause$subexpression$1",symbols:["all_columns_asterisk","select_clause$subexpression$1$ebnf$1"]},{name:"select_clause$subexpression$1$ebnf$2",symbols:[]},{name:"select_clause$subexpression$1$ebnf$2",symbols:["select_clause$subexpression$1$ebnf$2","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"select_clause$subexpression$1",symbols:["asteriskless_free_form_sql","select_clause$subexpression$1$ebnf$2"]},{name:"select_clause",symbols:[x.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT,"select_clause$subexpression$1"],postprocess:([t,[e,s]])=>({type:"clause",nameKw:Ge(t),children:[e,...s]})},{name:"select_clause",symbols:[x.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT],postprocess:([t])=>({type:"clause",nameKw:Ge(t),children:[]})},{name:"all_columns_asterisk",symbols:[x.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK],postprocess:()=>({type:"all_columns_asterisk"})},{name:"other_clause$ebnf$1",symbols:[]},{name:"other_clause$ebnf$1",symbols:["other_clause$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"other_clause",symbols:[x.has("RESERVED_CLAUSE")?{type:"RESERVED_CLAUSE"}:RESERVED_CLAUSE,"other_clause$ebnf$1"],postprocess:([t,e])=>({type:"clause",nameKw:Ge(t),children:e})},{name:"set_operation$ebnf$1",symbols:[]},{name:"set_operation$ebnf$1",symbols:["set_operation$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"set_operation",symbols:[x.has("RESERVED_SET_OPERATION")?{type:"RESERVED_SET_OPERATION"}:RESERVED_SET_OPERATION,"set_operation$ebnf$1"],postprocess:([t,e])=>({type:"set_operation",nameKw:Ge(t),children:e})},{name:"expression_chain_$ebnf$1",symbols:["expression_with_comments_"]},{name:"expression_chain_$ebnf$1",symbols:["expression_chain_$ebnf$1","expression_with_comments_"],postprocess:t=>t[0].concat([t[1]])},{name:"expression_chain_",symbols:["expression_chain_$ebnf$1"],postprocess:Qi},{name:"expression_chain$ebnf$1",symbols:[]},{name:"expression_chain$ebnf$1",symbols:["expression_chain$ebnf$1","_expression_with_comments"],postprocess:t=>t[0].concat([t[1]])},{name:"expression_chain",symbols:["expression","expression_chain$ebnf$1"],postprocess:([t,e])=>[t,...e]},{name:"andless_expression_chain$ebnf$1",symbols:[]},{name:"andless_expression_chain$ebnf$1",symbols:["andless_expression_chain$ebnf$1","_andless_expression_with_comments"],postprocess:t=>t[0].concat([t[1]])},{name:"andless_expression_chain",symbols:["andless_expression","andless_expression_chain$ebnf$1"],postprocess:([t,e])=>[t,...e]},{name:"expression_with_comments_",symbols:["expression","_"],postprocess:([t,e])=>be(t,{trailing:e})},{name:"_expression_with_comments",symbols:["_","expression"],postprocess:([t,e])=>be(e,{leading:t})},{name:"_andless_expression_with_comments",symbols:["_","andless_expression"],postprocess:([t,e])=>be(e,{leading:t})},{name:"free_form_sql$subexpression$1",symbols:["asteriskless_free_form_sql"]},{name:"free_form_sql$subexpression$1",symbols:["asterisk"]},{name:"free_form_sql",symbols:["free_form_sql$subexpression$1"],postprocess:gs},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["logic_operator"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comma"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comment"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["other_keyword"]},{name:"asteriskless_free_form_sql",symbols:["asteriskless_free_form_sql$subexpression$1"],postprocess:gs},{name:"expression$subexpression$1",symbols:["andless_expression"]},{name:"expression$subexpression$1",symbols:["logic_operator"]},{name:"expression",symbols:["expression$subexpression$1"],postprocess:gs},{name:"andless_expression$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"andless_expression$subexpression$1",symbols:["asterisk"]},{name:"andless_expression",symbols:["andless_expression$subexpression$1"],postprocess:gs},{name:"asteriskless_andless_expression$subexpression$1",symbols:["atomic_expression"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["between_predicate"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["case_expression"]},{name:"asteriskless_andless_expression",symbols:["asteriskless_andless_expression$subexpression$1"],postprocess:gs},{name:"atomic_expression$subexpression$1",symbols:["array_subscript"]},{name:"atomic_expression$subexpression$1",symbols:["function_call"]},{name:"atomic_expression$subexpression$1",symbols:["property_access"]},{name:"atomic_expression$subexpression$1",symbols:["parenthesis"]},{name:"atomic_expression$subexpression$1",symbols:["curly_braces"]},{name:"atomic_expression$subexpression$1",symbols:["square_brackets"]},{name:"atomic_expression$subexpression$1",symbols:["operator"]},{name:"atomic_expression$subexpression$1",symbols:["identifier"]},{name:"atomic_expression$subexpression$1",symbols:["parameter"]},{name:"atomic_expression$subexpression$1",symbols:["literal"]},{name:"atomic_expression$subexpression$1",symbols:["data_type"]},{name:"atomic_expression$subexpression$1",symbols:["keyword"]},{name:"atomic_expression",symbols:["atomic_expression$subexpression$1"],postprocess:gs},{name:"array_subscript",symbols:[x.has("ARRAY_IDENTIFIER")?{type:"ARRAY_IDENTIFIER"}:ARRAY_IDENTIFIER,"_","square_brackets"],postprocess:([t,e,s])=>({type:"array_subscript",array:be({type:"identifier",quoted:!1,text:t.text},{trailing:e}),parenthesis:s})},{name:"array_subscript",symbols:[x.has("ARRAY_KEYWORD")?{type:"ARRAY_KEYWORD"}:ARRAY_KEYWORD,"_","square_brackets"],postprocess:([t,e,s])=>({type:"array_subscript",array:be(Ge(t),{trailing:e}),parenthesis:s})},{name:"function_call",symbols:[x.has("RESERVED_FUNCTION_NAME")?{type:"RESERVED_FUNCTION_NAME"}:RESERVED_FUNCTION_NAME,"_","parenthesis"],postprocess:([t,e,s])=>({type:"function_call",nameKw:be(Ge(t),{trailing:e}),parenthesis:s})},{name:"parenthesis",symbols:[{literal:"("},"expressions_or_clauses",{literal:")"}],postprocess:([t,e,s])=>({type:"parenthesis",children:e,openParen:"(",closeParen:")"})},{name:"curly_braces$ebnf$1",symbols:[]},{name:"curly_braces$ebnf$1",symbols:["curly_braces$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"curly_braces",symbols:[{literal:"{"},"curly_braces$ebnf$1",{literal:"}"}],postprocess:([t,e,s])=>({type:"parenthesis",children:e,openParen:"{",closeParen:"}"})},{name:"square_brackets$ebnf$1",symbols:[]},{name:"square_brackets$ebnf$1",symbols:["square_brackets$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"square_brackets",symbols:[{literal:"["},"square_brackets$ebnf$1",{literal:"]"}],postprocess:([t,e,s])=>({type:"parenthesis",children:e,openParen:"[",closeParen:"]"})},{name:"property_access$subexpression$1",symbols:["identifier"]},{name:"property_access$subexpression$1",symbols:["array_subscript"]},{name:"property_access$subexpression$1",symbols:["all_columns_asterisk"]},{name:"property_access$subexpression$1",symbols:["parameter"]},{name:"property_access",symbols:["atomic_expression","_",x.has("PROPERTY_ACCESS_OPERATOR")?{type:"PROPERTY_ACCESS_OPERATOR"}:PROPERTY_ACCESS_OPERATOR,"_","property_access$subexpression$1"],postprocess:([t,e,s,r,[E]])=>({type:"property_access",object:be(t,{trailing:e}),operator:s.text,property:be(E,{leading:r})})},{name:"between_predicate",symbols:[x.has("BETWEEN")?{type:"BETWEEN"}:BETWEEN,"_","andless_expression_chain","_",x.has("AND")?{type:"AND"}:AND,"_","andless_expression"],postprocess:([t,e,s,r,E,n,i])=>({type:"between_predicate",betweenKw:Ge(t),expr1:uf(s,{leading:e,trailing:r}),andKw:Ge(E),expr2:[be(i,{leading:n})]})},{name:"case_expression$ebnf$1",symbols:["expression_chain_"],postprocess:Qi},{name:"case_expression$ebnf$1",symbols:[],postprocess:()=>null},{name:"case_expression$ebnf$2",symbols:[]},{name:"case_expression$ebnf$2",symbols:["case_expression$ebnf$2","case_clause"],postprocess:t=>t[0].concat([t[1]])},{name:"case_expression",symbols:[x.has("CASE")?{type:"CASE"}:CASE,"_","case_expression$ebnf$1","case_expression$ebnf$2",x.has("END")?{type:"END"}:END],postprocess:([t,e,s,r,E])=>({type:"case_expression",caseKw:be(Ge(t),{trailing:e}),endKw:Ge(E),expr:s||[],clauses:r})},{name:"case_clause",symbols:[x.has("WHEN")?{type:"WHEN"}:WHEN,"_","expression_chain_",x.has("THEN")?{type:"THEN"}:THEN,"_","expression_chain_"],postprocess:([t,e,s,r,E,n])=>({type:"case_when",whenKw:be(Ge(t),{trailing:e}),thenKw:be(Ge(r),{trailing:E}),condition:s,result:n})},{name:"case_clause",symbols:[x.has("ELSE")?{type:"ELSE"}:ELSE,"_","expression_chain_"],postprocess:([t,e,s])=>({type:"case_else",elseKw:be(Ge(t),{trailing:e}),result:s})},{name:"comma$subexpression$1",symbols:[x.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"comma",symbols:["comma$subexpression$1"],postprocess:([[t]])=>({type:"comma"})},{name:"asterisk$subexpression$1",symbols:[x.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK]},{name:"asterisk",symbols:["asterisk$subexpression$1"],postprocess:([[t]])=>({type:"operator",text:t.text})},{name:"operator$subexpression$1",symbols:[x.has("OPERATOR")?{type:"OPERATOR"}:OPERATOR]},{name:"operator",symbols:["operator$subexpression$1"],postprocess:([[t]])=>({type:"operator",text:t.text})},{name:"identifier$subexpression$1",symbols:[x.has("IDENTIFIER")?{type:"IDENTIFIER"}:IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[x.has("QUOTED_IDENTIFIER")?{type:"QUOTED_IDENTIFIER"}:QUOTED_IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[x.has("VARIABLE")?{type:"VARIABLE"}:VARIABLE]},{name:"identifier",symbols:["identifier$subexpression$1"],postprocess:([[t]])=>({type:"identifier",quoted:t.type!=="IDENTIFIER",text:t.text})},{name:"parameter$subexpression$1",symbols:[x.has("NAMED_PARAMETER")?{type:"NAMED_PARAMETER"}:NAMED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[x.has("QUOTED_PARAMETER")?{type:"QUOTED_PARAMETER"}:QUOTED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[x.has("NUMBERED_PARAMETER")?{type:"NUMBERED_PARAMETER"}:NUMBERED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[x.has("POSITIONAL_PARAMETER")?{type:"POSITIONAL_PARAMETER"}:POSITIONAL_PARAMETER]},{name:"parameter$subexpression$1",symbols:[x.has("CUSTOM_PARAMETER")?{type:"CUSTOM_PARAMETER"}:CUSTOM_PARAMETER]},{name:"parameter",symbols:["parameter$subexpression$1"],postprocess:([[t]])=>({type:"parameter",key:t.key,text:t.text})},{name:"literal$subexpression$1",symbols:[x.has("NUMBER")?{type:"NUMBER"}:NUMBER]},{name:"literal$subexpression$1",symbols:[x.has("STRING")?{type:"STRING"}:STRING]},{name:"literal",symbols:["literal$subexpression$1"],postprocess:([[t]])=>({type:"literal",text:t.text})},{name:"keyword$subexpression$1",symbols:[x.has("RESERVED_KEYWORD")?{type:"RESERVED_KEYWORD"}:RESERVED_KEYWORD]},{name:"keyword$subexpression$1",symbols:[x.has("RESERVED_PHRASE")?{type:"RESERVED_PHRASE"}:RESERVED_PHRASE]},{name:"keyword$subexpression$1",symbols:[x.has("RESERVED_JOIN")?{type:"RESERVED_JOIN"}:RESERVED_JOIN]},{name:"keyword",symbols:["keyword$subexpression$1"],postprocess:([[t]])=>Ge(t)},{name:"data_type$subexpression$1",symbols:[x.has("RESERVED_DATA_TYPE")?{type:"RESERVED_DATA_TYPE"}:RESERVED_DATA_TYPE]},{name:"data_type",symbols:["data_type$subexpression$1"],postprocess:([[t]])=>sR(t)},{name:"data_type",symbols:[x.has("RESERVED_PARAMETERIZED_DATA_TYPE")?{type:"RESERVED_PARAMETERIZED_DATA_TYPE"}:RESERVED_PARAMETERIZED_DATA_TYPE,"_","parenthesis"],postprocess:([t,e,s])=>({type:"parameterized_data_type",dataType:be(sR(t),{trailing:e}),parenthesis:s})},{name:"logic_operator$subexpression$1",symbols:[x.has("AND")?{type:"AND"}:AND]},{name:"logic_operator$subexpression$1",symbols:[x.has("OR")?{type:"OR"}:OR]},{name:"logic_operator$subexpression$1",symbols:[x.has("XOR")?{type:"XOR"}:XOR]},{name:"logic_operator",symbols:["logic_operator$subexpression$1"],postprocess:([[t]])=>Ge(t)},{name:"other_keyword$subexpression$1",symbols:[x.has("WHEN")?{type:"WHEN"}:WHEN]},{name:"other_keyword$subexpression$1",symbols:[x.has("THEN")?{type:"THEN"}:THEN]},{name:"other_keyword$subexpression$1",symbols:[x.has("ELSE")?{type:"ELSE"}:ELSE]},{name:"other_keyword$subexpression$1",symbols:[x.has("END")?{type:"END"}:END]},{name:"other_keyword",symbols:["other_keyword$subexpression$1"],postprocess:([[t]])=>Ge(t)},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","comment"],postprocess:t=>t[0].concat([t[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:([t])=>t},{name:"comment",symbols:[x.has("LINE_COMMENT")?{type:"LINE_COMMENT"}:LINE_COMMENT],postprocess:([t])=>({type:"line_comment",text:t.text,precedingWhitespace:t.precedingWhitespace})},{name:"comment",symbols:[x.has("BLOCK_COMMENT")?{type:"BLOCK_COMMENT"}:BLOCK_COMMENT],postprocess:([t])=>({type:"block_comment",text:t.text,precedingWhitespace:t.precedingWhitespace})},{name:"comment",symbols:[x.has("DISABLE_COMMENT")?{type:"DISABLE_COMMENT"}:DISABLE_COMMENT],postprocess:([t])=>({type:"disable_comment",text:t.text,precedingWhitespace:t.precedingWhitespace})}],ParserStart:"main"},Lf=_f,{Parser:df,Grammar:Cf}=D_;function ff(t){let e={};const s=new UI(E=>[...Rf(t.tokenize(E,e)),LI(E.length)]),r=new df(Cf.fromCompiled(Lf),{lexer:s});return{parse:(E,n)=>{e=n;const{results:i}=r.feed(E);if(i.length===1)return i[0];throw i.length===0?new Error("Parse error: Invalid SQL"):new Error(`Parse error: Ambiguous grammar
${JSON.stringify(i,void 0,2)}`)}}}var yI=class{constructor(t){this.indentation=t,this.items=[]}add(...t){for(const e of t)switch(e){case 0:this.items.push(0);break;case 1:this.trimHorizontalWhitespace();break;case 2:this.trimWhitespace();break;case 3:this.trimHorizontalWhitespace(),this.addNewline(3);break;case 4:this.trimHorizontalWhitespace(),this.addNewline(4);break;case 5:this.addIndentation();break;case 6:this.items.push(6);break;default:this.items.push(e)}}trimHorizontalWhitespace(){for(;hf(TE(this.items));)this.items.pop()}trimWhitespace(){for(;Df(TE(this.items));)this.items.pop()}addNewline(t){if(this.items.length>0)switch(TE(this.items)){case 3:this.items.pop(),this.items.push(t);break;case 4:break;default:this.items.push(t);break}}addIndentation(){for(let t=0;t<this.indentation.getLevel();t++)this.items.push(6)}toString(){return this.items.map(t=>this.itemToString(t)).join("")}getLayoutItems(){return this.items}itemToString(t){switch(t){case 0:return" ";case 3:case 4:return`
`;case 6:return this.indentation.getSingleIndent();default:return t}}},hf=t=>t===0||t===6,Df=t=>t===0||t===6||t===3;function rR(t,e){if(e==="standard")return t;let s=[];return t.length>=10&&t.includes(" ")&&([t,...s]=t.split(" ")),e==="tabularLeft"?t=t.padEnd(9," "):t=t.padStart(9," "),t+["",...s].join(" ")}function ER(t){return Y_(t)||t==="RESERVED_CLAUSE"||t==="RESERVED_SELECT"||t==="RESERVED_SET_OPERATION"||t==="RESERVED_JOIN"||t==="LIMIT"}var ji="top-level",pf="block-level",mI=class{constructor(t){this.indent=t,this.indentTypes=[]}getSingleIndent(){return this.indent}getLevel(){return this.indentTypes.length}increaseTopLevel(){this.indentTypes.push(ji)}increaseBlockLevel(){this.indentTypes.push(pf)}decreaseTopLevel(){this.indentTypes.length>0&&TE(this.indentTypes)===ji&&this.indentTypes.pop()}decreaseBlockLevel(){for(;this.indentTypes.length>0&&this.indentTypes.pop()===ji;);}},Pf=class extends yI{constructor(t){super(new mI("")),this.expressionWidth=t,this.length=0,this.trailingSpace=!1}add(...t){if(t.forEach(e=>this.addToLength(e)),this.length>this.expressionWidth)throw new hT;super.add(...t)}addToLength(t){if(typeof t=="string")this.length+=t.length,this.trailingSpace=!1;else{if(t===4||t===3)throw new hT;t===5||t===6||t===0?this.trailingSpace||(this.length++,this.trailingSpace=!0):(t===2||t===1)&&this.trailingSpace&&(this.trailingSpace=!1,this.length--)}}},hT=class extends Error{},Mf=class DT{constructor({cfg:e,dialectCfg:s,params:r,layout:E,inline:n=!1}){this.inline=!1,this.nodes=[],this.index=-1,this.cfg=e,this.dialectCfg=s,this.inline=n,this.params=r,this.layout=E}format(e){for(this.nodes=e,this.index=0;this.index<this.nodes.length;this.index++)this.formatNode(this.nodes[this.index]);return this.layout}formatNode(e){this.formatComments(e.leadingComments),this.formatNodeWithoutComments(e),this.formatComments(e.trailingComments)}formatNodeWithoutComments(e){switch(e.type){case"function_call":return this.formatFunctionCall(e);case"parameterized_data_type":return this.formatParameterizedDataType(e);case"array_subscript":return this.formatArraySubscript(e);case"property_access":return this.formatPropertyAccess(e);case"parenthesis":return this.formatParenthesis(e);case"between_predicate":return this.formatBetweenPredicate(e);case"case_expression":return this.formatCaseExpression(e);case"case_when":return this.formatCaseWhen(e);case"case_else":return this.formatCaseElse(e);case"clause":return this.formatClause(e);case"set_operation":return this.formatSetOperation(e);case"limit_clause":return this.formatLimitClause(e);case"all_columns_asterisk":return this.formatAllColumnsAsterisk(e);case"literal":return this.formatLiteral(e);case"identifier":return this.formatIdentifier(e);case"parameter":return this.formatParameter(e);case"operator":return this.formatOperator(e);case"comma":return this.formatComma(e);case"line_comment":return this.formatLineComment(e);case"block_comment":return this.formatBlockComment(e);case"disable_comment":return this.formatBlockComment(e);case"data_type":return this.formatDataType(e);case"keyword":return this.formatKeywordNode(e)}}formatFunctionCall(e){this.withComments(e.nameKw,()=>{this.layout.add(this.showFunctionKw(e.nameKw))}),this.formatNode(e.parenthesis)}formatParameterizedDataType(e){this.withComments(e.dataType,()=>{this.layout.add(this.showDataType(e.dataType))}),this.formatNode(e.parenthesis)}formatArraySubscript(e){let s;switch(e.array.type){case"data_type":s=this.showDataType(e.array);break;case"keyword":s=this.showKw(e.array);break;default:s=this.showIdentifier(e.array);break}this.withComments(e.array,()=>{this.layout.add(s)}),this.formatNode(e.parenthesis)}formatPropertyAccess(e){this.formatNode(e.object),this.layout.add(1,e.operator),this.formatNode(e.property)}formatParenthesis(e){const s=this.formatInlineExpression(e.children);s?(this.layout.add(e.openParen),this.layout.add(...s.getLayoutItems()),this.layout.add(1,e.closeParen,0)):(this.layout.add(e.openParen,3),zs(this.cfg)?(this.layout.add(5),this.layout=this.formatSubExpression(e.children)):(this.layout.indentation.increaseBlockLevel(),this.layout.add(5),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseBlockLevel()),this.layout.add(3,5,e.closeParen,0))}formatBetweenPredicate(e){this.layout.add(this.showKw(e.betweenKw),0),this.layout=this.formatSubExpression(e.expr1),this.layout.add(1,0,this.showNonTabularKw(e.andKw),0),this.layout=this.formatSubExpression(e.expr2),this.layout.add(0)}formatCaseExpression(e){this.formatNode(e.caseKw),this.layout.indentation.increaseBlockLevel(),this.layout=this.formatSubExpression(e.expr),this.layout=this.formatSubExpression(e.clauses),this.layout.indentation.decreaseBlockLevel(),this.layout.add(3,5),this.formatNode(e.endKw)}formatCaseWhen(e){this.layout.add(3,5),this.formatNode(e.whenKw),this.layout=this.formatSubExpression(e.condition),this.formatNode(e.thenKw),this.layout=this.formatSubExpression(e.result)}formatCaseElse(e){this.layout.add(3,5),this.formatNode(e.elseKw),this.layout=this.formatSubExpression(e.result)}formatClause(e){this.isOnelineClause(e)?this.formatClauseInOnelineStyle(e):zs(this.cfg)?this.formatClauseInTabularStyle(e):this.formatClauseInIndentedStyle(e)}isOnelineClause(e){return zs(this.cfg)?this.dialectCfg.tabularOnelineClauses[e.nameKw.text]:this.dialectCfg.onelineClauses[e.nameKw.text]}formatClauseInIndentedStyle(e){this.layout.add(3,5,this.showKw(e.nameKw),3),this.layout.indentation.increaseTopLevel(),this.layout.add(5),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseTopLevel()}formatClauseInOnelineStyle(e){this.layout.add(3,5,this.showKw(e.nameKw),0),this.layout=this.formatSubExpression(e.children)}formatClauseInTabularStyle(e){this.layout.add(3,5,this.showKw(e.nameKw),0),this.layout.indentation.increaseTopLevel(),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseTopLevel()}formatSetOperation(e){this.layout.add(3,5,this.showKw(e.nameKw),3),this.layout.add(5),this.layout=this.formatSubExpression(e.children)}formatLimitClause(e){this.withComments(e.limitKw,()=>{this.layout.add(3,5,this.showKw(e.limitKw))}),this.layout.indentation.increaseTopLevel(),zs(this.cfg)?this.layout.add(0):this.layout.add(3,5),e.offset?(this.layout=this.formatSubExpression(e.offset),this.layout.add(1,",",0),this.layout=this.formatSubExpression(e.count)):this.layout=this.formatSubExpression(e.count),this.layout.indentation.decreaseTopLevel()}formatAllColumnsAsterisk(e){this.layout.add("*",0)}formatLiteral(e){this.layout.add(e.text,0)}formatIdentifier(e){this.layout.add(this.showIdentifier(e),0)}formatParameter(e){this.layout.add(this.params.get(e),0)}formatOperator({text:e}){this.cfg.denseOperators||this.dialectCfg.alwaysDenseOperators.includes(e)?this.layout.add(1,e):e===":"?this.layout.add(1,e,0):this.layout.add(e,0)}formatComma(e){this.inline?this.layout.add(1,",",0):this.layout.add(1,",",3,5)}withComments(e,s){this.formatComments(e.leadingComments),s(),this.formatComments(e.trailingComments)}formatComments(e){e&&e.forEach(s=>{s.type==="line_comment"?this.formatLineComment(s):this.formatBlockComment(s)})}formatLineComment(e){ki(e.precedingWhitespace||"")?this.layout.add(3,5,e.text,4,5):this.layout.getLayoutItems().length>0?this.layout.add(2,0,e.text,4,5):this.layout.add(e.text,4,5)}formatBlockComment(e){e.type==="block_comment"&&this.isMultilineBlockComment(e)?(this.splitBlockComment(e.text).forEach(s=>{this.layout.add(3,5,s)}),this.layout.add(3,5)):this.layout.add(e.text,0)}isMultilineBlockComment(e){return ki(e.text)||ki(e.precedingWhitespace||"")}isDocComment(e){const s=e.split(/\n/);return/^\/\*\*?$/.test(s[0])&&s.slice(1,s.length-1).every(r=>/^\s*\*/.test(r))&&/^\s*\*\/$/.test(TE(s))}splitBlockComment(e){return this.isDocComment(e)?e.split(/\n/).map(s=>/^\s*\*/.test(s)?" "+s.replace(/^\s*/,""):s):e.split(/\n/).map(s=>s.replace(/^\s*/,""))}formatSubExpression(e){return new DT({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:this.layout,inline:this.inline}).format(e)}formatInlineExpression(e){const s=this.params.getPositionalParameterIndex();try{return new DT({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:new Pf(this.cfg.expressionWidth),inline:!0}).format(e)}catch(r){if(r instanceof hT){this.params.setPositionalParameterIndex(s);return}else throw r}}formatKeywordNode(e){switch(e.tokenType){case"RESERVED_JOIN":return this.formatJoin(e);case"AND":case"OR":case"XOR":return this.formatLogicalOperator(e);default:return this.formatKeyword(e)}}formatJoin(e){zs(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(3,5,this.showKw(e),0),this.layout.indentation.increaseTopLevel()):this.layout.add(3,5,this.showKw(e),0)}formatKeyword(e){this.layout.add(this.showKw(e),0)}formatLogicalOperator(e){this.cfg.logicalOperatorNewline==="before"?zs(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(3,5,this.showKw(e),0),this.layout.indentation.increaseTopLevel()):this.layout.add(3,5,this.showKw(e),0):this.layout.add(this.showKw(e),3,5)}formatDataType(e){this.layout.add(this.showDataType(e),0)}showKw(e){return ER(e.tokenType)?rR(this.showNonTabularKw(e),this.cfg.indentStyle):this.showNonTabularKw(e)}showNonTabularKw(e){switch(this.cfg.keywordCase){case"preserve":return en(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}showFunctionKw(e){return ER(e.tokenType)?rR(this.showNonTabularFunctionKw(e),this.cfg.indentStyle):this.showNonTabularFunctionKw(e)}showNonTabularFunctionKw(e){switch(this.cfg.functionCase){case"preserve":return en(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}showIdentifier(e){if(e.quoted)return e.text;switch(this.cfg.identifierCase){case"preserve":return e.text;case"upper":return e.text.toUpperCase();case"lower":return e.text.toLowerCase()}}showDataType(e){switch(this.cfg.dataTypeCase){case"preserve":return en(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}},Uf=class{constructor(t,e){this.dialect=t,this.cfg=e,this.params=new af(this.cfg.params)}format(t){const e=this.parse(t);return this.formatAst(e).trimEnd()}parse(t){return ff(this.dialect.tokenizer).parse(t,this.cfg.paramTypes||{})}formatAst(t){return t.map(e=>this.formatStatement(e)).join(`
`.repeat(this.cfg.linesBetweenQueries+1))}formatStatement(t){const e=new Mf({cfg:this.cfg,dialectCfg:this.dialect.formatOptions,params:this.params,layout:new yI(new mI(of(this.cfg)))}).format(t.children);return t.hasSemicolon&&(this.cfg.newlineBeforeSemicolon?e.add(3,";"):e.add(2,";")),e.toString()}},tn=class extends Error{};function yf(t){const e=["multilineLists","newlineBeforeOpenParen","newlineBeforeCloseParen","aliasAs","commaPosition","tabulateAlias"];for(const s of e)if(s in t)throw new tn(`${s} config is no more supported.`);if(t.expressionWidth<=0)throw new tn(`expressionWidth config must be positive number. Received ${t.expressionWidth} instead.`);if(t.params&&!mf(t.params)&&console.warn('WARNING: All "params" option values should be strings.'),t.paramTypes&&!Bf(t.paramTypes))throw new tn("Empty regex given in custom paramTypes. That would result in matching infinite amount of parameters.");return t}function mf(t){return(t instanceof Array?t:Object.values(t)).every(s=>typeof s=="string")}function Bf(t){return t.custom&&Array.isArray(t.custom)?t.custom.every(e=>e.regex!==""):!0}var BI={bigquery:"bigquery",db2:"db2",db2i:"db2i",hive:"hive",mariadb:"mariadb",mysql:"mysql",n1ql:"n1ql",plsql:"plsql",postgresql:"postgresql",redshift:"redshift",spark:"spark",sqlite:"sqlite",sql:"sql",tidb:"tidb",trino:"trino",transactsql:"transactsql",tsql:"transactsql",singlestoredb:"singlestoredb",snowflake:"snowflake"},Ff=Object.keys(BI),Gf={tabWidth:2,useTabs:!1,keywordCase:"preserve",identifierCase:"preserve",dataTypeCase:"preserve",functionCase:"preserve",indentStyle:"standard",logicalOperatorNewline:"before",expressionWidth:50,linesBetweenQueries:1,denseOperators:!1,newlineBeforeSemicolon:!1},bf=(t,e={})=>{if(typeof e.language=="string"&&!Ff.includes(e.language))throw new tn(`Unsupported SQL dialect: ${e.language}`);const s=BI[e.language||"sql"];return gf(t,Ve(ge({},e),{dialect:uI[s]}))},gf=(t,e)=>{var s=e,{dialect:r}=s,E=M_(s,["dialect"]);if(typeof t!="string")throw new Error("Invalid query argument. Expected string, instead got "+typeof t);const n=yf(ge(ge({},Gf),E));return new Uf(Ef(r),n).format(t)};const ks=(t,e)=>{const s=t.__vccOpts||t;for(const[r,E]of e)s[r]=E;return s},Hf={name:"Uploader",data(){return{fileUrl:"",samples:[{name:"sample.csv",url:"/sample.csv"},{name:"sample.json",url:"/sample.json"},{name:"sample.parquet",url:"/sample.parquet"}]}},methods:{onDragOver(t){this.$emit("dragover",t)},onDrop(t){const e=Array.from(t.dataTransfer.files);this.$emit("drop",e)},triggerFileSelect(){this.$refs.fileInput.click()},onFileSelect(t){const e=t.target.files[0];e&&this.$emit("file-selected",e)},async onPaste(t){var s;t.preventDefault();const e=(s=t.clipboardData)==null?void 0:s.getData("text");e&&(this.fileUrl=e.trim(),await this.loadRemoteFile(this.fileUrl))},async loadSample(t){await this.loadRemoteFile(t.url)},async loadRemoteFile(t){try{const e=await fetch(t);if(!e.ok)throw new Error(`Could not fetch file:
 ${e.status} ${e.statusText}`);const s=await e.blob();let r="txt";t.includes(".")&&(r=t.split(".").pop().split("?")[0]||"txt");const E=`remote_file.${r}`,n=new File([s],E,{type:s.type});this.$emit("file-selected",n),this.fileUrl="",this.$refs.urlInput&&(this.$refs.urlInput.value="")}catch(e){alert(`Error loading file:
`+e.message)}}}},Yf={class:"flex-1 flex flex-col items-center justify-center p-6"},vf={class:"mb-8"},wf={class:"flex space-x-2 justify-center"},Vf=["onClick"],Wf={class:"mt-3 w-full flex"};function xf(t,e,s,r,E,n){return Oe(),fe("div",Yf,[f("div",vf,[e[6]||(e[6]=f("h2",{class:"text-lg font-semibold text-gray-200 mb-2 text-center"},"Samples",-1)),f("div",wf,[(Oe(!0),fe(Ke,null,Lr(E.samples,i=>(Oe(),fe("button",{key:i.name,onClick:T=>n.loadSample(i),class:"px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded-md text-sm"},ct(i.name),9,Vf))),128))])]),f("div",{class:"w-96 h-64 border-4 border-dashed border-gray-600 rounded-xl flex flex-col items-center justify-center p-4 bg-gray-800 hover:bg-gray-700 cursor-pointer transition",onDragover:e[3]||(e[3]=os((...i)=>n.onDragOver&&n.onDragOver(...i),["prevent"])),onDrop:e[4]||(e[4]=os((...i)=>n.onDrop&&n.onDrop(...i),["prevent"])),onClick:e[5]||(e[5]=(...i)=>n.triggerFileSelect&&n.triggerFileSelect(...i))},[e[7]||(e[7]=f("h2",{class:"text-xl font-bold mb-2"},"Drop files here",-1)),e[8]||(e[8]=f("p",{class:"text-sm text-gray-400 mb-2"},"or paste URL",-1)),e[9]||(e[9]=f("button",{class:"px-4 py-2 bg-blue-700 hover:bg-blue-600 rounded-md"}," Upload File ",-1)),f("input",{type:"file",ref:"fileInput",class:"hidden",onChange:e[0]||(e[0]=(...i)=>n.onFileSelect&&n.onFileSelect(...i))},null,544),f("div",Wf,[f("input",{ref:"urlInput",type:"text",class:"flex-1 p-2 bg-gray-700 border border-gray-600 rounded-md text-sm",placeholder:"Paste file URL here...",onClick:e[1]||(e[1]=os(()=>{},["stop"])),onPaste:e[2]||(e[2]=os((...i)=>n.onPaste&&n.onPaste(...i),["prevent"]))},null,544)])],32)])}const Xf=ks(Hf,[["render",xf],["__scopeId","data-v-d1e83400"]]),Kf={name:"Sidebar",props:{currentFile:{type:Object,required:!0},fileExtension:{type:String,required:!0},uploadDate:{type:String,required:!0},fileRowCount:{type:[Number,String],required:!0},fileColumns:{type:Array,required:!0},csvOptions:{type:Object,required:!0},jsonOptions:{type:Object,required:!0},excelOptions:{type:Object,required:!0},importError:{type:String,default:null},aliasName:{type:String,default:""},sqliteTables:{type:Array,default:()=>[]}},data(){return{fileUrl:""}},methods:{formatFileSize(t){if(t===0)return"0 Bytes";const e=1024,s=["Bytes","KB","MB","GB","TB"],r=Math.floor(Math.log(t)/Math.log(e));return parseFloat((t/Math.pow(e,r)).toFixed(2))+" "+s[r]},onDragOver(t){t.preventDefault(),t.stopPropagation()},onDrop(t){const s=Array.from(t.dataTransfer.files).find(r=>this.isStructuredFile(r));if(!s){alert("Please drop a valid structured file type.");return}this.$emit("file-selected",s)},triggerFileSelect(){this.$refs.fileInputReplace.click()},handleFileReplace(t){const e=t.target.files[0];e&&this.isStructuredFile(e)?this.$emit("file-selected",e):alert("Invalid file type. Must be CSV, TSV, TXT, JSON, Parquet, Excel, or SQLite.")},isStructuredFile(t){const e=t.name.split(".").pop().toLowerCase();return["csv","tsv","txt","json","parquet","xlsx","xls","sqlite"].includes(e)},async onPaste(t){var s;t.preventDefault();const e=(s=t.clipboardData)==null?void 0:s.getData("text");if(e){this.fileUrl=e.trim();try{const r=await fetch(this.fileUrl);if(!r.ok)throw new Error(`Failed to fetch: ${r.status} ${r.statusText}`);const E=await r.blob();let n="txt";this.fileUrl.includes(".")&&(n=this.fileUrl.split(".").pop().split("?")[0]||"txt");const i=`remote_file.${n}`,T=new File([E],i,{type:E.type});this.$emit("file-selected",T),this.fileUrl="",this.$refs.urlInput&&(this.$refs.urlInput.value="")}catch(r){alert(`Error loading file from URL:
`+r.message)}}}}},$f={class:"hidden md:flex md:flex-col border-r border-gray-700 bg-gray-800 p-4 h-full",style:{overflow:"auto","min-width":"250px","max-width":"320px"}},Jf={class:"flex-1 overflow-y-auto space-y-6"},kf={class:"overflow-y-auto max-h-64"},qf={class:"w-full text-sm rounded-md shadow-inner table-fixed"},Qf={class:"p-3 border-b border-gray-600 overflow-hidden text-ellipsis whitespace-nowrap"},jf={class:"p-3 border-b border-gray-600 overflow-hidden text-ellipsis whitespace-nowrap"},Zf={class:"space-y-1 text-sm text-gray-200"},zf={class:"mt-6"},eh={class:"mt-4"},th={class:"text-center"},sh={class:"mt-2 flex"};function rh(t,e,s,r,E,n){return Oe(),fe("aside",$f,[f("div",Jf,[f("div",null,[e[6]||(e[6]=f("h2",{class:"text-lg font-semibold mb-3"},"Columns",-1)),f("div",kf,[f("table",qf,[f("tbody",null,[(Oe(!0),fe(Ke,null,Lr(s.fileColumns,i=>(Oe(),fe("tr",{key:i.column_name,class:"hover:bg-gray-800 transition-colors duration-200"},[f("td",Qf,ct(i.column_name),1),f("td",jf,ct(i.column_type),1)]))),128))])])])]),f("div",null,[e[11]||(e[11]=f("h2",{class:"text-lg font-semibold mb-3"},"File Details",-1)),f("ul",Zf,[f("li",null,[e[7]||(e[7]=f("span",{class:"font-semibold text-gray-300"},"Name:",-1)),Ir(" "+ct(s.currentFile.name),1)]),f("li",null,[e[8]||(e[8]=f("span",{class:"font-semibold text-gray-300"},"Size:",-1)),Ir(" "+ct(n.formatFileSize(s.currentFile.size)),1)]),f("li",null,[e[9]||(e[9]=f("span",{class:"font-semibold text-gray-300"},"Rows:",-1)),Ir(" "+ct(s.fileRowCount),1)]),f("li",null,[e[10]||(e[10]=f("span",{class:"font-semibold text-gray-300"},"Extension:",-1)),Ir(" "+ct(s.fileExtension),1)])])])]),f("div",zf,[f("div",eh,[f("div",{class:"w-full h-40 border-2 border-dashed border-gray-500 rounded-md flex items-center justify-center bg-gray-700 hover:bg-gray-600 cursor-pointer transition",onDragover:e[3]||(e[3]=os((...i)=>n.onDragOver&&n.onDragOver(...i),["prevent"])),onDrop:e[4]||(e[4]=os((...i)=>n.onDrop&&n.onDrop(...i),["prevent"])),onClick:e[5]||(e[5]=(...i)=>n.triggerFileSelect&&n.triggerFileSelect(...i))},[f("div",th,[e[12]||(e[12]=f("svg",{xmlns:"http://www.w3.org/2000/svg",class:"h-8 w-8 mx-auto text-gray-300",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[f("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M4 16v2a2 2 0 002 2h12a2 2 0 002-2v-2M12 12v6m0 0l-3-3m3 3l3-3"})],-1)),e[13]||(e[13]=f("p",{class:"text-gray-300 mt-2 font-semibold"},"Drag & Drop to Re-upload",-1)),e[14]||(e[14]=f("p",{class:"text-gray-400 text-sm"},"or paste url",-1)),f("div",sh,[f("input",{ref:"urlInput",type:"text",class:"flex-1 p-2 bg-gray-700 border border-gray-600 rounded-md text-sm",placeholder:"https://example.com/data.csv",onClick:e[0]||(e[0]=os(()=>{},["stop"])),onPaste:e[1]||(e[1]=os((...i)=>n.onPaste&&n.onPaste(...i),["prevent"]))},null,544)])]),f("input",{type:"file",ref:"fileInputReplace",class:"hidden",onChange:e[2]||(e[2]=(...i)=>n.handleFileReplace&&n.handleFileReplace(...i))},null,544)],32)])])])}const Eh=ks(Kf,[["render",rh],["__scopeId","data-v-d02f5090"]]),nh={name:"Query",props:{query:{type:String,required:!0},isLoading:{type:Boolean,default:!1}},data(){return{localQuery:this.query}},watch:{query(t){t!==this.localQuery&&(this.localQuery=t)},localQuery(t){this.$emit("update:query",t)}},methods:{onKeyDown(t){if(t.shiftKey){const e=t.target,s=e.selectionStart,r=e.selectionEnd;this.localQuery=this.localQuery.slice(0,s)+`
`+this.localQuery.slice(r),this.$nextTick(()=>{e.selectionStart=e.selectionEnd=s+1})}else this.$emit("run-query")}}},ih={class:"p-4 bg-gray-900 flex flex-col"},Th={class:"mt-3 flex space-x-2"},oh={key:0,class:"mt-4 flex items-center space-x-2"};function ah(t,e,s,r,E,n){return Oe(),fe("div",ih,[DO(f("textarea",{"onUpdate:modelValue":e[0]||(e[0]=i=>E.localQuery=i),class:"w-full h-36 p-2 bg-gray-800 border border-gray-700 rounded-md text-sm font-mono resize-y",placeholder:"Write your SQL query here...",onKeydown:e[1]||(e[1]=rN(os((...i)=>n.onKeyDown&&n.onKeyDown(...i),["prevent"]),["enter"]))},null,544),[[zl,E.localQuery]]),f("div",Th,[f("button",{class:"px-4 py-2 bg-green-600 hover:bg-green-500 rounded-md",onClick:e[2]||(e[2]=i=>t.$emit("run-query"))}," Run "),f("button",{class:"px-4 py-2 bg-blue-600 hover:bg-blue-500 rounded-md",onClick:e[3]||(e[3]=i=>t.$emit("format-query"))}," Format ")]),s.isLoading?(Oe(),fe("div",oh,e[4]||(e[4]=[f("svg",{class:"animate-spin h-5 w-5 text-green-400",xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[f("circle",{class:"opacity-25",cx:"12",cy:"12",r:"10",stroke:"currentColor","stroke-width":"4"}),f("path",{class:"opacity-75",fill:"currentColor",d:"M4 12a8 8 0 018-8v8H4z"})],-1),f("span",{class:"text-green-400 font-bold"},"Running query, please wait...",-1)]))):Zn("",!0)])}const Rh=ks(nh,[["render",ah],["__scopeId","data-v-3b221eac"]]),Ah={name:"Results",props:{queryResults:{type:Array,required:!0},isLoading:{type:Boolean,default:!1}}},Sh={class:"flex-1 overflow-auto p-4 relative"},Ih={key:0},Oh={class:"flex justify-between items-center mb-2"},lh={class:"border border-gray-700 rounded-md overflow-auto"},Nh={class:"w-full border-collapse text-sm"},ch={class:"bg-gray-800"},uh={key:1,class:"text-gray-400 italic"};function _h(t,e,s,r,E,n){return Oe(),fe("div",Sh,[s.queryResults.length&&!s.isLoading?(Oe(),fe("div",Ih,[f("div",Oh,[e[2]||(e[2]=f("h2",{class:"text-lg font-semibold"},"Query Results",-1)),f("button",{class:"px-3 py-1 bg-purple-600 hover:bg-purple-500 rounded-md flex items-center",onClick:e[0]||(e[0]=i=>t.$emit("download-results"))},e[1]||(e[1]=[f("svg",{xmlns:"http://www.w3.org/2000/svg",class:"h-5 w-5 mr-1",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[f("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M4 16v2a2 2 0 002 2h12a2 2 0 002-2v-2M12 12v6m0 0l-3-3m3 3l3-3"})],-1),Ir(" Download ")]))]),f("div",lh,[f("table",Nh,[f("thead",ch,[f("tr",null,[(Oe(!0),fe(Ke,null,Lr(s.queryResults[0],(i,T)=>(Oe(),fe("th",{key:T,class:"p-2 border-b border-gray-700 text-left font-semibold"},ct(i),1))),128))])]),f("tbody",null,[(Oe(!0),fe(Ke,null,Lr(s.queryResults.slice(1),(i,T)=>(Oe(),fe("tr",{key:T,class:"hover:bg-gray-700"},[(Oe(!0),fe(Ke,null,Lr(i,(o,a)=>(Oe(),fe("td",{key:a,class:"p-2 border-b border-gray-700"},ct(o),1))),128))]))),128))])])])])):s.isLoading?Zn("",!0):(Oe(),fe("div",uh," No query results yet, or table is empty. "))])}const Lh=ks(Ah,[["render",_h],["__scopeId","data-v-f3b88406"]]);function dh(t){return JSON.stringify(t,(e,s)=>typeof s=="bigint"?s.toString():s)}const Ch={name:"Interface",components:{Uploader:Xf,Sidebar:Eh,Query:Rh,Results:Lh},props:{historyItem:{type:Object,default:null}},data(){return{currentFile:null,fileExtension:"",tableName:"",quotedTableName:"",aliasName:"",query:"",queryResults:[],fileRowCount:null,fileColumns:[],isLoading:!1,importError:null,csvOptions:{delimiter:",",header:!0},jsonOptions:{format:"auto"},excelOptions:{sheet:"1"},sqliteTables:[],uploadTimestamp:null}},computed:{uploadDate(){return this.uploadTimestamp?new Date(this.uploadTimestamp).toLocaleString():"N/A"}},watch:{historyItem(t){t&&(this.query=t.query,this.queryResults=t.results)},queryResults(t){localStorage.setItem("sqlchef-last-results",dh(t))},query(t){localStorage.setItem("sqlchef-last-query",t||"")}},mounted(){const t=localStorage.getItem("sqlchef-last-results");if(t)try{this.queryResults=JSON.parse(t)}catch(e){console.warn("Could not parse saved results:",e)}},methods:{insertNewline(){const t=this.$el.querySelector("textarea");if(t){const e=t.selectionStart,s=t.selectionEnd;this.query=this.query.slice(0,e)+`
`+this.query.slice(s),this.$nextTick(()=>{t.selectionStart=t.selectionEnd=e+1})}},updateQuery(t){this.query=t},beautifySQL(){try{this.query=bf(this.query,{language:"sql",uppercase:!0})}catch(t){console.warn("SQL Beautify failed:",t)}},handleDragOver(t){},handleDrop(t){const e=t.find(s=>this.isStructuredFile(s));if(!e){alert("Please drop a valid structured file type.");return}this.proceedToAnalysis(e)},triggerFileSelectReplace(){this.$refs.fileInputReplace.click()},handleFileSelect(t){t&&this.isStructuredFile(t)?this.proceedToAnalysis(t):alert("Invalid file type. Must be CSV, TSV, TXT, JSON, Parquet, Excel, or SQLite.")},handleFileReplace(t){const e=t.target.files[0];e&&this.isStructuredFile(e)?this.proceedToAnalysis(e):alert("Invalid file type. Must be CSV, TSV, TXT, JSON, Parquet, Excel, or SQLite.")},isStructuredFile(t){const e=t.name.split(".").pop().toLowerCase();return["csv","tsv","txt","json","parquet","xlsx","xls","sqlite"].includes(e)},async proceedToAnalysis(t){this.importError=null,this.sqliteTables=[],this.currentFile=t,this.uploadTimestamp=Date.now();const e=t.name.split(".").pop().toLowerCase();this.fileExtension=e;const s=t.name.replace(/\.[^/.]+$/,"");this.tableName=s,this.quotedTableName=`"${s.replace(/"/g,'""')}"`,this.aliasName=`db_${s.replace(/\W+/g,"_")}`.toLowerCase(),this.query=`SELECT * FROM ${this.quotedTableName} LIMIT 10;`;try{await this.createTableInDuckDB(t,e),await this.runQuery(),await this.fetchFileMetadata()}catch(r){console.error("Error loading file:",r),this.importError=r.message||String(r)}},async recreateTable(){if(this.currentFile){this.importError=null,this.sqliteTables=[];try{await this.createTableInDuckDB(this.currentFile,this.fileExtension),await this.runQuery(),await this.fetchFileMetadata()}catch(t){console.error("Error re-parsing file:",t),this.importError=t.message||String(t)}}},async createTableInDuckDB(t,e){const{db:s}=await OI(),r=await t.arrayBuffer(),E=new Uint8Array(r),n="/"+t.name;await s.registerFileBuffer(n,E);let i="";if(["csv","txt","tsv"].includes(e)){const T=this.csvOptions.delimiter||",",o=this.csvOptions.header?"true":"false";i=`
            CREATE OR REPLACE TABLE ${this.quotedTableName} AS
            SELECT * FROM read_csv('${n}', delim='${T}', header=${o});
          `}else if(e==="json")this.jsonOptions.format==="ndjson"?i=`
              CREATE OR REPLACE TABLE ${this.quotedTableName} AS
              SELECT * FROM read_ndjson('${n}');
            `:i=`
              CREATE OR REPLACE TABLE ${this.quotedTableName} AS
              SELECT * FROM read_json_auto('${n}');
            `;else if(e==="parquet")i=`
            CREATE OR REPLACE TABLE ${this.quotedTableName} AS
            SELECT * FROM read_parquet('${n}');
          `;else if(e==="sqlite"){await s.attachWASMDatabase(E,this.aliasName);const T=await Xr(`SELECT name FROM ${this.aliasName}.main.sqlite_master WHERE type='table';`);this.sqliteTables=T.map(o=>o.name);return}else i=`
            CREATE OR REPLACE TABLE ${this.quotedTableName} AS
            SELECT * FROM read_csv_auto('${n}');
          `;i&&await Xr(i)},async fetchFileMetadata(){if(this.fileExtension!=="sqlite")try{const t=await Xr(`SELECT COUNT(*) as ct FROM ${this.quotedTableName};`);t.length>0&&(this.fileRowCount=t[0].ct);const e=await Xr(`PRAGMA table_info(${this.quotedTableName});`);this.fileColumns=e.map(s=>({column_name:s.name,column_type:s.type}))}catch(t){console.warn("Metadata fetch fail:",t),this.fileRowCount=null,this.fileColumns=[]}},async runQuery(){if(this.isLoading){console.warn("runQuery() called while already loading. Skipping.");return}console.log("Starting query:",this.query),this.isLoading=!0,this.queryResults=[];try{const t=await Xr(this.query);if(console.log("Query results:",t),t.length){const e=Object.keys(t[0]),s=t.map(r=>Object.values(r));this.queryResults=[e,...s]}}catch(t){console.error("Query error:",t),alert(`Query error: ${t.message||t}`)}finally{this.isLoading=!1,console.log("Query finished, isLoading set to false")}this.$emit("query-ran",{query:this.query,results:this.queryResults})},insertSampleSql(t){this.query=`SELECT * FROM ${this.aliasName}.main."${t}" LIMIT 10;`},downloadResults(){if(!this.queryResults.length)return;const t=this.queryResults[0],e=this.queryResults.slice(1),s=[t.join(","),...e.map(i=>i.map(T=>`"${String(T).replace(/"/g,'""')}"`).join(","))].join(`
`),r=new Blob([s],{type:"text/csv;charset=utf-8;"}),E=URL.createObjectURL(r),n=document.createElement("a");n.setAttribute("href",E),n.setAttribute("download","query_results.csv"),document.body.appendChild(n),n.click(),document.body.removeChild(n)},formatFileSize(t){if(t===0)return"0 Bytes";const e=1024,s=["Bytes","KB","MB","GB","TB"],r=Math.floor(Math.log(t)/Math.log(e));return parseFloat((t/Math.pow(e,r)).toFixed(2))+" "+s[r]}}},fh={class:"w-full flex-1 flex flex-col overflow-hidden text-gray-200 bg-gray-900 relative"},hh={key:1,class:"flex-1 flex overflow-hidden"},Dh={class:"flex-1 flex flex-col overflow-hidden"};function ph(t,e,s,r,E,n){const i=Sr("Uploader"),T=Sr("Sidebar"),o=Sr("Query"),a=Sr("Results");return Oe(),fe("div",fh,[!E.currentFile&&!s.historyItem?(Oe(),on(i,{key:0,onDragover:n.handleDragOver,onDrop:n.handleDrop,onFileSelected:n.handleFileSelect},null,8,["onDragover","onDrop","onFileSelected"])):(Oe(),fe("div",hh,[E.currentFile?(Oe(),on(T,{key:0,currentFile:E.currentFile,fileExtension:E.fileExtension,uploadDate:n.uploadDate,fileRowCount:E.fileRowCount,fileColumns:E.fileColumns,csvOptions:E.csvOptions,jsonOptions:E.jsonOptions,excelOptions:E.excelOptions,importError:E.importError,aliasName:E.aliasName,sqliteTables:E.sqliteTables,onRecreateTable:n.recreateTable,onInsertSampleSql:n.insertSampleSql,onFileSelected:n.handleFileSelect},null,8,["currentFile","fileExtension","uploadDate","fileRowCount","fileColumns","csvOptions","jsonOptions","excelOptions","importError","aliasName","sqliteTables","onRecreateTable","onInsertSampleSql","onFileSelected"])):Zn("",!0),f("div",Dh,[Lt(o,{query:E.query,isLoading:E.isLoading,"onUpdate:query":n.updateQuery,onRunQuery:n.runQuery,onFormatQuery:n.beautifySQL,onInsertNewline:n.insertNewline},null,8,["query","isLoading","onUpdate:query","onRunQuery","onFormatQuery","onInsertNewline"]),Lt(a,{queryResults:E.queryResults,isLoading:E.isLoading,onDownloadResults:n.downloadResults},null,8,["queryResults","isLoading","onDownloadResults"])])])),f("input",{type:"file",ref:"fileInputReplace",class:"hidden",onChange:e[0]||(e[0]=(...R)=>n.handleFileReplace&&n.handleFileReplace(...R))},null,544)])}const Ph=ks(Ch,[["render",ph],["__scopeId","data-v-4aae973f"]]),Mh={name:"HistoryModal",props:{history:{type:Array,default:()=>[]}},methods:{truncate(t,e){return t?t.length>e?t.slice(0,e)+"...":t:""}}},Uh={class:"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center"},yh={class:"bg-gray-800 p-4 rounded-xl w-96 max-h-[80vh] overflow-auto"},mh={class:"flex justify-between items-center mb-4"},Bh={class:"flex space-x-2"},Fh={key:0,class:"text-gray-400 italic text-sm mt-2"},Gh={key:1,class:"space-y-2"},bh=["onClick"],gh={class:"text-sm opacity-70 mb-1"},Hh={class:"font-mono text-xs text-gray-100"};function Yh(t,e,s,r,E,n){return Oe(),fe("div",Uh,[f("div",yh,[f("div",mh,[e[4]||(e[4]=f("h2",{class:"text-xl font-semibold"},"Query History",-1)),f("div",Bh,[f("button",{onClick:e[0]||(e[0]=i=>t.$emit("clear-history")),class:"p-1 bg-red-600 hover:bg-red-500 text-white rounded flex items-center justify-center",title:"Clear History"},e[2]||(e[2]=[f("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[f("path",{d:"M3.49997 12.8995C2.71892 13.6805 2.71892 14.9468 3.49997 15.7279L7.35785 19.5858H4.08576C3.53347 19.5858 3.08576 20.0335 3.08576 20.5858C3.08576 21.1381 3.53347 21.5858 4.08576 21.5858H20.0858C20.638 21.5858 21.0858 21.1381 21.0858 20.5858C21.0858 20.0335 20.638 19.5858 20.0858 19.5858H10.9558L20.4705 10.071C21.2516 9.28999 21.2516 8.02366 20.4705 7.24261L16.2279 2.99997C15.4468 2.21892 14.1805 2.21892 13.3995 2.99997L3.49997 12.8995ZM7.82579 11.4021L4.91418 14.3137L9.15683 18.5563L12.0684 15.6447L7.82579 11.4021ZM9.24 9.98787L13.4826 14.2305L19.0563 8.65683L14.8137 4.41418L9.24 9.98787Z"})],-1)])),f("button",{onClick:e[1]||(e[1]=i=>t.$emit("close")),class:"px-2 py-1 bg-gray-700 hover:bg-gray-600 rounded",title:"Close"},e[3]||(e[3]=[f("svg",{xmlns:"http://www.w3.org/2000/svg",class:"h-4 w-4",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor","stroke-width":"2"},[f("path",{"stroke-linecap":"round","stroke-linejoin":"round",d:"M6 18L18 6M6 6l12 12"})],-1)]))])]),s.history.length?(Oe(),fe("ul",Gh,[(Oe(!0),fe(Ke,null,Lr(s.history,(i,T)=>(Oe(),fe("li",{key:T,class:"bg-gray-700 p-2 rounded hover:bg-gray-600 cursor-pointer transition",onClick:o=>t.$emit("restore",i)},[f("div",gh,ct(i.timestamp),1),f("div",Hh,ct(n.truncate(i.query,100)),1)],8,bh))),128))])):(Oe(),fe("div",Fh," No queries in history. "))])])}const vh=ks(Mh,[["render",Yh],["__scopeId","data-v-94b47081"]]),wh="/SQLChef/sqlchef.svg";function Vh(t){return JSON.stringify(t,(e,s)=>typeof s=="bigint"?s.toString():s)}const Wh={name:"App",components:{Interface:Ph,HistoryModal:vh},data(){return{showHistory:!1,queryHistory:[],selectedHistoryItem:null}},mounted(){const t=localStorage.getItem("sqlchef-history");if(t)try{this.queryHistory=JSON.parse(t)}catch(e){console.warn("Could not parse saved history:",e)}},watch:{queryHistory:{deep:!0,handler(t){localStorage.setItem("sqlchef-history",Vh(t))}}},methods:{toggleHistory(){this.showHistory=!this.showHistory},onQueryRan({query:t,results:e}){this.queryHistory.push({query:t,results:e,timestamp:new Date().toLocaleString()})},restoreItem(t){this.selectedHistoryItem=t,this.showHistory=!1},clearHistory(){this.queryHistory=[],localStorage.removeItem("sqlchef-history")}}},xh={id:"app"},Xh={class:"app-header flex items-center justify-between px-4 py-2 bg-gray-800"},Kh={class:"flex items-center space-x-4"};function $h(t,e,s,r,E,n){const i=Sr("Interface"),T=Sr("HistoryModal");return Oe(),fe("div",xh,[f("header",Xh,[e[4]||(e[4]=f("div",{class:"flex items-center"},[f("a",{href:"/",class:"flex items-center"},[f("img",{src:wh,alt:"SQL Chef Logo",class:"h-8 w-8 mr-2"}),f("h1",{class:"text-xl font-semibold"},"SQLChef")])],-1)),f("div",Kh,[f("button",{onClick:e[0]||(e[0]=(...o)=>n.toggleHistory&&n.toggleHistory(...o)),class:"text-blue-400 hover:text-blue-300 flex items-center p-2 border-0 bg-transparent outline-none focus:outline-none active:outline-none",title:"Query History"},e[2]||(e[2]=[f("svg",{height:"21px",version:"1.1",viewBox:"0 0 20 21",width:"20px",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor","xmlns:sketch":"http://www.bohemiancoding.com/sketch/ns","xmlns:xlink":"http://www.w3.org/1999/xlink"},[f("title",null,"History Icon"),f("desc",null,"Clock arrow indicating history"),f("defs"),f("g",{fill:"none","fill-rule":"evenodd",stroke:"none","stroke-width":"1"},[f("path",{d:"M10.5,0 C7,0 3.9,1.9 2.3,4.8 L0,2.5 L0,9 L6.5,9 L3.7,6.2 C5,3.7 7.5,2 10.5,2 C14.6,2 18,5.4 18,9.5 C18,13.6 14.6,17 10.5,17 C7.2,17 4.5,14.9 3.4,12 L1.3,12 C2.4,16 6.1,19 10.5,19 C15.8,19 20,14.7 20,9.5 C20,4.3 15.7,0 10.5,0 Z M9,5 L9,10.1 L13.7,12.9 L14.5,11.6 L10.5,9.2 L10.5,5 L9,5 Z",fill:"currentColor"})])],-1)])),e[3]||(e[3]=f("a",{href:"#",class:"text-blue-400 hover:text-blue-300 flex items-center"},[f("svg",{xmlns:"http://www.w3.org/2000/svg",class:"h-6 w-6 mr-1",viewBox:"0 0 24 24",fill:"currentColor"},[f("path",{d:`M12 0C5.373 0 0 5.373 0 12c0 5.303 3.438 9.8 8.205
              11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04
              -3.338.724-4.042-1.61-4.042-1.61 C4.422 17.07 3.633 16.7
              3.633 16.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838
              1.236 1.838 1.236 1.07 1.835 2.807 1.305 3.495.998
              .108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.333
              -5.466-5.93 0-1.31.468-2.38 1.235-3.22-.135-.303
              -.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23
              a11.52 11.52 0 013.003-.404c1.02.005 2.045.138
              3.003.404 2.28-1.552 3.285-1.23 3.285-1.23.645
              1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23
              3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096
              .81 2.21 0 1.596-.015 2.877-.015 3.27 0 .315.21.69
              .825.57C20.565 21.796 24 17.3 24 12c0-6.627-5.373
              -12-12-12z`})])],-1))])]),Lt(i,{ref:"interface","history-item":E.selectedHistoryItem,onQueryRan:n.onQueryRan},null,8,["history-item","onQueryRan"]),E.showHistory?(Oe(),on(T,{key:0,history:E.queryHistory,onClose:e[1]||(e[1]=o=>E.showHistory=!1),onRestore:n.restoreItem,onClearHistory:n.clearHistory},null,8,["history","onRestore","onClearHistory"])):Zn("",!0)])}const Jh=ks(Wh,[["render",$h]]);iN(Jh).mount("#app");
